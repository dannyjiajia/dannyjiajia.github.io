"use strict";(self.webpackChunkdannyjiajia_github_io=self.webpackChunkdannyjiajia_github_io||[]).push([[1450],{14:e=>{e.exports=JSON.parse('{"permalink":"/2016/etc1-alpha-on-android-cocos2dx","source":"@site/blog/2016/etc1-alpha-on-android-cocos2dx.md","title":"Cocos2dx\u4f7f\u7528ETC1+Alpha\u538b\u7f29\u7eb9\u7406","description":"\u6211\u4eec\u4e3a\u4e86\u4f18\u5316\u6e38\u620f\u7684\u5185\u5b58\u5360\u7528,\u4f1a\u7ed9\u56fe\u7247\u8d44\u6e90\u8fdb\u884c\u6709\u635f\u538b\u7f29,\u5728Android\u4e0a\u5219\u662f\u4f7f\u7528ETC1(Ericsson texture compression)\u8fdb\u884c\u7eb9\u7406\u538b\u7f29,\u538b\u7f29\u7eb9\u7406\u65e0\u8bba\u4ece\u52a0\u8f7d\u901f\u5ea6(GPU\u8bc6\u522b)\u548c\u5185\u5b58\u5360\u7528\u90fd\u6709\u5f88\u5927\u7684\u4f18\u52bf,\u552f\u4e00\u7684\u7f3a\u70b9\u5c31\u662f\u6709\u635f\u3002","date":"2016-07-15T13:41:42.000Z","tags":[{"inline":true,"label":"zlib","permalink":"/tags/zlib"},{"inline":true,"label":"Cocos2dx","permalink":"/tags/cocos-2-dx"},{"inline":true,"label":"Android","permalink":"/tags/android"},{"inline":true,"label":"ETC","permalink":"/tags/etc"},{"inline":true,"label":"Optimize","permalink":"/tags/optimize"}],"readingTime":10.91,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Cocos2dx\u4f7f\u7528ETC1+Alpha\u538b\u7f29\u7eb9\u7406","date":"2016-07-15T13:41:42.000Z","tags":["zlib","Cocos2dx","Android","ETC","Optimize"]},"unlisted":false,"prevItem":{"title":"WindowsPhone\u7684TextBox\u591a\u884c\u652f\u6301\u53ca\u7591\u95ee","permalink":"/2016/multiline-textbox-wp8-1"},"nextItem":{"title":"quick\u7684ScrollView\u968f\u60f3","permalink":"/2016/think-about-scrollview"}}')},3822:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var i=r(14),a=r(4848),t=r(8453);const s={title:"Cocos2dx\u4f7f\u7528ETC1+Alpha\u538b\u7f29\u7eb9\u7406",date:new Date("2016-07-15T13:41:42.000Z"),tags:["zlib","Cocos2dx","Android","ETC","Optimize"]},c="\u4e3a\u4ec0\u4e48\u662fETC1",o={authorsImageUrls:[]},d=[{value:"ImageMagick",id:"imagemagick",level:2},{value:"PVRTexTool",id:"pvrtextool",level:2},{value:"\u538b\u7f29\u7eb9\u7406",id:"\u538b\u7f29\u7eb9\u7406",level:2},{value:"2dx(3.x)\u4e2d\u89e3\u538b",id:"2dx3x\u4e2d\u89e3\u538b",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["\u6211\u4eec\u4e3a\u4e86\u4f18\u5316\u6e38\u620f\u7684\u5185\u5b58\u5360\u7528,\u4f1a\u7ed9\u56fe\u7247\u8d44\u6e90\u8fdb\u884c",(0,a.jsx)(n.code,{children:"\u6709\u635f\u538b\u7f29"}),",\u5728Android\u4e0a\u5219\u662f\u4f7f\u7528",(0,a.jsx)(n.code,{children:"ETC1"}),"(Ericsson texture compression)\u8fdb\u884c\u7eb9\u7406\u538b\u7f29,\u538b\u7f29\u7eb9\u7406\u65e0\u8bba\u4ece\u52a0\u8f7d\u901f\u5ea6(GPU\u8bc6\u522b)\u548c\u5185\u5b58\u5360\u7528\u90fd\u6709\u5f88\u5927\u7684\u4f18\u52bf,\u552f\u4e00\u7684\u7f3a\u70b9\u5c31\u662f\u6709\u635f\u3002\n\u4e5f\u5c31\u662f\u5b83\u4e0d\u662f",(0,a.jsx)(n.code,{children:"\u4e07\u91d1\u6cb9"}),",\u5e76\u4e0d\u662f\u6240\u6709\u7684\u56fe\u7247\u90fd\u80fd\u4f7f\u7528",(0,a.jsx)(n.code,{children:"ETC1"}),"\u538b\u7f29\u3002\u6211\u5728\u8bb0\u5f55\u4e0b\u6211\u662f\u5982\u4f55\u5728",(0,a.jsx)(n.code,{children:"Cocos2dx"}),"\u4e2d\u4f7f\u7528",(0,a.jsx)(n.code,{children:"ETC1"}),"\u8fdb\u884c\u7eb9\u7406\u538b\u7f29.\u5f53\u7136\u8fd9\u91cc\u662f\u5728",(0,a.jsx)(n.code,{children:"android"}),"\u5e73\u53f0\u4e0b\u4f7f\u7528\u3002"]}),"\n",(0,a.jsxs)(n.p,{children:["ETC1\u683c\u5f0f\u662fOpenGL ES\u56fe\u5f62\u6807\u51c6\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u88ab\u6240\u6709\u7684Android\u8bbe\u5907\u6240\u652f\u6301,\u4e0d\u652f\u6301\u900f\u660e\u901a\u9053\u3002\u9700\u8981\u662fPOT\u7eb9\u7406\u3002\u867d\u7136\u540e\u9762\u7684",(0,a.jsx)(n.code,{children:"ETC2"}),"\u652f\u6301\u900f\u660e\u901a\u9053,\u4f46\u662f\u5b83\u662f",(0,a.jsx)(n.code,{children:"OpenGL 3.0"}),"\u7684\u6807\u51c6\uff0c\u5e76\u4e0d\u80fd\u88ab\u6240\u6709Android\u8bbe\u5907\u6240\u652f\u6301\uff0c\u800c",(0,a.jsx)(n.code,{children:"ETC1"}),"\u6211\u4eec\u80fd\u901a\u8fc7\u6280\u672f\u624b\u6bb5\u52a0\u5165\u900f\u660e\u901a\u9053\u3002\u53c2\u8003\u8fd9\u7bc7",(0,a.jsx)(n.a,{href:"http://malideveloper.arm.com/resources/sample-code/etcv1-texture-compression-and-alpha-channels/",children:"\u6587\u7ae0"})]}),"\n",(0,a.jsx)(n.h1,{id:"\u4e4b\u524d\u7684\u51c6\u5907",children:"\u4e4b\u524d\u7684\u51c6\u5907"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"http://malideveloper.arm.com/wp-content/uploads/2010/09/sample_code_alpha_seperate.jpg",alt:"ETC1"})}),"\n",(0,a.jsxs)(n.p,{children:["\u6211\u91c7\u7528\u5c06\u4e00\u5f20\u7eb9\u7406\u5206\u5272\u6210\u4e24\u5f20\u56fe\u7684\u65b9\u6848,\u4e5f\u5c31\u662f",(0,a.jsx)(n.code,{children:"\u56fe\u7247 = RGB\u90e8\u5206\u7eb9\u7406+Alpha\u90e8\u5206\u7eb9\u7406"}),"\u3002\u56e0\u4e3a\u7eb9\u7406\u5927\u5c0f\u7531\u4e8e\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u539f\u56e0\u662f\u6709\u9650\u5236\u7684,",(0,a.jsx)(n.code,{children:"2048x2048"}),"\u57fa\u672c\u80fd\u88ab\u4e3b\u6d41\u8bbe\u5907\u6240\u8ba4\u540c\uff0c\u5982\u679c\u91c7\u7528Alpha\u62fc\u63a5\u7684\u65b9\u5f0f,\u539f\u672c2048\u7684\u7eb9\u7406\u6700\u7ec8\u5927\u5c0f\u4f1a\u8d85\u8fc72048,\u5982\u679c\u6240\u6709\u7eb9\u7406\u52a0\u4e0a\u6700\u5927\u5c3a\u5bf81024\u7684\u9650\u5236\u53c8\u4f1a\u4f7f\u7eb9\u7406\u6570\u91cf\u589e\u591a.\u6240\u4ee5\u6700\u7ec8\u6211\u9009\u62e9\u4e86\u5206\u5272\u56fe\u7247\u7684\u65b9\u6848\u3002"]}),"\n",(0,a.jsx)(n.h2,{id:"imagemagick",children:"ImageMagick"}),"\n",(0,a.jsxs)(n.p,{children:["\u4f7f\u7528",(0,a.jsx)(n.a,{href:"http://www.imagemagick.org/script/index.php",children:"ImageMagick"}),"\u6765\u5206\u5272\u7eb9\u7406\u7684RGB\u548cAlpha\u90e8\u5206,\u4e3a\u4ec0\u4e48\u6ca1\u6709\u7528",(0,a.jsx)(n.code,{children:"Mali GPU Texture Compression"}),"\u76f4\u63a5\u751f\u6210\u5462?\u56e0\u4e3a\u5b83\u751f\u6210\u7684\u6700\u7ec8\u7684",(0,a.jsx)(n.code,{children:"pkm"}),"\u6587\u4ef6\u662f\u7ecf\u8fc7\u538b\u7f29\u7684,\u538b\u7f29\u7387\u5e76\u4e0d\u7406\u60f3\u3002\u6240\u4ee5\u540e\u9762\u6211\u4f1a\u4ecb\u7ecd\u6211\u4f7f\u7528",(0,a.jsx)(n.code,{children:"zlib"}),"\u6765\u538b\u7f29\u751f\u6210\u7684",(0,a.jsx)(n.code,{children:"ETC1"}),"\u683c\u5f0f\u7684\u7eb9\u7406\u3002"]}),"\n",(0,a.jsx)(n.p,{children:"\u5206\u79bbRGB\u90e8\u5206"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"convert logo.png -alpha Off logo_rgb.png \n"})}),"\n",(0,a.jsx)(n.p,{children:"\u5206\u79bbAlpha\u90e8\u5206"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"convert logo.png -channel A -alpha extract logo_a.png \n"})}),"\n",(0,a.jsx)(n.h2,{id:"pvrtextool",children:"PVRTexTool"}),"\n",(0,a.jsxs)(n.p,{children:["\u4f7f\u7528",(0,a.jsx)(n.a,{href:"https://community.imgtec.com/developers/powervr/tools/pvrtextool/",children:"PVRTexTool"}),"\u538b\u7f29ETC1\u7eb9\u7406,\u6ce8\u610f\u8fd9\u91cc\u751f\u6210\u7684\u6587\u4ef6\u7684\u540e\u7f00\u662f",(0,a.jsx)(n.code,{children:"pvr"}),"\uff0c\u5176\u5b9e\u5b83\u7684\u683c\u5f0f\u662f",(0,a.jsx)(n.code,{children:"ETC1"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"PVRTexTool -f ETC1 -i logo_rgb.png -o logo_rgb.pvr -q etcfast\nPVRTexTool -f ETC1 -i logo_a.png -o logo_a.pvr -q etcfast\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\u73b0\u5728",(0,a.jsx)(n.code,{children:"logo_rgb.pvr"}),"\u548c",(0,a.jsx)(n.code,{children:"logo_a.pvr"}),"\u5df2\u7ecf\u662f\u6211\u4eec\u9700\u8981\u7684",(0,a.jsx)(n.code,{children:"ETC1"}),"\u683c\u5f0f\u7684\u7eb9\u7406\u4e86,\u4f46\u662f\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u6bd4\u8f6c\u6362\u4e4b\u524d\u7684\u6587\u4ef6\u5927\u5c0f\u5927\u4e86\u5f88\u591a:(\n\u4e0d\u80fd\u589e\u52a0\u6211\u4eec\u7684\u5305\u5927\u5c0f\u662f\u4e0d?\u6240\u4ee5\u6211\u4eec\u5148\u4f7f\u7528",(0,a.jsx)(n.code,{children:"zlib"}),"\u6765\u538b\u7f29\u4e0b\u4ed6\u4eec,\u4e3a\u4ec0\u4e48\u4f7f\u7528",(0,a.jsx)(n.code,{children:"zlib"}),"? \u56e0\u4e3a2dx\u91cc\u5df2\u7ecf\u6709",(0,a.jsx)(n.code,{children:"zlib"}),"\u5e93(\u8bb0\u5f97iOS\u91cc\u7684",(0,a.jsx)(n.code,{children:"xx.pvr"}),"\u548c",(0,a.jsx)(n.code,{children:"xx.pvr.ccz"}),"\u5427,ccz\u5176\u5b9e\u5c31\u88abzlib\u538b\u7f29\u8fc7\u540e\u7684",(0,a.jsx)(n.code,{children:"PVRTC4"}),"\u7eb9\u7406),\u6211\u4eec\u4e0d\u7528\u5f15\u5165\u5176\u4ed6\u5e93,\u5077\u4e2a\u61d2:),\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u538b\u7f29\u7b97\u6cd5\uff0c\u6bd4\u5982",(0,a.jsx)(n.code,{children:"\u68a6\u5e7b\u897f\u6e38"}),"\u3002\u542c\u4ed6\u4eec\u7684\u5f00\u53d1\u8bf4,\u4f7f\u7528\u7684\u662f",(0,a.jsx)(n.code,{children:"lzma"}),"\u89e3\u538b\u8d44\u6e90,\u4f46\u662f\u5b83\u7684\u89e3\u538b\u901f\u5ea6\u4f1a\u7a0d\u6162,\u4f46\u662f\u538b\u7f29\u7387\u6bd4\u8f83\u9ad8,\u8fd9\u5c31\u9700\u8981\u4f60\u81ea\u5df1\u53d6\u820d\u4e86\u3002"]}),"\n",(0,a.jsx)(n.h2,{id:"\u538b\u7f29\u7eb9\u7406",children:"\u538b\u7f29\u7eb9\u7406"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5de5\u5177,\u4ed6\u80fd\u5c06\u7eb9\u7406\u4f7f\u7528zlib\u538b\u7f29\u6210\u4e00\u4e2a2dx\u80fd\u8bc6\u522b\u7684\u538b\u7f29\u683c\u5f0f,\u6216\u8005\u6211\u4eec\u80fd\u5728\u4ee3\u7801\u91cc\u80fd\u8bc6\u522b\u7684\u6587\u4ef6."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"\u6211\u4eec\u53ef\u4ee5\u4eff\u7167pvr.ccz\u7684\u7b56\u7565,\u4fee\u6539\u6211\u4eec\u6700\u7ec8\u751f\u6210\u538b\u7f29\u6587\u4ef6\u7684\u6587\u4ef6\u5934\u4fe1\u606f,\u544a\u8bc92dx\u4f7f\u7528zlib\u6765\u89e3\u538b\u5b83\u3002\u5b9a\u4e49\u4e00\u4e2a8\u4e2a\u5b57\u8282\u7684\u7ed3\u6784\u4f53\uff0c\u8868\u793a\u6211\u4eec\u7684\u5934\u4fe1\u606f.cpp\u4e2d\u7684\u7ed3\u6784\u4f53\u662f\u8fde\u7eed\u7684\u5185\u5b58\u5206\u914d:)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"struct ZipHeaderInfo\n{\n    char sig[4];\n    int fileSize;\n};\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\u524d\u56db\u4e2achar\u5206\u522b\u4e3a",(0,a.jsx)(n.code,{children:"!"}),",",(0,a.jsx)(n.code,{children:"E"}),",",(0,a.jsx)(n.code,{children:"T"}),",",(0,a.jsx)(n.code,{children:"C"}),",\u540e\u9762\u7684",(0,a.jsx)(n.code,{children:"int"}),"\u7528\u6765\u5b58\u50a8\u6587\u4ef6\u7684\u539f\u59cb\u5927\u5c0f\u3002"]}),"\n",(0,a.jsx)(n.p,{children:"\u6700\u7ec8\u7684\u6e90\u7801\u5982\u4e0b:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:'//\n//  CompressETCTexture\n//\n//  Created by DannyHe on 9/16/15.\n//  Copyright (c) 2015 DannyHe. All rights reserved.\n//\n\n#include "ETCCompress.h"\n\n#include <iostream>\n#include <stdlib.h>\nusing namespace std;\n\nstruct ZipHeaderInfo\n{\n    char sig[4];\n    int fileSize;\n};\n\nint ETCCompress::compressETC(const char * destpath,const char *srcpath)\n{\n    ZipHeaderInfo zipHeader;\n    \n    \n    FILE* inFile = fopen(srcpath, "rb");\n    \n    if(!inFile)\n    {\n        return -1;\n    }\n    \n    fseek(inFile, 0, SEEK_END);\n    int fileSize = ftell(inFile);\n    char * fileData = new char[fileSize];\n    fseek(inFile, 0, SEEK_SET);\n    fread(fileData, 1, fileSize, inFile);\n    fclose(inFile);\n    zipHeader.fileSize = fileSize;\n    zipHeader.sig[0] = \'!\';\n    zipHeader.sig[1] = \'E\';\n    zipHeader.sig[2] = \'T\';\n    zipHeader.sig[3] = \'C\';\n    \n    uLongf destLength = compressBound(fileSize);\n\n    Bytef* pDestBuf = new Bytef[destLength];\n    int result = compress2(pDestBuf , &destLength, (const Bytef*)fileData, fileSize,9);\n    if (result != Z_OK)\n    {\n        switch(result)\n        {\n            case Z_MEM_ERROR:\n                printf("ETCCompress:: note enough memory for compression");\n                break;\n                \n            case Z_BUF_ERROR:\n                printf("ETCCompress:: note enough room in buffer to compress the data");\n                break;\n        }\n        return -1;\n    }\n    \n    cout << "ETCCompress:: orignal size: " << fileSize << " bytes"\n    << " , compressed size : " << destLength << " bytes"\n    << " , header size: " << sizeof(zipHeader) << " bytes"\n    << " , final size : " << sizeof(zipHeader) + destLength << " bytes"\n    << " , compress ratio:" << (1 - (double)(sizeof(zipHeader) + destLength)/fileSize)*100 << "%"\n    << \'\\n\';\n    \n    \n    FILE* fo = fopen(destpath, "wb+");\n    if(fo)\n    {\n        fwrite(&zipHeader, sizeof(zipHeader), 1, fo);\n        fwrite(pDestBuf,destLength, 1, fo);\n        fclose(fo);\n        delete [] pDestBuf;\n        \n        return 0;\n    }\n    return 0;\n}\n\nuLongf ETCCompress::unCompressETC(const char * packData,int packSize,Bytef* &buff)\n{\n    struct ZipHeaderInfo *header = (struct ZipHeaderInfo*) packData;\n    if (!(header->sig[0] == \'!\' && header->sig[1] == \'E\' && header->sig[2] == \'T\' && header->sig[3] == \'C\')) {\n        printf("\\nETCCompress:: header error");\n        return -1;\n    }\n    int orginSize = header->fileSize;\n    int headerSize = sizeof(*header);\n    uLongf newSize = orginSize;\n    Bytef* pUnBuf = new Bytef[newSize];\n    int result2 = uncompress(pUnBuf, &newSize,(const Bytef*)packData + headerSize,packSize - headerSize);\n    if (result2 != Z_OK)\n    {\n        switch(result2)\n        {\n            case Z_MEM_ERROR:\n                printf("ETCCompress:: note enough memory for uncompression");\n                break;\n                \n            case Z_BUF_ERROR:\n                printf("ETCCompress:: note enough room in buffer to uncompress the data");\n                break;\n        }\n        return -1;\n    }\n    buff = pUnBuf;\n    cout << "orignal size: " << packSize << " bytes" \n    << " , ucompressed size : " << orginSize << " bytes" << \'\\n\';\n    return newSize;\n}\n\nint ETCCompress::unCompressETC(const char *destpath, const char *srcpath)\n{\n    FILE* packFile = fopen(srcpath, "rb");\n    \n    fseek(packFile, 0, SEEK_END);\n    int packSize = ftell(packFile);\n    char * packData = new char[packSize];\n    fseek(packFile, 0, SEEK_SET);\n    fread(packData, 1, packSize, packFile);\n    fclose(packFile);\n    Bytef* pUnBuf;\n    uLongf newSize = unCompressETC(packData,packSize,pUnBuf);\n    if (newSize == -1)\n    {\n        printf("\\nETCCompress:: uncompress error!");\n        return -1;\n    }\n    \n    FILE* ft = fopen(destpath, "wb+");\n    if(ft)\n    {\n        fwrite(pUnBuf,newSize, 1, ft);\n        fclose(ft);\n        delete [] pUnBuf;\n        return 0;\n    }\n\n    return -1;\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["\u66f4\u591a\u8be6\u7ec6\u7684\u4ee3\u7801\u53ca\u7f16\u8bd1\u53ef\u4ee5\u770b\u6211\u4e4b\u524d\u7684",(0,a.jsx)(n.a,{href:"http://dannyhe.wang/2015/12/15/how-to-copy-file-in-cmake/",children:"\u8fd9\u7bc7\u6587\u7ae0"}),"\u548c",(0,a.jsx)(n.a,{href:"https://github.com/dannyjiajia/ETCCompress",children:"\u4ed3\u5e93"}),"\n\u7136\u540e\u6211\u4eec\u4f7f\u7528\u6211\u4eec\u5199\u7684\u5de5\u5177\u538b\u7f29\u6211\u4eec\u7684\u7eb9\u7406"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"CompressETCTexture pack logo_rgb.pvr logo_rgb.png\nCompressETCTexture pack logo_a.pvr logo_a.png\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\u6700\u540e\u6211\u4eec\u5f97\u5230\u4e24\u4e2a\u6587\u4ef6",(0,a.jsx)(n.code,{children:"logo_rgb.png"}),"\u548c",(0,a.jsx)(n.code,{children:"logo_a.png"}),",\u8fd9\u4e24\u4e2a\u6587\u4ef6\u7ecf\u8fc7\u4e86",(0,a.jsx)(n.code,{children:"ETC1"}),"\u538b\u7f29\u5e76\u4e14\u6587\u4ef6\u5927\u5c0f\u4e5f\u662f\u6211\u4eec\u80fd\u63a5\u53d7\u7684\u8303\u56f4,\u7136\u540e\u6211\u4eec\u9700\u8981\u5728",(0,a.jsx)(n.code,{children:"Cocos2dx"}),"\u4e2d\u4f7f\u7528\u4ed6\u4eec\u3002"]}),"\n",(0,a.jsx)(n.h2,{id:"2dx3x\u4e2d\u89e3\u538b",children:"2dx(3.x)\u4e2d\u89e3\u538b"}),"\n",(0,a.jsxs)(n.p,{children:["\u6211\u4eec\u5728",(0,a.jsx)(n.code,{children:"ZipUtils"}),"\u7c7b\u4e2d\u52a0\u5165\u6211\u4eec\u7684\u89e3\u538b\u903b\u8f91\n\u5934\u6587\u4ef6",(0,a.jsx)(n.code,{children:"ZipUtils.h"}),"\u4e2d\u58f0\u660e\u6211\u4eec\u7684\u5934\u4fe1\u606f\u7ed3\u6784\u4f53\u548c\u89e3\u538b\u51fd\u6570"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"#if CC_USE_ETC1_ZLIB\n    struct ETCCompressedHeader{\n        char sig[4];\n        int fileSize;\n    };\n#endif\n\n#if CC_USE_ETC1_ZLIB\n    static bool isETCCompressedBuffer(const unsigned char *buffer, ssize_t len);\n    static int inflateETCCompressedBuffer(const unsigned char *buffer, ssize_t len, unsigned char **out);\n#endif\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u5b9e\u73b0\u89e3\u538b"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"#if CC_USE_ETC1_ZLIB\nbool ZipUtils::isETCCompressedBuffer(const unsigned char *buffer, ssize_t len)\n{\n    if (static_cast<size_t>(len) < sizeof(struct ETCCompressedHeader))\n    {\n        return false;\n    }\n    struct ETCCompressedHeader *header = (struct ETCCompressedHeader*) buffer;\n    return header->sig[0] == '!' && header->sig[1] == 'E' && header->sig[2] == 'T' && header->sig[3] == 'C';\n}\n\nint ZipUtils::inflateETCCompressedBuffer(const unsigned char *buffer, ssize_t bufferLen, unsigned char **out)\n{\n    struct ETCCompressedHeader *header = (struct ETCCompressedHeader*) buffer;\n    int len = header->fileSize;\n    \n    *out = (unsigned char*)malloc( len );\n    if(! *out )\n    {\n        CCLOG(\"cocos2d: ETCCompressed: Failed to allocate memory for texture\");\n        return -1;\n    }\n    uLongf destlen = len;\n    int ret = uncompress(*out, &destlen, (Bytef*)buffer + sizeof(*header), bufferLen - sizeof(*header) );\n    \n    if( ret != Z_OK )\n    {\n        CCLOG(\"cocos2d: ETCCompressed: Failed to uncompress data\");\n        free( *out );\n        *out = nullptr;\n        return -1;\n    }\n    \n    return len;\n}\n#endif\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\u6700\u540e\u6211\u4eec\u57282dx\u8bfb\u53d6\u7eb9\u7406\u6587\u4ef6\u7684\u5730\u65b9(",(0,a.jsx)(n.code,{children:"Image::initWithImageData"}),")\u8c03\u7528\u6211\u4eec\u7684\u89e3\u538b\u51fd\u6570"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:'#if CC_USE_ETC1_ZLIB\n    if(ZipUtils::isETCCompressedBuffer(data,dataLen))\n    {\n        CCLOG("Image: Use our etc format compressed!");\n        unsigned char* etcUnpackedData = nullptr;\n        ssize_t etcUnpackedLen = 0;\n        etcUnpackedLen = ZipUtils::inflateETCCompressedBuffer(data,dataLen,&etcUnpackedData);\n        //detecgt and unzip the compress file\n        if (ZipUtils::isCCZBuffer(etcUnpackedData, etcUnpackedLen))\n        {\n            unpackedLen = ZipUtils::inflateCCZBuffer(etcUnpackedData, etcUnpackedLen, &unpackedData);\n        }\n        else if (ZipUtils::isGZipBuffer(etcUnpackedData, etcUnpackedLen))\n        {\n            unpackedLen = ZipUtils::inflateMemory(const_cast<unsigned char*>(etcUnpackedData), etcUnpackedLen, &unpackedData);\n        }\n        else\n        {\n            unpackedData = const_cast<unsigned char*>(etcUnpackedData);\n            unpackedLen = etcUnpackedLen;\n        }\n        if(etcUnpackedData != unpackedData)\n        {\n            free(etcUnpackedData);\n        }\n    }\n    else\n    {\n        //detecgt and unzip the compress file\n        if (ZipUtils::isCCZBuffer(data, dataLen))\n        {\n            unpackedLen = ZipUtils::inflateCCZBuffer(data, dataLen, &unpackedData);\n        }\n        else if (ZipUtils::isGZipBuffer(data, dataLen))\n        {\n            unpackedLen = ZipUtils::inflateMemory(const_cast<unsigned char*>(data), dataLen, &unpackedData);\n        }\n        else\n        {\n            unpackedData = const_cast<unsigned char*>(data);\n            unpackedLen = dataLen;\n        }\n\n    }\n#else\n    //detecgt and unzip the compress file\n    if (ZipUtils::isCCZBuffer(data, dataLen))\n    {\n        unpackedLen = ZipUtils::inflateCCZBuffer(data, dataLen, &unpackedData);\n    }\n    else if (ZipUtils::isGZipBuffer(data, dataLen))\n    {\n        unpackedLen = ZipUtils::inflateMemory(const_cast<unsigned char*>(data), dataLen, &unpackedData);\n    }\n    else\n    {\n        unpackedData = const_cast<unsigned char*>(data);\n        unpackedLen = dataLen;\n    }        \n#endif\n'})}),"\n",(0,a.jsx)(n.h1,{id:"2dx\u4e2d\u4f7f\u7528etc1",children:"2dx\u4e2d\u4f7f\u7528ETC1"}),"\n",(0,a.jsxs)(n.p,{children:["\u6211\u4f7f\u7528Shader\u6765\u64cd\u4f5c\u6700\u4e2d\u7684Alpha,\u6bd4\u5982\u5728",(0,a.jsx)(n.code,{children:"CCSprite"}),"\u4e2d\uff0c\u53d1\u73b0\u81ea\u5df1\u4f7f\u7528\u7684\u7eb9\u7406\u662f",(0,a.jsx)(n.code,{children:"ETC1"}),"\u683c\u5f0f\u4fbf\u53bb\u67e5\u627eAlpha\u7eb9\u7406\uff0c\u5982\u679c\u53d1\u73b0\u4fbf\u4f7f\u7528\u81ea\u5df1\u7684Shader\u66ff\u6362\u9ed8\u8ba4\u7684Shader.\n\u8fd9\u6837\u5c31\u505a\u5230\u5bf9\u6e38\u620f\u4ee5\u524d\u7684\u5f00\u53d1\u903b\u8f91\u6beb\u65e0\u4fee\u6539\u3002\u56e0\u4e3a\u8fd0\u7528Shader\u7684\u65b9\u5f0f\u6bd4\u8f83\u591a\uff0c\u6211\u8fd9\u91cc\u5c31\u53ea\u5217\u51fa\u6211\u7684Shader\u4ee3\u7801(CCSprite)"]}),"\n",(0,a.jsx)(n.p,{children:"\u9876\u70b9\u4e0d\u9700\u8981\u4fee\u6539\u9ed8\u8ba4\u7684"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-glsl",children:"const char* ccShader_etc1_PositionTextureColor_noMVP_vert = STRINGIFY(\nattribute vec4 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\n\nvarying vec4 v_fragmentColor;\nvarying vec2 v_texCoord;\n\n\nvoid main()\n{\n    gl_Position = CC_PMatrix * a_position;\n    v_fragmentColor = a_color;\n    v_texCoord = a_texCoord;\n}\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u7247\u6bb5\u7740\u8272"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-glsl",children:"// u_texture1\u662fetc\u7684alpha\u6570\u636e\u4e5f\u53ef\u4ee5\u7528ETC1\u538b\u7f29\nconst char* ccShader_etc1_PositionTextureColor_noMVP_frag = STRINGIFY(\n\\n\nvarying vec4 v_fragmentColor;\nvarying vec2 v_texCoord;\n\nuniform sampler2D u_texture1;\n\nvoid main()\n{\n    vec4 color = texture2D(CC_Texture0, v_texCoord);\n    color.a = texture2D(u_texture1, v_texCoord).r;\n    gl_FragColor = color * v_fragmentColor; //\u652f\u6301Cocos opacity\n}\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u4f7f\u7528\u7684\u8bdd\u5927\u6982\u53ea\u9700\u8fd9\u6837"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:'auto program = GLProgramCache::getInstance()->getGLProgram(GLProgram::SHADER_NAME_ETC_ALPHA_POSITION_TEXTURE_COLOR_NO_MVP); //\u65b0\u52a0\u7684etc shader\nauto etc_program_state = GLProgramState::create(program);\netc_program_state->setUniformTexture("u_texture1", texture_alpha);\nsetGLProgramState(etc_program_state);\n'})}),"\n",(0,a.jsx)(n.h1,{id:"\u6700\u540e",children:"\u6700\u540e"}),"\n",(0,a.jsxs)(n.p,{children:["\u5982\u679c\u8fd8\u9700\u8981\u4f18\u5316\u5305\u5927\u5c0f,\u53ef\u4ee5\u91c7\u7528\u5c06PNG\u8f6c\u6362\u6210\u4e24\u5f20JPG,\u4e5f\u662fRGB+ALPHA.",(0,a.jsx)(n.code,{children:"\u5200\u5854\u4f20\u5947"}),"\u5c31\u6709\u4f7f\u7528\u8fd9\u79cd\u7b56\u7565\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u76f4\u63a5\u538b\u7f29",(0,a.jsx)(n.code,{children:"png"}),",\u4f7f\u5b83\u7684\u753b\u8d28\u964d\u4f4e,\u6bd4\u5982",(0,a.jsx)(n.a,{href:"https://pngquant.org/",children:"pngquant"})]}),"\n",(0,a.jsxs)(n.p,{children:["\u53e6\u5916\u4e0a\u6587\u4e2d\u6211\u4eeczlib\u538b\u7f29\u6587\u4ef6\u7684\u5c0f\u5de5\u5177\u4e5f\u53ef\u4ee5\u6765\u538b\u7f29\u5176\u4ed6\u6587\u4ef6,\u6bd4\u5982\u6211\u4eec\u5728",(0,a.jsx)(n.code,{children:"Windows Phone"}),"\u5e73\u53f0\u4f7f\u7528\u7684\u538b\u7f29\u7eb9\u7406",(0,a.jsx)(n.code,{children:"DXT3"}),"...\n\u5728\u53d1\u5e03",(0,a.jsx)(n.code,{children:"Android"}),"\u7684\u65f6\u5019\u6211\u4eec\u540c\u6837\u9700\u8981\u58f0\u660e\u6211\u4eec\u7684\u6e38\u620f\u4f7f\u7528ETC\u538b\u7f29"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'\x3c!-- we want the device support etc1 texture format --\x3e\n<supports-gl-texture android:name="GL_OES_compressed_ETC1_RGB8_texture" />\n'})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var i=r(6540);const a={},t=i.createContext(a);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);