"use strict";(self.webpackChunkdannyjiajia_github_io=self.webpackChunkdannyjiajia_github_io||[]).push([[3518],{4369:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2025/03/05/deepseek-r1-distill-function-call-fine-tune","metadata":{"permalink":"/2025/03/05/deepseek-r1-distill-function-call-fine-tune","source":"@site/blog/2025/03-05-deepseek-r1-distill-function-call-fine-tune.mdx","title":"\u5fae\u8c03deepseek-r1\u84b8\u998f\u7248\u5de5\u5177\u8c03\u7528","description":"\u6709\u5173deepseek-r1\u84b8\u998f\u7248\u7684\u5fae\u8c03\u65b9\u6848\uff0c\u76ee\u524d\u4e3b\u6d41\u5728\u7528``\u7684\u5f62\u5f0f\u7ec4\u7ec7\u76f8\u5173\u8bed\u6599\u6837\u672c\uff0c\u76ee\u524d\u8fd8\u672a\u6d89\u53ca\u5230\u5de5\u5177\u8c03\u7528(Function-Call)\u7684\u5f62\u5f0f\uff0c","date":"2025-03-05T00:00:00.000Z","tags":[{"inline":true,"label":"deepseek","permalink":"/tags/deepseek"},{"inline":true,"label":"nlp","permalink":"/tags/nlp"},{"inline":true,"label":"llm","permalink":"/tags/llm"}],"readingTime":5.305,"hasTruncateMarker":true,"authors":[{"name":"Danny He","title":"Developer in ChengDu,China","url":"https://dannyjiajia.github.io/","socials":{"github":"https://github.com/dannyjiajia"},"imageURL":"https://avatars.githubusercontent.com/u/2572540","key":"dannyhe","page":null}],"frontMatter":{"title":"\u5fae\u8c03deepseek-r1\u84b8\u998f\u7248\u5de5\u5177\u8c03\u7528","authors":"dannyhe","tags":["deepseek","nlp","llm"]},"unlisted":false,"nextItem":{"title":"\u591a\u4e2adocker-compose\u914d\u7f6e\u7684\u7ba1\u7406\u601d\u8def","permalink":"/2025/02/27/docker-compose-files"}},"content":"import BrowserWindow from \'@site/src/components/BrowserWindow\';\\nimport CodeBlock from \'@theme/CodeBlock\';\\nimport Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\n\u6709\u5173deepseek-r1\u84b8\u998f\u7248\u7684\u5fae\u8c03\u65b9\u6848\uff0c\u76ee\u524d\u4e3b\u6d41\u5728\u7528`<think></think>`\u7684\u5f62\u5f0f\u7ec4\u7ec7\u76f8\u5173\u8bed\u6599\u6837\u672c\uff0c\u76ee\u524d\u8fd8\u672a\u6d89\u53ca\u5230\u5de5\u5177\u8c03\u7528(Function-Call)\u7684\u5f62\u5f0f\uff0c\\n\u521a\u597d\u540c\u4e8b\u9700\u8981\u57fa\u4e8e[LLaMA-Factory](https://github.com/hiyouga/LLaMA-Factory)\u6784\u5efa\u601d\u7ef4\u94fe\u7684\u5de5\u5177\u8c03\u7528\u8bed\u6599\uff0c\u4e8e\u662f\u6211\u987a\u4fbf\u8865\u5145\u4e86\u4e00\u4e0bLLaMA-Factory\u5173\u4e8e`chat template`\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u4ee5\u63a8\u5bfc\u51faLLaMA-Factory\u4e2d\u5173\u4e8e\u6837\u672c\u96c6\u5904\u7406\u4ee5\u53ca\u629b\u5f00`JSON`\u683c\u5f0f\u7406\u89e3\u672c\u8d28`chat template`\u3002\\n\u601d\u7ef4\u4e0d\u8981\u56fa\u5316\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n\\n\\n```mdx-code-block\\n<BrowserWindow>\\n<Tabs>\\n<TabItem value=\\"json\\" label=\\"tools_dr1.json\\">\\n```\\n\\n```json\\n[\\n    {\\n        \\"conversations\\": [\\n          {\\n            \\"value\\": \\"Hi, can you tell me the current stock price of Apple?\\",\\n            \\"from\\": \\"human\\"\\n        },\\n        {\\n            \\"value\\": \\"<think>Alright, the user asked for the current stock price of Apple. Looking at the tools available, there\'s a function called get_stock_price which exactly fits this request. I\'ll need to call this function with the parameter company set to \'Apple\' to retrieve the information the user is asking for. This seems like the most straightforward and appropriate action to take.\\\\n</think><tool_call>\\\\n{\'name\': \'get_stock_price\', \'arguments\': {\'company\': \'Apple\'}}\\\\n</tool_call>\\",\\n            \\"from\\": \\"gpt\\"\\n        },\\n        {\\n            \\"value\\": \\"<tool_response>\\\\n{\'stock_price\': \'$150.75\'}\\\\n</tool_response>\\",\\n            \\"from\\": \\"human\\"\\n        },\\n        {\\n            \\"value\\": \\"The current stock price of Apple is $150.75.\\",\\n            \\"from\\": \\"gpt\\"\\n        },\\n        {\\n            \\"value\\": \\"That\'s great. Can you also tell me the stock price for Microsoft?\\",\\n            \\"from\\": \\"human\\"\\n        },\\n        {\\n            \\"value\\": \\"<think>Alright, let me try to figure out how to handle this user\'s request. The user first asked about Apple\'s stock price, and I responded by calling the get_stock_price function with \'Apple\' as the argument. The tool provided the price, and I passed that information back to the user.\\\\n\\\\nNow, the user is asking for the stock price of Microsoft. I need to determine the appropriate action here. Looking at the tools available, there\'s still the get_stock_price function, which is designed to fetch current stock prices. Since the user is requesting another company\'s stock price, it makes sense to use the same function again but with the company name changed to Microsoft. \\\\n\\\\nI shouldn\'t assume any other tools are needed because the available functions are specifically tailored for stock prices and movie details. In this case, the relevant function is get_stock_price. I should ensure that the function is called with the correct parameter, \'Microsoft\' in this case, to retrieve the accurate information the user is seeking. This approach is efficient and aligns directly with the user\'s request without making unnecessary assumptions or using unrelated tools.\\\\n</think><tool_call>\\\\n{\'name\': \'get_stock_price\', \'arguments\': {\'company\': \'Microsoft\'}}\\\\n</tool_call>\\",\\n            \\"from\\": \\"gpt\\"\\n        },\\n        {\\n            \\"value\\": \\"<tool_response>\\\\n{\'stock_price\': \'$210.22\'}\\\\n</tool_response>\\",\\n            \\"from\\": \\"human\\"\\n        },\\n        {\\n            \\"value\\": \\"The current stock price of Microsoft is $210.22.\\",\\n            \\"from\\": \\"gpt\\"\\n        },\\n        {\\n            \\"value\\": \\"Thank you for the information.\\",\\n            \\"from\\": \\"human\\"\\n        },\\n        {\\n            \\"value\\": \\"You\'re welcome! If you have any other questions, feel free to ask.\\",\\n            \\"from\\": \\"gpt\\"\\n        }\\n        ],\\n        \\"system\\": \\"You are a function calling AI model. You are provided with function signatures within <tools></tools> XML tags.You may call one or more functions to assist with the user query. Don\'t make assumptions about what values to plug into functions.Here are the available tools:<tools> [{\'type\': \'function\', \'function\': {\'name\': \'get_stock_price\', \'description\': \'Get the current stock price of a company\', \'parameters\': {\'type\': \'object\', \'properties\': {\'company\': {\'type\': \'string\', \'description\': \'The name of the company\'}}, \'required\': [\'company\']}}}, {\'type\': \'function\', \'function\': {\'name\': \'get_movie_details\', \'description\': \'Get details about a movie\', \'parameters\': {\'type\': \'object\', \'properties\': {\'title\': {\'type\': \'string\', \'description\': \'The title of the movie\'}}, \'required\': [\'title\']}}}] </tools>Use the following pydantic model json schema for each tool call you will make: {\'title\': \'FunctionCall\', \'type\': \'object\', \'properties\': {\'arguments\': {\'title\': \'Arguments\', \'type\': \'object\'}, \'name\': {\'title\': \'Name\', \'type\': \'string\'}}, \'required\': [\'arguments\', \'name\']}For each function call return a json object with function name and arguments within <tool_call></tool_call> XML tags as follows:\\\\n<tool_call>\\\\n{tool_call}\\\\n</tool_call>\\",\\n      }\\n]\\n```\\n\\n```mdx-code-block\\n</TabItem>\\n<TabItem value=\\"python\\" label=\\"test_dataset.py\\">\\n```\\n\\n```python\\nimport os\\nfrom typing import TYPE_CHECKING, Sequence\\n\\nimport pytest\\nDEEPSEEK_DISTILL_QWEN_MODEL = os.getenv(\\"DEEPSEEK_DISTILL_QWEN_PATH\\")\\nfrom transformers import AutoTokenizer\\n\\nfrom llamafactory.data import get_template_and_fix_tokenizer\\nfrom llamafactory.data.template import parse_template\\nfrom llamafactory.hparams import DataArguments,ModelArguments,TrainingArguments\\nfrom llamafactory.data.loader import get_dataset\\n@pytest.mark.skipif(not DEEPSEEK_DISTILL_QWEN_MODEL, reason=\\"Gated model.\\")\\ndef test_tools_deepseek3_without_function_call() -> None:\\n    tokenizer = AutoTokenizer.from_pretrained(DEEPSEEK_DISTILL_QWEN_MODEL)\\n    template = get_template_and_fix_tokenizer(tokenizer, DataArguments(template=\\"deepseek3\\"))\\n    dataset_module = get_dataset(template, ModelArguments(model_name_or_path=DEEPSEEK_DISTILL_QWEN_MODEL), \\n                                 DataArguments(template=\\"deepseek3\\",dataset=\\"tool_zh_dr1\\"), \\n                                 TrainingArguments(), stage=\\"sft\\", tokenizer=tokenizer)\\n    assert \'train_dataset\' in dataset_module\\n    dataset = dataset_module[\'train_dataset\']\\n    assert len(dataset) == 1\\n    expect_input = \\"\\"\\"<\uff5cbegin\u2581of\u2581sentence\uff5c><\uff5cUser\uff5c>Hi, can you tell me the current stock price of Apple?<\uff5cAssistant\uff5c><think>Alright, the user asked for the current stock price of Apple. Looking at the tools available, there\'s a function called get_stock_price which exactly fits this request. I\'ll need to call this function with the parameter company set to \'Apple\' to retrieve the information the user is asking for. This seems like the most straightforward and appropriate action to take.\\n</think><tool_call>\\n{\'name\': \'get_stock_price\', \'arguments\': {\'company\': \'Apple\'}}\\n</tool_call><\uff5cend\u2581of\u2581sentence\uff5c><\uff5cUser\uff5c><tool_response>\\n{\'stock_price\': \'$150.75\'}\\n</tool_response><\uff5cAssistant\uff5c>The current stock price of Apple is $150.75.<\uff5cend\u2581of\u2581sentence\uff5c><\uff5cUser\uff5c>That\'s great. Can you also tell me the stock price for Microsoft?<\uff5cAssistant\uff5c><think>Alright, let me try to figure out how to handle this user\'s request. The user first asked about Apple\'s stock price, and I responded by calling the get_stock_price function with \'Apple\' as the argument. The tool provided the price, and I passed that information back to the user.\\n\\nNow, the user is asking for the stock price of Microsoft. I need to determine the appropriate action here. Looking at the tools available, there\'s still the get_stock_price function, which is designed to fetch current stock prices. Since the user is requesting another company\'s stock price, it makes sense to use the same function again but with the company name changed to Microsoft. \\n\\nI shouldn\'t assume any other tools are needed because the available functions are specifically tailored for stock prices and movie details. In this case, the relevant function is get_stock_price. I should ensure that the function is called with the correct parameter, \'Microsoft\' in this case, to retrieve the accurate information the user is seeking. This approach is efficient and aligns directly with the user\'s request without making unnecessary assumptions or using unrelated tools.\\n</think><tool_call>\\n{\'name\': \'get_stock_price\', \'arguments\': {\'company\': \'Microsoft\'}}\\n</tool_call><\uff5cend\u2581of\u2581sentence\uff5c><\uff5cUser\uff5c><tool_response>\\n{\'stock_price\': \'$210.22\'}\\n</tool_response><\uff5cAssistant\uff5c>The current stock price of Microsoft is $210.22.<\uff5cend\u2581of\u2581sentence\uff5c><\uff5cUser\uff5c>Thank you for the information.<\uff5cAssistant\uff5c>You\'re welcome! If you have any other questions, feel free to ask.<\uff5cend\u2581of\u2581sentence\uff5c>\\"\\"\\"\\n    input = tokenizer.decode(dataset[0][\'input_ids\'], skip_special_tokens=False)\\n    assert expect_input == input\\n```\\n\\n```mdx-code-block\\n</TabItem>\\n</Tabs>\\n</BrowserWindow>\\n```"},{"id":"/2025/02/27/docker-compose-files","metadata":{"permalink":"/2025/02/27/docker-compose-files","source":"@site/blog/2025/02-27-docker-compose-files.mdx","title":"\u591a\u4e2adocker-compose\u914d\u7f6e\u7684\u7ba1\u7406\u601d\u8def","description":"\u670d\u52a1\u4e0a\u7ecf\u5e38\u90e8\u7f72\u591a\u4e2adocker-compose\u914d\u7f6e\u6587\u4ef6\u7684\u9879\u76ee,\u6bd4\u5982\u7b97\u6cd5\u670d\u52a1\u5668\u540c\u4e8b\u90e8\u7f72\u4e86ragflow\u3001vllm\u3001whisper\u7b49\u9879\u76ee,\u7ecf\u5e38\u9700\u8981\u91cd\u542f\u6216\u5173\u95ed,\u7b97\u529b\u6709\u9650:(","date":"2025-02-27T00:00:00.000Z","tags":[],"readingTime":2.125,"hasTruncateMarker":true,"authors":[{"name":"Danny He","title":"Developer in ChengDu,China","url":"https://dannyjiajia.github.io/","socials":{"github":"https://github.com/dannyjiajia"},"imageURL":"https://avatars.githubusercontent.com/u/2572540","key":"dannyhe","page":null}],"frontMatter":{"title":"\u591a\u4e2adocker-compose\u914d\u7f6e\u7684\u7ba1\u7406\u601d\u8def","authors":"dannyhe"},"unlisted":false,"prevItem":{"title":"\u5fae\u8c03deepseek-r1\u84b8\u998f\u7248\u5de5\u5177\u8c03\u7528","permalink":"/2025/03/05/deepseek-r1-distill-function-call-fine-tune"},"nextItem":{"title":"docker\u901a\u8fc7\u4ee3\u7406pull\u955c\u50cf","permalink":"/2025/02/22/docker-proxy-pull"}},"content":"import BrowserWindow from \'@site/src/components/BrowserWindow\';\\nimport CodeBlock from \'@theme/CodeBlock\';\\nimport Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\n\u670d\u52a1\u4e0a\u7ecf\u5e38\u90e8\u7f72\u591a\u4e2adocker-compose\u914d\u7f6e\u6587\u4ef6\u7684\u9879\u76ee,\u6bd4\u5982\u7b97\u6cd5\u670d\u52a1\u5668\u540c\u4e8b\u90e8\u7f72\u4e86`ragflow`\u3001`vllm`\u3001`whisper`\u7b49\u9879\u76ee,\u7ecf\u5e38\u9700\u8981\u91cd\u542f\u6216\u5173\u95ed,\u7b97\u529b\u6709\u9650:(\\n\u8fd9\u91cc\u63d0\u4f9b\u4e00\u4e2a\u7ba1\u7406\u591a\u4e2adocker-compose\u914d\u7f6e\u6587\u4ef6\u7684\u601d\u8def.\\n\\n\x3c!-- truncate --\x3e\\n\\n\u6574\u4f53\u4f7f\u7528`yaml` + [`task`](https://taskfile.dev) + [`yq`](https://github.com/mikefarah/yq)\u7684\u65b9\u5f0f\u7ba1\u7406\u670d\u52a1,\\n\u9996\u5148\u9700\u8981\u5c06\u591a\u4e2adocker-compose\u7684\u914d\u7f6e\u6587\u4ef6\u7ba1\u7406\u8d77\u6765\uff0c\u7136\u540e\u901a\u8fc7\u7f16\u5199task\u7684\u914d\u7f6e\u6587\u4ef6\u5c06\u4e0d\u540c\u7684docker-compose\u914d\u7f6e\u6587\u4ef6\u6ce8\u5165\u5230\u547d\u4ee4\u4e2d\u3002\\n\\n```mdx-code-block\\n<BrowserWindow>\\n```\\n\\n```yml title=\\"docker-compose.servers.yml\\"\\nprojects:\\n  one-api:\\n    path: /home/one-api/docker-compose.yml\\n  apisix:\\n    path: /home/new/apisix/docker-compose.yml\\n```\\n\\n```mdx-code-block\\n</BrowserWindow>\\n```\\n\\n\\n\\n\\n```mdx-code-block\\n<BrowserWindow>\\n```\\n\\n```yml title=\\"Taskfile.yml\\"\\nversion: \'3\'\\n\\nvars:\\n  COMPOSE_LIST:\\n    sh: yq e \'.projects | keys\' docker-compose.servers.yml\\n\\ntasks:\\n  status:\\n    silent: true\\n    desc: \u663e\u793a\u6240\u6709\u9879\u76ee\u72b6\u6001\\n    cmds:\\n      - for: { var: COMPOSE_LIST }\\n        cmd: |\\n          if [ \\"-\\" != \\"{{ .ITEM }}\\" ]; then\\n            docker-compose -f `yq e \\".projects.{{.ITEM}}.path\\" docker-compose.servers.yml` ps\\n          fi \\n  default:\\n    silent: true\\n    desc: \u5217\u51fa\u6240\u6709\u53ef\u7528\u7684\u9879\u76ee\\n    cmds:\\n      - for: { var: COMPOSE_LIST }\\n        cmd: |\\n          if [ \\"-\\" != \\"{{ .ITEM }}\\" ]; then\\n            echo {{ .ITEM }}\\n          fi \\n    \\n  up-*:\\n    desc: \u542f\u52a8\u6307\u5b9a\u9879\u76ee\\n    deps: \\n      - task: check-project\\n        vars:\\n          PROJECT: \\n            ref: .PROJECT\\n    vars:\\n      PROJECT: \'{{index .MATCH 0}}\'\\n      COMPOSE_PATH:\\n          sh: yq e \\".projects.{{.PROJECT}}.path\\" docker-compose.servers.yml\\n    cmds:\\n      - docker-compose -f {{.COMPOSE_PATH}} up -d {{.CLI_ARGS}}\\n\\n  down-*:\\n    desc: \u505c\u6b62\u6307\u5b9a\u9879\u76ee\\n    deps: \\n      - task: check-project\\n        vars:\\n          PROJECT: \\n            ref: .PROJECT\\n    vars:\\n      PROJECT: \'{{index .MATCH 0}}\'\\n      COMPOSE_PATH:\\n          sh: yq e \\".projects.{{.PROJECT}}.path\\" docker-compose.servers.yml\\n    cmds:\\n      - docker-compose -f {{.COMPOSE_PATH}} down {{.CLI_ARGS}}\\n\\n  ps-*:\\n    desc: \u67e5\u770b\u9879\u76ee\u72b6\u6001\\n    deps: \\n      - task: check-project\\n        vars:\\n          PROJECT: \\n            ref: .PROJECT\\n    vars:\\n      PROJECT: \'{{index .MATCH 0}}\'\\n      COMPOSE_PATH:\\n          sh: yq e \\".projects.{{.PROJECT}}.path\\" docker-compose.servers.yml\\n    cmds:\\n      - docker-compose -f {{.COMPOSE_PATH}} ps\\n      \\n\\n  logs-*:\\n    desc: \u67e5\u770b\u6307\u5b9a\u9879\u76ee\u65e5\u5fd7\\n    deps: \\n      - task: check-project\\n        vars:\\n          PROJECT: \\n            ref: .PROJECT\\n    vars:\\n      PROJECT: \'{{index .MATCH 0}}\'\\n      COMPOSE_PATH:\\n          sh: yq e \\".projects.{{.PROJECT}}.path\\" docker-compose.servers.yml\\n    cmds:\\n      - docker-compose -f {{.COMPOSE_PATH}} logs {{.CLI_ARGS}}\\n\\n  check-project:\\n    internal: true\\n    preconditions:\\n      - sh: test -n \\"{{.PROJECT}}\\"\\n        msg: \\"\u8bf7\u6307\u5b9a\u9879\u76ee\u540d\u79f0\\"\\n      - sh: yq e \\".projects.{{.PROJECT}}\\" docker-compose.servers.yml | grep -q \\"^path:\\"\\n        msg: \\"\u9879\u76ee {{.PROJECT}} \u4e0d\u5b58\u5728\\"\\n```\\n\\n```mdx-code-block\\n</BrowserWindow>\\n```"},{"id":"/2025/02/22/docker-proxy-pull","metadata":{"permalink":"/2025/02/22/docker-proxy-pull","source":"@site/blog/2025/02-22-docker-proxy-pull.md","title":"docker\u901a\u8fc7\u4ee3\u7406pull\u955c\u50cf","description":"\u901a\u8fc7\u4ee3\u7406\u4e0b\u8f7ddocker\u955c\u50cf","date":"2025-02-22T00:00:00.000Z","tags":[{"inline":true,"label":"docker","permalink":"/tags/docker"},{"inline":true,"label":"clash","permalink":"/tags/clash"}],"readingTime":2.385,"hasTruncateMarker":true,"authors":[{"name":"Danny He","title":"Developer in ChengDu,China","url":"https://dannyjiajia.github.io/","socials":{"github":"https://github.com/dannyjiajia"},"imageURL":"https://avatars.githubusercontent.com/u/2572540","key":"dannyhe","page":null}],"frontMatter":{"title":"docker\u901a\u8fc7\u4ee3\u7406pull\u955c\u50cf","authors":"dannyhe","tags":["docker","clash"]},"unlisted":false,"prevItem":{"title":"\u591a\u4e2adocker-compose\u914d\u7f6e\u7684\u7ba1\u7406\u601d\u8def","permalink":"/2025/02/27/docker-compose-files"},"nextItem":{"title":"git\u4f7f\u7528\u6280\u5de7\u6c47\u603b","permalink":"/2025/02/22/git-cookbook"}},"content":"## \u901a\u8fc7\u4ee3\u7406\u4e0b\u8f7ddocker\u955c\u50cf\\n\\n### Clash\u5b89\u88c5\\n\\n\u5b89\u88c5Linux\u7248\u672c\u7684Clash,\u5e76\u914d\u7f6eui\u754c\u9762,\u5173\u952e\u914d\u7f6e\\n\\n~~~yaml\\nexternal-controller: 0.0.0.0:9090\\nsecret: \\"123qwe\\"\\nexternal-ui: \\"ui\\"\\n~~~\\n\\n- external-controller\u4ee3\u8868\u5916\u90e8\u8bbf\u95ee\u5730\u5740\uff0c\u6b64\u5904\u610f\u601d\u4e3a\u5141\u8bb8\u6240\u6709\u4eba\u4ece9090\u7aef\u53e3\u8bbf\u95ee\uff08\u5f53\u7136\u9700\u8981\u5f00\u542f9090\u7aef\u53e3\uff09\\n- secret\u8bbf\u95ee\u5bc6\u94a5\uff0c\u4e0d\u8bbe\u7f6e\u5bc6\u94a5\u7684\u8bdd\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u8bbf\u95ee\uff0c\u8f83\u4e3a\u5371\u9669\\n- external-ui ui\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7531\u4e8e\u6b64\u5904config.yaml\u6587\u4ef6\u548cui\u6587\u4ef6\u5939\u5728\u540c\u4e00\u76ee\u5f55\u4e0b\uff0c\u6240\u4ee5\u53ea\u9700\u6587\u4ef6\u5939\u540d\u79f0\u5373\u53ef\\n\\nui\u6587\u4ef6\u4e0b\u8f7d\\n\x3c!-- truncate --\x3e\\n~~~shell\\nwget https://github.com/haishanh/yacd/releases/download/v0.3.7/yacd.tar.xz\\ntar xvJf yacd.tar.xz \\n~~~\\n\u89e3\u538b\u540e\u6539\u540d\u4e3aui\u6587\u4ef6\u5939(\u5bf9\u5e94external-ui\u7684\u503c)\\n\\n\u6700\u540e\u901a\u8fc7\u8bbf\u95eeexternal-controller\u7684\u5730\u5740\u5c06\u6a21\u5f0f\u8bbe\u7f6e\u4e3a\u5168\u5c40\\n\\n### \u8bbe\u7f6edocker\u4f7f\u7528\u4ee3\u7406\\n\\n\u521b\u5efa dockerd \u76f8\u5173\u7684 systemd \u76ee\u5f55\uff0c\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u7684\u914d\u7f6e\u5c06\u8986\u76d6 dockerd \u7684\u9ed8\u8ba4\u914d\u7f6e\\n~~~shell\\nsudo mkdir -p /etc/systemd/system/docker.service.d\\n~~~\\n\u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 /etc/systemd/system/docker.service.d/http-proxy.conf\uff0c\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u5c06\u5305\u542b\u73af\u5883\u53d8\u91cf\\n~~~ini\\n[Service]\\nEnvironment=\\"HTTP_PROXY=http://127.0.0.1:7890\\"\\nEnvironment=\\"HTTPS_PROXY=http://127.0.0.1:7890\\"\\n~~~\\n\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff0c\u91cd\u542f dockerd\\n~~~shell\\nsudo systemctl daemon-reload\\nsudo systemctl restart docker\\n~~~\\n\u68c0\u67e5\u786e\u8ba4\u73af\u5883\u53d8\u91cf\u5df2\u7ecf\u6b63\u786e\u914d\u7f6e\\n~~~shell\\nsudo systemctl show --property=Environment docker\\n~~~\\n\u4ece docker info \u7684\u7ed3\u679c\u4e2d\u67e5\u770b\u914d\u7f6e\u9879\u3002\\n~~~shell\\ndocker info\\n~~~\\n\\n\u6700\u540e\uff0c\u6267\u884cdocker pull\u4e0b\u8f7d\u5373\u53ef\\n\\n## \u5bfc\u51fa\u955c\u50cf\u5de5\u5177\\n\\n~~~shell\\n#!/bin/bash\\n# filepath: export-all-images.sh\\n\\n# \u8bbe\u7f6e\u8f93\u51fa\u6587\u4ef6\u540d\\nOUTPUT_FILE=\\"all-compose-images.tar\\"\\n\\n# \u4ece docker-compose.yml \u83b7\u53d6\u6240\u6709\u955c\u50cf\u540d\u79f0\\nIMAGES=$(docker-compose -f docker-compose-gpu.yml config | grep \'image:\' | awk \'{print $2}\' | sort -u)\\n\\nif [ -z \\"$IMAGES\\" ]; then\\n    echo \\"\u9519\u8bef: \u5728 docker-compose \u914d\u7f6e\u4e2d\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u955c\u50cf\\"\\n    exit 1\\nfi\\n\\necho \\"\u51c6\u5907\u5bfc\u51fa\u4ee5\u4e0b\u955c\u50cf\uff1a\\"\\necho \\"$IMAGES\\"\\necho \\"-------------------\\"\\n\\n# \u4f7f\u7528\u5355\u4e2a docker save \u547d\u4ee4\u5bfc\u51fa\u6240\u6709\u955c\u50cf\\necho \\"\u6b63\u5728\u5bfc\u51fa\u955c\u50cf\u5230 $OUTPUT_FILE ...\\"\\ndocker save -o \\"$OUTPUT_FILE\\" $IMAGES\\n\\nif [ $? -eq 0 ]; then\\n    echo \\"\u5bfc\u51fa\u6210\u529f\uff01\\"\\n    echo \\"\u6587\u4ef6\u5927\u5c0f: $(du -h $OUTPUT_FILE | cut -f1)\\"\\n    echo \\"\u4fdd\u5b58\u4f4d\u7f6e: $(pwd)/$OUTPUT_FILE\\"\\nelse\\n    echo \\"\u5bfc\u51fa\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\\"\\n    rm -f \\"$OUTPUT_FILE\\"\\n    exit 1\\nfi\\n~~~"},{"id":"/2025/02/22/git-cookbook","metadata":{"permalink":"/2025/02/22/git-cookbook","source":"@site/blog/2025/02-22-git-cookbook.md","title":"git\u4f7f\u7528\u6280\u5de7\u6c47\u603b","description":"\u522b\u540d:\u66f4\u65b9\u4fbf\u7684\u4f7f\u7528\u547d\u4ee4","date":"2025-02-22T00:00:00.000Z","tags":[{"inline":true,"label":"git","permalink":"/tags/git"}],"readingTime":0.88,"hasTruncateMarker":true,"authors":[{"name":"Danny He","title":"Developer in ChengDu,China","url":"https://dannyjiajia.github.io/","socials":{"github":"https://github.com/dannyjiajia"},"imageURL":"https://avatars.githubusercontent.com/u/2572540","key":"dannyhe","page":null}],"frontMatter":{"title":"git\u4f7f\u7528\u6280\u5de7\u6c47\u603b","authors":"dannyhe","tags":["git"]},"unlisted":false,"prevItem":{"title":"docker\u901a\u8fc7\u4ee3\u7406pull\u955c\u50cf","permalink":"/2025/02/22/docker-proxy-pull"},"nextItem":{"title":"\u8fc1\u79fb\u6587\u6863\u5230 Docusaurus","permalink":"/2025/02/22/hello-docusaurus"}},"content":"## \u522b\u540d:\u66f4\u65b9\u4fbf\u7684\u4f7f\u7528\u547d\u4ee4\\n\\n\u914d\u7f6egit\u4f7f\u7528\u522b\u540d\\n~~~shell\\ngit config --global alias.st status\\ngit config --global alias.co checkout\\ngit config --global alias.ci commit\\ngit config --global alias.br branch\\ngit config --global alias.lg \\"log --color --graph --pretty=format:\'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\' --abbrev-commit\\"\\n~~~\\n\x3c!-- truncate --\x3e\\n\u4e5f\u53ef\u76f4\u63a5\u7f16\u8f91Git\u7684\u5168\u5c40\u914d\u7f6e\u6587\u4ef6`.gitconfig`\\n~~~ini\\n[alias]\\nst = status\\nco = checkout\\nci = commit\\nbr = branch\\nlg = log --color --graph --pretty=format:\'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset\' --abbrev-commit\\n~~~\\n\\n\u5373\u53ef\u4f7f\u7528\\n~~~shell\\ngit co -b dev\\n~~~\\n\\n:::tip\\n\u8fd9\u91cc\u662f\u4ee5\u521b\u5efa\u65b0\u7684\u672c\u5730\u5206\u652f`dev`\u4e3a\u4f8b\u6f14\u793a`checkout`\u7684\u522b\u540d`co`\\n:::\\n\\n## Git lfs \\n\\n### \u5927\u6587\u4ef6\u5bb9\u6613\u8d85\u65f6\\n\u52a0\u5927\u6d3b\u8dc3\u65f6\u95f4\\n~~~shell\\ngit config lfs.activitytimeout 60\\n~~~\\n\\n### \u663e\u793a\u6587\u4ef6\u4e0b\u8f7d\u8fdb\u5ea6\\n\\n~~~shell\\nGIT_LFS_SKIP_SMUDGE=1 git clone https://www.modelscope.cn/Qwen/Qwen2.5-1.5B-Instruct.git\\ncd Qwen2.5-1.5B-Instruct\\ngit lfs pull\\n~~~"},{"id":"/2025/02/22/hello-docusaurus","metadata":{"permalink":"/2025/02/22/hello-docusaurus","source":"@site/blog/2025/02-22-hello-docusaurus.mdx","title":"\u8fc1\u79fb\u6587\u6863\u5230 Docusaurus","description":"\u8fc1\u79fb\u6587\u6863\u5230 Docusaurus,\u5e76\u505a\u4e00\u5b9a\u7684\u914d\u7f6e\u901a\u8fc7GitHub Workflow\u81ea\u52a8\u6784\u5efa,\u6700\u540e\u505a\u4e00\u5b9a\u7684\u6d4b\u8bd5\u3002","date":"2025-02-22T00:00:00.000Z","tags":[],"readingTime":1.54,"hasTruncateMarker":true,"authors":[{"name":"Danny He","title":"Developer in ChengDu,China","url":"https://dannyjiajia.github.io/","socials":{"github":"https://github.com/dannyjiajia"},"imageURL":"https://avatars.githubusercontent.com/u/2572540","key":"dannyhe","page":null}],"frontMatter":{"title":"\u8fc1\u79fb\u6587\u6863\u5230 Docusaurus","hide_table_of_contents":false,"authors":"dannyhe"},"unlisted":false,"prevItem":{"title":"git\u4f7f\u7528\u6280\u5de7\u6c47\u603b","permalink":"/2025/02/22/git-cookbook"},"nextItem":{"title":"\u4ecb\u7ecd\u4e0bStorIOSQLite\u5230RxJava","permalink":"/2017/think-about-storio"}},"content":"import BrowserWindow from \'@site/src/components/BrowserWindow\';\\nimport CodeBlock from \'@theme/CodeBlock\';\\nimport Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\n\\n\u8fc1\u79fb\u6587\u6863\u5230 Docusaurus,\u5e76\u505a\u4e00\u5b9a\u7684\u914d\u7f6e\u901a\u8fc7`GitHub Workflow`\u81ea\u52a8\u6784\u5efa,\u6700\u540e\u505a\u4e00\u5b9a\u7684\u6d4b\u8bd5\u3002\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u521b\u5efa`gh-pages`\u5206\u652f\\n\\n\u521b\u5efa\u5206\u652f\u5e76\u5c06\u6587\u4ef6\u5220\u9664\u5e72\u51c0\\n\\n## GitHub Workflow\\n\\n\u5728\u4e3b\u5206\u652f\u521b\u5efaWorkflow\u914d\u7f6e\u6587\u4ef6\\n\\n```mdx-code-block\\n<BrowserWindow>\\n```\\n\\n```yml title=\\".github\\\\workflows\\\\deploy.yml\\" \\nname: Deploy to GitHub Pages\\n\\non:\\n  push:\\n    branches:\\n      - main\\n    # Review gh actions docs if you want to further define triggers, paths, etc\\n    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on\\n\\njobs:\\n  deploy:\\n    name: Deploy to GitHub Pages\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v2\\n      - uses: actions/setup-node@v3\\n        with:\\n          node-version: 23.x\\n          cache: yarn\\n\\n      - name: Install dependencies\\n        run: yarn install --frozen-lockfile\\n      - name: Build website\\n        run: yarn build\\n\\n      # Popular action to deploy to GitHub Pages:\\n      # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus\\n      - name: Deploy to GitHub Pages\\n        uses: peaceiris/actions-gh-pages@v3\\n        with:\\n          github_token: ${{ secrets.GITHUB_TOKEN }}\\n          # Build output to publish to the `gh-pages` branch:\\n          publish_dir: ./build\\n          # The following lines assign commit authorship to the official\\n          # GH-Actions bot for deploys to `gh-pages` branch:\\n          # https://github.com/actions/checkout/issues/13#issuecomment-724415212\\n          # The GH actions bot is used by default if you didn\'t specify the two fields.\\n          # You can swap them out with your own user credentials.\\n          user_name: github-actions[bot]\\n          user_email: 41898282+github-actions[bot]@users.noreply.github.com\\n```\\n\\n```mdx-code-block\\n</BrowserWindow>\\n```\\n\\n### \u8bbe\u7f6eWorkflow\u6743\u9650\\n\\nLook at the left menu click on Action menu and scroll down to Workflow permissions\\n\\n![Select Read and Write permission](https://miro.medium.com/v2/resize:fit:1400/format:webp/1*b1o87pC-VHsg7A8yXpbqzQ.png)\\n\\n\\n## \u8bbe\u7f6egh-pages\u5206\u652f\u4e3apages\\n\\nGo to GitHub project setting and click on Page\\n\\n![Go to GitHub project setting and click on Page](https://miro.medium.com/v2/resize:fit:1400/format:webp/1*1jhlETk198QNJZVhmXDUyA.png)\\n\\nSelect Deploy from a branch\\n\\nSelect branch gh-pages and /root\\n\\n![Go to GitHub project setting and click on Page](https://miro.medium.com/v2/resize:fit:1400/format:webp/1*E-LvZmgAXrMH88v-jSrZwA.png)\\n\\n## Enjoy!"},{"id":"/2017/think-about-storio","metadata":{"permalink":"/2017/think-about-storio","source":"@site/blog/2017/think-about-storio.md","title":"\u4ecb\u7ecd\u4e0bStorIOSQLite\u5230RxJava","description":"storio\u7b80\u4ecb","date":"2017-03-31T09:46:40.000Z","tags":[{"inline":true,"label":"Android","permalink":"/tags/android"},{"inline":true,"label":"RxJava","permalink":"/tags/rx-java"}],"readingTime":6.975,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"\u4ecb\u7ecd\u4e0bStorIOSQLite\u5230RxJava","date":"2017-03-31T09:46:40.000Z","tags":["Android","RxJava"]},"unlisted":false,"prevItem":{"title":"\u8fc1\u79fb\u6587\u6863\u5230 Docusaurus","permalink":"/2025/02/22/hello-docusaurus"},"nextItem":{"title":"2017\u5f00\u7bc7:curl\u4f7f\u7528\u5907\u5fd8","permalink":"/2017/login-with-curl"}},"content":"## storio\u7b80\u4ecb\\n\\n`storio`\u662fgithub\u4e0a\u7684[\u5f00\u6e90\u9879\u76ee](https://github.com/pushtorefresh/storio),\u5b83\u7528\u6765\u64cd\u4f5c`SQLiteDatabase`\u548c `ContentResolver`\u7684\u64cd\u4f5c\u8fdb\u884c\u5c01\u88c5,\u63d0\u4f9b\u66f4\u7b80\u5355\u66f4\u5f3a\u5927\u7684api.\u6211\u4eec\u9879\u76ee\u6700\u8fd1\u4ece`xutils3`\u8f6c\u6362\u4e3a`StorIOSQLite`,\u8bf4\u8bf4\u5bf9\u5b83\u7684\u4f53\u9a8c\u548c\u5b83\u662f\u5982\u4f55\u4f7f\u7528`RxJava`\u8fdb\u884c\u5c01\u88c5.\\n\x3c!-- truncate --\x3e\\n## Resolver\u64cd\u4f5c\u5b9e\u4f53\u7c7b\\n\\n\u901a\u8fc7`SQLiteTypeMapping`\u63d0\u4f9b\u5b9e\u4f53\u7684\u4e09\u79cd`Resolver`: \\n1. PutResolver \\n2. GetResolver\\n3. DeleteResolver\\n\\n\u4e5f\u5c31\u662f\u5206\u522b\u5bf9\u5e94\u6211\u4eec\u5728\u8fdb\u884cAPI\u64cd\u4f5c\u65f6\\n\\n1. \u5c06\u5b9e\u4f53\u8f6c\u6362\u4e3a\u6570\u636e\u5e93\u6570\u636e(InsertQuery,UpdateQuery...)\\n2. \u5c06\u6570\u636e\u5e93\u6570\u636e(Cursor)\u88c5\u6362\u6210\u5b9e\u4f53\u5bf9\u8c61\\n3. \u5982\u4f55\u6267\u884c\u5220\u9664\u64cd\u4f5c\\n\\n\u5e38\u89c4\u7684`Resolver`\u53ea\u8981\u6211\u5728\u5b9e\u4f53\u7c7b\u4e2d\u4f7f\u7528\u5b83\u7684`Annotation Processor`\u4fbf\u4f1a\u81ea\u52a8\u751f\u6210\u3002\\n\\n> \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u81ea\u5b9a\u4e49\u5462?\\n\\n\u590d\u6742\u5b9e\u4f53\u5bf9\u8c61\u7684\u65f6\u5019(\u8fde\u8868\u67e5\u8be2),\u56e0\u4e3a` storio`\u662f\u4e0d\u5173\u5fc3\u5177\u4f53\u5b9e\u4f53\u7c7b\u7684,\u5b83\u53ea\u5173\u5fc3\u5982\u4f55\u5c06\u5b9e\u4f53\u548c\u6570\u636e\u5e93\u64cd\u4f5c\u5efa\u7acb\u8d77\u5173\u7cfb\\n\u6bd4\u5982\u6587\u6863\u4e2d\u7684[UserWithTweetsGetResolver.java](https://github.com/pushtorefresh/storio/blob/master/storio-sample-app/src/main/java/com/pushtorefresh/storio/sample/db/resolvers/UserWithTweetsGetResolver.java)\\n\\n> \u501f\u9274xutils\u5229\u7528`HashMap`\u6765\u5b9a\u4e49\u901a\u7528\u7684\u8bfb\u53d6\u5b9e\u4f53\\n\\n~~~java\\nimport android.text.TextUtils;\\n\\nimport java.util.Date;\\nimport java.util.HashMap;\\n\\npublic final class DbModel {\\n\\n    /**\\n     * key: columnName\\n     * value: valueStr\\n     */\\n    private HashMap<String, String> dataMap = new HashMap<String, String>();\\n\\n    public String getString(String columnName) {\\n        return dataMap.get(columnName);\\n    }\\n\\n    public int getInt(String columnName) {\\n        return Integer.valueOf(dataMap.get(columnName));\\n    }\\n\\n    public boolean getBoolean(String columnName) {\\n        String value = dataMap.get(columnName);\\n        if (value != null) {\\n            return value.length() == 1 ? \\"1\\".equals(value) : Boolean.valueOf(value);\\n        }\\n        return false;\\n    }\\n\\n    public double getDouble(String columnName) {\\n        return Double.valueOf(dataMap.get(columnName));\\n    }\\n\\n    public float getFloat(String columnName) {\\n        return Float.valueOf(dataMap.get(columnName));\\n    }\\n\\n    public long getLong(String columnName) {\\n        return Long.valueOf(dataMap.get(columnName));\\n    }\\n\\n    public Date getDate(String columnName) {\\n        long date = Long.valueOf(dataMap.get(columnName));\\n        return new Date(date);\\n    }\\n\\n    public java.sql.Date getSqlDate(String columnName) {\\n        long date = Long.valueOf(dataMap.get(columnName));\\n        return new java.sql.Date(date);\\n    }\\n\\n    public void add(String columnName, String valueStr) {\\n        dataMap.put(columnName, valueStr);\\n    }\\n\\n    /**\\n     * @return key: columnName\\n     */\\n    public HashMap<String, String> getDataMap() {\\n        return dataMap;\\n    }\\n\\n    /**\\n     * @param columnName\\n     * @return\\n     */\\n    public boolean isEmpty(String columnName) {\\n        return TextUtils.isEmpty(dataMap.get(columnName));\\n    }\\n}\\n~~~\\n\\n> \u63d0\u4f9bSQLiteTypeMapping,\u53ea\u63d0\u4f9bget\u64cd\u4f5c\\n\\n\\n~~~java\\nimport android.database.Cursor;\\nimport android.support.annotation.NonNull;\\n\\nimport com.pushtorefresh.storio.sqlite.SQLiteTypeMapping;\\nimport com.pushtorefresh.storio.sqlite.StorIOSQLite;\\nimport com.pushtorefresh.storio.sqlite.operations.delete.DeleteResolver;\\nimport com.pushtorefresh.storio.sqlite.operations.delete.DeleteResult;\\nimport com.pushtorefresh.storio.sqlite.operations.get.DefaultGetResolver;\\nimport com.pushtorefresh.storio.sqlite.operations.put.PutResolver;\\nimport com.pushtorefresh.storio.sqlite.operations.put.PutResult;\\n\\n/**\\n * Created by dannyhe on 14/01/2017.\\n */\\n\\npublic class DbModelSQLiteTypeMapping extends SQLiteTypeMapping<DbModel> {\\n\\n\\tpublic static class DBModelPutResolver extends PutResolver<DbModel> {\\n\\n\\t\\t@NonNull\\n\\t\\t@Override\\n\\t\\tpublic PutResult performPut(@NonNull StorIOSQLite storIOSQLite, @NonNull DbModel object) {\\n\\t\\t\\treturn PutResult.newUpdateResult(0,\\"\\");\\n\\t\\t}\\n\\t}\\n\\n\\tpublic static class DBModelGetResolver extends DefaultGetResolver<DbModel> {\\n\\n\\t\\t@NonNull\\n\\t\\t@Override\\n\\t\\tpublic DbModel mapFromCursor(@NonNull Cursor cursor) {\\n\\t\\t\\tDbModel result = new DbModel();\\n\\t\\t\\tint columnCount = cursor.getColumnCount();\\n\\t\\t\\tfor (int i = 0; i < columnCount; i++) {\\n\\t\\t\\t\\tresult.add(cursor.getColumnName(i), cursor.getString(i));\\n\\t\\t\\t}\\n\\t\\t\\treturn result;\\n\\t\\t}\\n\\t}\\n\\n\\tpublic static class DBModelDeleteResolver extends DeleteResolver<DbModel> {\\n\\t\\t@NonNull\\n\\t\\t@Override\\n\\t\\tpublic DeleteResult performDelete(@NonNull StorIOSQLite storIOSQLite, @NonNull DbModel object) {\\n\\t\\t\\treturn DeleteResult.newInstance(0,\\"\\");\\n\\t\\t}\\n\\t}\\n\\n\\n\\tpublic DbModelSQLiteTypeMapping() {\\n\\t\\tsuper(new DBModelPutResolver(),\\n\\t\\t\\t\\tnew DBModelGetResolver(),\\n\\t\\t\\t\\tnew DBModelDeleteResolver());\\n\\t}\\n\\n}\\n~~~\\n\\n> \u5982\u4f55\u4f7f\u7528\\n\\n~~~java\\nStorIOSQLite mStorIOSQLite =  DefaultStorIOSQLite.builder()\\n    .sqliteOpenHelper(dbOpenHelper)\\n    .defaultScheduler(defaultStorIOSQLiteScheduler()) //io thread\\n    .addTypeMapping(DbModel.class, new DbModelSQLiteTypeMapping())\\n    .build;\\n\\nDbModel dbModel = mStorIOSQLite.get()\\n                .object(DbModel.class)\\n                .withQuery(RawQuery.builder()\\n                        .query(\\"SELECT COUNT(*) AS c FROM sqlite_master WHERE type=? AND name=?\\")\\n                        .args(\\"table\\", tableName)\\n                        .build())\\n                .prepare()\\n                .executeAsBlocking();\\n~~~\\n\\n## Entity VS Cursor\\n\\n`storio`\u63d0\u4f9b\u4e86\u4e24\u79cd\u8bfb\u53d6\u65b9\u5f0f:\\n\\n1. Entity \\n~~~java\\nDbModel dbModel = mStorIOSQLite.get()\\n                .object(DbModel.class)\\n                .withQuery(RawQuery.builder()\\n                        .query(\\"SELECT COUNT(*) AS c FROM sqlite_master WHERE type=? AND name=?\\")\\n                        .args(\\"table\\", tableName)\\n                        .build())\\n                .prepare()\\n                .executeAsBlocking();\\n~~~\\n2. Cursor\\n~~~java\\nfinal Cursor dbModelCursor = mStorIOSQLite.get()\\n                .cursor()\\n                .withQuery(RawQuery.builder()\\n                        .query(\\"SELECT COUNT(*) AS c FROM sqlite_master WHERE type=? AND name=?\\")\\n                        .args(\\"table\\", tableName)\\n                        .build())\\n                .prepare()\\n                .executeAsBlocking();\\n...\\n~~~\\n\\n## RxJava VS executeAsBlocking\\n\\n### \u7406\u89e3RxBus\\n\u5173\u4e8e`RxJava`\u7684\u5e94\u7528(`asRxObservable()`),\u76ee\u524d\u6570\u636e\u5e93\u6846\u67b6\u57fa\u672c\u4e0a\u90fd\u662f\u5229\u7528`PublishSubject`.\u6bcf\u4e2a`StorIOSQLite`\u5185\u90e8\u6709\u4e2a`RxChangesBus`,\u6240\u6709\u7684`asRxObservable()`\u65b9\u6cd5\u90fd\u662f\u8ba2\u9605\u8fd9\u4e2abus.\\n\u8ba2\u9605\u65f6\u4f1a\u5bf9Bus\u7684\u4e8b\u4ef6\u8fc7\u6ee4,\u53ea\u7559\u4e0b\u8fd9\u6b21\u67e5\u8be2\u9700\u8981\u7684\u53d8\u5316(\u901a\u8fc7\u6570\u636e\u8868\u7684\u540d\u79f0\u8fc7\u6ee4)\u751f\u6210Observable.\u5e76\u901a\u8fc7`startWith`\u63d2\u5165\u4e00\u6b21\u67e5\u8be2\u7684\u7ed3\u679c,\u7528\u6765\u89e3\u51b3\u8ba2\u9605\u65f6\u6ca1\u6709\u4e8b\u4ef6\u6e90\u89e6\u53d1\u67e5\u8be2\u64cd\u4f5c\u7684\u95ee\u9898.\\n\\n\u6211\u4eec\u6765\u5206\u6790\u4e0b\u9762\u7684\u67e5\u8be2`StorIOSQLite`\u5230\u5e95\u505a\u4e86\u4ec0\u4e48,\u4e0b\u9762\u7684\u67e5\u8be2\u6765\u81ea\u5b98\u7f51\u7684\u6587\u6863:\\n\u6211\u4eec\u5148\u6309\u7740\u94fe\u5f0f\u9605\u8bfb\u6765\u7406\u89e3\u8fd9\u4e2a\u65b9\u6cd5\\n\\n~~~java\\nmStorIOSQLite\\n  .get()\\n  .listOfObjects(Tweet.class)\\n  .withQuery(Query.builder()\\n    .table(\\"tweets\\")\\n    .build())\\n  .prepare()\\n  .asRxObservable() // Get Result as rx.Observable and subscribe to further updates of tables from Query!\\n  .observeOn(mainThread()) // All Rx operations work on Schedulers.io()\\n  .subscribe(tweets -> { // Please don\'t forget to unsubscribe\\n      // will be called with first result and then after each change of tables from Query\\n      // several changes in transaction -> one notification\\n      adapter.setData(tweets);\\n    }\\n  );\\n// don\'t forget to manage Subscription and unsubscribe in lifecycle methods to prevent memory leaks\\n~~~\\n\\n> \u6211\u4eec\u62ff\u5230\u6570\u636e\u5e93(storIOSQLite)\u8bfb\u53d6(get)\u5b58\u6709Tweet\u7684\u5217\u8868(listOfObjects(Tweet.class))\u901a\u8fc7\u67e5\u8be2(Query)\u6570\u636e\u5e93\u8868\\"tweets\\".\u6211\u4eec\u9700\u8981\u5f97\u5230Observable(asRxObservable())\u7136\u540e\u5728\u4e3b\u7ebf\u7a0b\u8ba2\u9605(observeOn(mainThread())),\u6700\u540e\u5c06\u6570\u636e\u7ed9adapter.\u5e76\u4e14\u540e\u9762\u6bcf\u6b21tweets\u8868\u53d1\u751f\u53d8\u5316\u90fd\u4f1a\u89e6\u53d1\u8fd9\u6b21\u5237\u65b0(\u9664\u975e\u53d6\u6d88\u8ba2\u9605,\u5f53\u7136\u4e3a\u4e86\u4e0d\u5f15\u53d1\u5185\u5b58\u6cc4\u9732,\u6211\u4eec\u9700\u8981\u5728\u5408\u7406\u7684\u65f6\u5019\u53d6\u6d88\u8ba2\u9605).\\n\\n###  `StorIOSQLite`\u505a\u4e86\u4ec0\u4e48?\\n\\n1. \u9996\u5148\u901a\u8fc7`Query`\u6765\u83b7\u53d6\u9700\u8981\u67e5\u8be2\u7684\u8868,\u6211\u4eec\u8fd9\u91cc\u662f`tweets`\\n2. \u901a\u8fc7\u5185\u90e8\u7684`RxChangesBus`\u8ba2\u9605\u53d8\u5316(`Changes`),\u5e76\u901a\u8fc7`filter`\u64cd\u4f5c\u7b26\u8fc7\u6ee4\u51fa\u5b58\u5728`tweets`\u8868\u7684\u53d8\u5316\\n3. \u67e5\u8be2\u4e00\u6b21`Query`\u5e76\u901a\u8fc7`startWith`\u64cd\u4f5c\u7b26\u63d2\u5165\u67e5\u8be2\u7ed3\u679c(\u4f1a\u901a\u8fc7listOfObjects\u8fdb\u884c\u5b9e\u4f53\u8f6c\u6362)\\n\\n\u6ce8\u610f:\u4e00\u5b9a\u8981\u53ca\u65f6\u53d6\u6d88\u8ba2\u9605,\u4ee5\u514d\u5f15\u8d77\u5185\u5b58\u6cc4\u9732\\n\\n### \u591a\u5f20\u8868\u7684\u76d1\u542c\\n\\n\u6bd4\u5982\u6709\u8fd9\u6837\u7684\u4e1a\u52a1\u9700\u6c42,\u6211\u9700\u8981\u67e5\u8be2\u591a\u5f20\u8868\u4ee5\u5b8c\u6210\u8fd9\u6b21\u67e5\u8be2,\u4f46\u662f\u4e00\u6761SQL\u8bed\u53e5\u53c8\u4e0d\u80fd\u5b9e\u73b0.\\n\\n~~~java\\nfetchDatasThenRefreshUI();//\u8bfb\u53d6\u6570\u636e\u5e76\u5237\u65b0UI,\u8fd9\u91cc\u4f1a\u8bfb\u53d6table1\u548ctable2\\nmStorIOSQLite\\n    .observeChangesInTables(Sets.newHashSet(\\"table1\\",\\"table2\\"))\\n    .subscribe(changes -> {\\n         fetchDatasThenRefreshUI(); //\u5982\u679c\u6709\u53d8\u5316\u518d\u6b21\u8bfb\u53d6\u6570\u636e\u5e93\\n    });\\n~~~\\n\\n> \u4e0a\u9762\u7684\u5199\u6cd5\u662f\u4e0d\u662f\u5f88\u7e41\u7410,\u6211\u4eec\u91cd\u6784\u4e00\u4e0b...\\n\\n~~~java\\nmStorIOSQLite\\n    .observeChangesInTables(Sets.newHashSet(\\"table1\\",\\"table2\\"))\\n    .startWith(Changes.newInstance(\\"\\"))\\n    .compose(this.<Changes>bindUntilEvent(FragmentEvent.DESTROY)) //\u4f7f\u7528RxLifecycle\u81ea\u52a8\u53d6\u6d88\u8ba2\u9605\\n    .subscribe(changes -> {\\n         fetchDatasThenRefreshUI(); //\u8bfb\u53d6\u6570\u636e\u5e76\u5237\u65b0UI,\u8fd9\u91cc\u4f1a\u8bfb\u53d6table1\u548ctable2\\n    });\\n~~~\\n\\n### \u4e3b\u52a8\u901a\u77e5\u53d8\u5316\\n\\n`StorIOSQLite`\u9ed8\u8ba4\u7684\u901a\u77e5\u53d8\u5316\u662f\u53ea\u8981\u5bf9\u4e00\u5f20\u8868\u6709\u6570\u636e\u64cd\u4f5c\u65f6(CURD)\u5747\u4f1a\u53d1\u751f\u901a\u77e5,\u5982\u679c\u6211\u4eec\u6709\u4e2a\u4e1a\u52a1\u9700\u6c42\u662f\u9700\u8981\u7ed9\u4e00\u4e2a\u8868\u91cc\u9762\u63d2\u51651000\u6761\u6570\u636e,\u63d2\u5165\u6210\u529f\u540e\u518d\u5237\u65b0\u754c\u9762\u3002\\n\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981`LowLevel`\\n\\n~~~java\\nList<String> strings = ...; //\u5b58\u653e\u4e86\u64cd\u4f5c\u4e24\u4e2a\u6570\u636e\u5e93\u8868\u7684sql\u8bed\u53e5\\ntry {    \\n    mStorIOSQLite.lowLevel().beginTransaction(); //\u4e8b\u52a1\\n    for (String sql : strings) { \\n        mStorIOSQLite.lowLevel()\\n            .executeSQL(RawQuery.builder().query(sql).build()); \\n    }\\n    mStorIOSQLite.lowLevel()\\n        .setTransactionSuccessful();\\n    //\u901a\u77e5table1\u548ctable2\u53d1\u751f\u4e86\u53d8\u5316(\u89e6\u53d1\u518d\u6b21\u8bfb\u53d6\u4e8b\u4ef6)\\n    mStorIOSQLite.lowLevel()\\n        .notifyAboutChanges(Changes.newInstance(Sets.newHashSet(\\"table1\\",\\"table2\\"))); \\n    } finally {\\n        mStorIOSQLite.lowLevel().endTransaction();\\n    }\\n~~~"},{"id":"/2017/login-with-curl","metadata":{"permalink":"/2017/login-with-curl","source":"@site/blog/2017/login-with-curl.md","title":"2017\u5f00\u7bc7:curl\u4f7f\u7528\u5907\u5fd8","description":"\u771f\u7684\u597d\u4e45\u6ca1\u5199\u4e1c\u897f\u4e86,\u4e3b\u8981\u539f\u56e0\u662f\u53bb\u5e74\u4e0b\u534a\u5e74\u592a\u5fd9\u4e86,\u5fd9\u7740\u627e\u5de5\u4f5c\u5fd9\u7740\u8fb9\u5b66\u8fb9\u505aAndroid...","date":"2017-02-13T12:33:55.000Z","tags":[{"inline":true,"label":"curl","permalink":"/tags/curl"}],"readingTime":1.085,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"2017\u5f00\u7bc7:curl\u4f7f\u7528\u5907\u5fd8","date":"2017-02-13T12:33:55.000Z","tags":["curl"]},"unlisted":false,"prevItem":{"title":"\u4ecb\u7ecd\u4e0bStorIOSQLite\u5230RxJava","permalink":"/2017/think-about-storio"},"nextItem":{"title":"\u4e0d\u540c\u5e73\u53f0\u4e0b\u7684\u9879\u76ee\u81ea\u52a8\u6253\u5305\u65b9\u5f0f","permalink":"/2016/autopackage"}},"content":"\u771f\u7684\u597d\u4e45\u6ca1\u5199\u4e1c\u897f\u4e86,\u4e3b\u8981\u539f\u56e0\u662f\u53bb\u5e74\u4e0b\u534a\u5e74\u592a\u5fd9\u4e86,\u5fd9\u7740\u627e\u5de5\u4f5c\u5fd9\u7740\u8fb9\u5b66\u8fb9\u505a`Android`...\\n\u8fd9\u91cc\u5907\u6ce8\u4e00\u4e0bcurl\u7684\u4f7f\u7528,\u56e0\u4e3a\u9879\u76ee\u539f\u56e0\u53d1\u5e03\u65b0\u7248\u672c\u7684\u65f6\u5019\u9700\u8981\u5c06\u7f16\u8bd1\u540e\u7684`APK`\u6587\u4ef6\u4e0a\u4f20\u5230\u7edf\u4e00\u7684\u7248\u672c\u7ba1\u7406\u540e\u53f0.\\n\\n\x3c!-- truncate --\x3e\\n### \u89e3\u6790\u8fdc\u7aefJson\u6587\u4ef6\u5e76\u4e0b\u8f7d\u8d44\u6e90\\n\\n\u6bd4\u5982\u6211\u8fd9\u91cc\u9700\u8981\u89e3\u6790[\u5e72\u8d27\u96c6\u4e2d\u8425](http://gank.io/)\u7684\u63a5\u53e3\u5e76\u4e0b\u8f7d\u56fe\u7247\\n\\nAPI:[http://gank.io/api/data/\u798f\u5229/10/1](http://gank.io/api/data/%E7%A6%8F%E5%88%A9/10/1)\\n\\n\u89e3\u6790Json\u6211\u4eec\u4f7f\u7528[jq](https://stedolan.github.io/jq/),\u53ef\u4ee5\u7528`Homebrew`\u5b89\u88c5\\n\\n~~~shell\\nbrew install jq\\n~~~\\n\\n~~~shell\\ncurl -s http://gank.io/api/data/%E7%A6%8F%E5%88%A9/10/1 | jq \'.results[] | .url \' | xargs -n 1 curl -O -#\\n~~~\\n\\n### \u4e0a\u4f20\u6587\u4ef6\u65f6\u663e\u793a\u8fdb\u5ea6\\n\\n\u4e0a\u4f20\u6587\u4ef6\u65f6\u5982\u679c\u9700\u8981\u663e\u793a\u8fdb\u5ea6\u5fc5\u987b\u663e\u793a\u6307\u660e`-o\u53c2\u6570`\u6bd4\u5982`-o /dev/null`\\n\\n### \u83b7\u53d6\u7f51\u7edc\u72b6\u6001\u7801\\n\\n\u4f7f\u7528`-w`\u53c2\u6570\\n\\n~~~shell\\ncurl -s -o /dev/null -w %{http_code} www.baidu.com\\n~~~"},{"id":"/2016/autopackage","metadata":{"permalink":"/2016/autopackage","source":"@site/blog/2016/autopackage.md","title":"\u4e0d\u540c\u5e73\u53f0\u4e0b\u7684\u9879\u76ee\u81ea\u52a8\u6253\u5305\u65b9\u5f0f","description":"iOS","date":"2016-08-16T11:21:49.000Z","tags":[{"inline":true,"label":"iOS","permalink":"/tags/i-os"},{"inline":true,"label":"Android","permalink":"/tags/android"},{"inline":true,"label":"Windows Phone","permalink":"/tags/windows-phone"}],"readingTime":5.82,"hasTruncateMarker":true,"authors":[{"name":"Danny He","title":"Developer in ChengDu,China","url":"https://dannyjiajia.github.io/","socials":{"github":"https://github.com/dannyjiajia"},"imageURL":"https://avatars.githubusercontent.com/u/2572540","key":"dannyhe","page":null}],"frontMatter":{"title":"\u4e0d\u540c\u5e73\u53f0\u4e0b\u7684\u9879\u76ee\u81ea\u52a8\u6253\u5305\u65b9\u5f0f","date":"2016-08-16T11:21:49.000Z","tags":["iOS","Android","Windows Phone"],"authors":"dannyhe"},"unlisted":false,"prevItem":{"title":"2017\u5f00\u7bc7:curl\u4f7f\u7528\u5907\u5fd8","permalink":"/2017/login-with-curl"},"nextItem":{"title":"\u8bf4\u8bf4Core Graphics","permalink":"/2016/thinking-core-graphics"}},"content":"## iOS\\n\\niOS\u4e0b\u7684\u6253\u5305\u4e3b\u8981\u7531`xcodebuild`\u6765\u5b8c\u6210.\u5728xcode 7\u4ee5\u524d\u6211\u901a\u8fc7`xcodebuild`\u6784\u5efa\u9879\u76ee\u7136\u540e\u901a\u8fc7`xcrun`\u6765\u751f\u6210ipa\u6587\u4ef6.\\n\u7c7b\u4f3c\u4ee5\u4e0b\u547d\u4ee4\\n\\n~~~shell\\nxcodebuild -configuration ${BuildConfig} -target \\"${TargetName}\\" GCC_PREPROCESSOR_DEFINITIONS=\\"\\\\${GCC_PREPROCESSOR_DEFINITIONS} FREEVERSION=0\\" WARNING_LDFLAGS=\\"\\\\${WARNING_LDFLAGS} -w\\" CODE_SIGN_IDENTITY=\\"${DistributionCodeIdentity}\\" PROVISIONING_PROFILE=\\"${DistributionProvision}\\"\\nxcrun -sdk iphoneos PackageApplication -v \\"${ProductDir}/${TargetName}.app\\" -o \\"${PrjDir}/${IpaName}\\"\\n~~~\\n\\n\u8fd9\u79cd\u65b9\u5f0f\u6253\u5305\u6709\u5f88\u591a\u5c40\u9650:\\n\x3c!-- truncate --\x3e\\n\\n1. \u9700\u8981\u81ea\u5df1\u5907\u4efd\u751f\u6210\u7684\u7b26\u53f7\u6587\u4ef6\u7b49.\\n2. \u5728xcode 7\u4ee5\u540e\u8fd9\u79cd\u6253\u5305\u65b9\u5f0f\u4e0d\u80fd\u901a\u8fc7\u82f9\u679c\u7684\u5ba1\u6838.\\n3. \u5982\u679c\u9700\u8981\u5176\u4ed6\u8bc1\u4e66\u7684ipa\u7684\u6587\u4ef6,\u53c8\u9700\u8981\u91cd\u65b0\u6784\u5efa.\\n\\n\\n**\u6240\u4ee5\u6700\u597d\u7684\u65b9\u5f0f\u662f\u5b8c\u5168\u6a21\u62dfxcode\u7684\u53d1\u5e03\u5305\u6d41\u7a0b:\u5148archive\u5907\u4efd,\u7136\u540e\u901a\u8fc7\u538b\u7f29\u5305\u5bfc\u51fa\u4e0d\u540c\u8bc1\u4e66\u7684ipa**\\n\\n\u5982\u4f55\u5b9e\u73b0\u5462? \u53ea\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u547d\u4ee4\u5de5\u5177:`xcodebuild`.\\n\u8fd9\u91cc\u5c31\u53ea\u8bf4\u660excode 7\u4ee5\u540e\u7684\u547d\u4ee4\u4f7f\u7528\u65b9\u5f0f.\\n\u9996\u5148\u6211\u4eec`archive`\u9879\u76ee:\\n\\n~~~shell\\nxcodebuild -sdk iphoneos -configuration Release -scheme ${SchemeName} -target \\"${TargetName}\\" -archivePath ${ArchiveFileFullPath} GCC_PREPROCESSOR_DEFINITIONS=\\"\\\\${GCC_PREPROCESSOR_DEFINITIONS} FREEVERSION=0\\" WARNING_LDFLAGS=\\"\\\\${WARNING_LDFLAGS} -w\\" CODE_SIGN_IDENTITY=\\"${DistributionCodeIdentity}\\" PROVISIONING_PROFILE=\\"${DistributionProvision}\\" archive\\n~~~\\n\\n* `SchemeName`\u4e3axcode\u4e2d\u9879\u76ee\u7684`Scheme`\\n* `TargetName`\u4e3a\u9879\u76ee\u7684\u67d0\u4e2atarget\u540d\u79f0\\n* `ArchiveFileFullPath`\u6307\u5b9a`xcarchive`\u6587\u4ef6\u7684\u8def\u5f84,\u5982`HelloWorld.xcarchive`\\n* `DistributionCodeIdentity`\u4e3a\u8bc1\u4e66\u7684\u6807\u793a,\u503c\u5f62\u5982`iPhone Distribution: xxxx (xxx)`\\n* `DistributionProvision`\u4e3aprofile\u7684identifier,\u503c\u5f62\u5982`xxxx-xxxx-xxx-xxx-xx`(\u5176\u5b9e\u5c31\u662f\u5bfc\u5165xcode\u540e\u6b64profile\u7684\u6587\u4ef6\u540d)\\n* `GCC_PREPROCESSOR_DEFINITIONS`\u548c`WARNING_LDFLAGS`\u90fd\u662fxcode\u7684\u73af\u5883\u53d8\u91cf\\n\\n\u751f\u6210\u6210\u529f`xcarchive`\u6587\u4ef6\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5bfc\u51faipa\u6587\u4ef6\u4e86\\n\\n~~~shell\\nxcodebuild -exportArchive -exportOptionsPlist ${ExportOptionsPlistPath} -archivePath ${ArchiveFileFullPath} -exportPath ${IpaFileDirectory}\\n~~~\\n\\n* `ExportOptionsPlistPath` \u6307\u5411\u4e00\u4e2aplist\u6587\u4ef6\u7684\u8def\u5f84,\u8fd9\u4e2aplist\u4e3a\u8fd9\u6b21\u5bfc\u51fa\u63d0\u4f9b\u53c2\u6570\uff0c\u8fd9\u91cc\u63d0\u4f9b\u7684\u4fe1\u606f\u5176\u5b9e\u5c31\u662f\u4f60\u5728xcode\u4e2d\u5bfc\u51faipa\u7684\u65f6\u5019\u9009\u62e9\u7684\u90a3\u4e9b\u9009\u9879.\\n* `ArchiveFileFullPath` \u662f\u524d\u9762\u6211\u4eec\u751f\u6210\u7684`xcarchive` \u6587\u4ef6\u8def\u5f84\\n* `IpaFileDirectory` \u662f\u6700\u7ec8\u5bfc\u51fa\u7684ipa\u7684\u76ee\u5f55(*\u6ce8\u610f\u8fd9\u91cc\u662f\u76ee\u5f55\u800c\u4e0d\u662f\u5177\u4f53\u7684ipa\u6587\u4ef6\u8def\u5f84*)\\n\\n\\n`ExportOptionsPlistPath`plist\u6587\u4ef6\u7684\u683c\u5f0f\u7c7b\u4f3c\u5982\u4e0b:\\n\\n~~~xml\\n<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<!DOCTYPE plist PUBLIC \\"-//Apple//DTD PLIST 1.0//EN\\" \\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\">\\n<plist version=\\"1.0\\">\\n<dict>\\n\\t<key>method</key>\\n\\t<string>app-store</string>\\n\\t<key>teamID</key>\\n\\t<string>\u5f00\u53d1\u8bc1\u4e66\u7684\u56e2\u961fID</string>\\n</dict>\\n</plist>\\n~~~\\n\\n\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u53c2\u6570\u7684\u63a7\u5236\u6bd4\u5982bitcode \u7b26\u53f7\u6587\u4ef6\u662f\u5426\u6253\u5305\u4e00\u8d77\u7b49\u7b49.\u5177\u4f53\u91cc\u9762\u53ef\u4ee5\u6709\u7684\u53c2\u6570\u53ca\u53d6\u503c\u53ef\u4ee5\u901a\u8fc7`xcodebuild -h`\u547d\u4ee4\u67e5\u770b.\\n`method`\u6211\u4e00\u822c\u5c31\u7528\u5230`app-store`\u3001`ad-hoc`\u3001`development`\u8fd9\u4e09\u4e2a\u503c,\u901a\u8fc7\u8bbe\u7f6e`teamID`\u540e`xcodebuild`\u4f1a\u81ea\u52a8\u67e5\u627e\u5bf9\u5e94\u7684\u8bc1\u4e66(\u524d\u63d0\u662f\u4f60\u5fc5\u9009\u5728keychain\u4e2d\u5b89\u88c5\u597d\u8fd9\u4e9b\u8bc1\u4e66)\\n\u6211\u4eec\u53ef\u4ee5\u5728\u811a\u672c\u4e2d\u901a\u8fc7`PlistBuddy`\u52a8\u6001\u4fee\u6539\u8fd9\u4e2aplist\u6587\u4ef6\u7684\u503c\u6765\u5b9e\u73b0\u4e0d\u540c\u7684\u6253\u5305\u7684\u9700\u6c42(\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528\u51e0\u4e2a\u4e0d\u540c\u7684plist)\\n\\n\u6700\u540e\u6211\u4eec\u5c31\u5f97\u5230\u4e86xcarchive\u6587\u4ef6,\u7136\u540e\u6839\u636e\u4e0d\u540c\u7684\u9700\u6c42\u5bfc\u51fa\u4e0d\u540c\u8bc1\u4e66\u7684ipa\u6587\u4ef6\\n\\n## Android\\n\\nandroid\u4e0a\u7684\u6253\u5305\u5c31\u66f4\u590d\u6742\u4e9b.\u9996\u5148,\u5982\u679c\u6709jni\u5219\u9700\u8981\u5148\u7f16\u8bd1so\u6587\u4ef6\u5e76\u5907\u4efd\u7b26\u53f7\u6587\u4ef6.\u7136\u540e\u662fjava\u7684\u6df7\u6dc6\u65e5\u5fd7\u6587\u4ef6\u7b49\u7b49.\\n\u4e0d\u8fc7android\u4e0a\u5219\u6309\u7740\u5e73\u65f6\u6253\u5305\u7684\u6b65\u9aa4\u5199\u6210\u811a\u672c\u5c31\u597d`ant`\u6216\u8005`gradle`\u4efb\u52a1.\\n\u6211\u63a8\u8350\u4f7f\u7528`gradle`\u63d2\u4ef6\u8fdb\u884c\u5f00\u53d1,\u4e00\u662f\u548c`Android Studio`\u7ed3\u5408\u5f88\u5f3a\u5927,\u4e8c\u662f`gradle`\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528`ant`\u4efb\u52a1:)\\n\\n## Windows Phone\\n\\n\u5728`VS`\u91cc\u6784\u5efa\u7528\u7684\u547d\u4ee4\u662f`msbuild`(Microsoft Build Engine),\u5b83\u548c`ant`\u7684\u5f62\u5f0f\u6709\u4e9b\u7c7b\u4f3c.\u662f\u57fa\u4e8e`xml`\u7684\u914d\u7f6e\uff0c\\n\u5176\u5b9e`VS`\u4e2d\u6211\u4eec\u7684\u8bbe\u7f6e\u6700\u7ec8\u843d\u5b9e\u5230\u7684\u4f9d\u7136\u662f`Microsoft Build Engine`.\u8fd9\u4e2axml\u6587\u4ef6\u5c31\u662f`*.*proj`\u6587\u4ef6.\\n\u53ea\u662f\u8fd9\u91cc\u9700\u8981\u6ce8\u610f`Windows`\u4e0b\u6807\u51c6\u547d\u4ee4\u884c\u7684\u4e0a\u4e0b\u6587\u662f\u6ca1\u6709`msbuild`\u547d\u4ee4\u7684.\\n\u6211\u4eec\u9700\u8981\u8fd0\u884c\u7c7b\u4f3c\u540d\u4e3a`Visual Studio 2012 xxxx\u547d\u4ee4\u63d0\u793a`\u7684\u5de5\u5177,\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u5c06\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u52a0\u5165\u6211\u4eec\u7684`DOS`\u91cc.\\n\u6bd4\u5982\u4e0b\u9762\u7684\u811a\u672c\u5148\u8bbe\u7f6e\u4e0a\u4e0b\u6587,\u7136\u540e\u6267\u884c`msbuild`\u547d\u4ee4\\n\\n~~~shell\\n@echo off\\necho./*\\necho. * Check VC++ environment...\\necho. */\\necho.\\n\\nset FOUND_VC=0\\nset FOUND_OUTDIR=0\\n\\nif not \\"%~1\\"==\\"\\" set FOUND_OUTDIR=1\\n\\nif defined VS120COMNTOOLS (\\n    set VSTOOLS=\\"%VS120COMNTOOLS%\\"\\n    set VC_VER=120\\n    set FOUND_VC=1\\n) \\n\\nset VSTOOLS=%VSTOOLS:\\"=%\\nset \\"VSTOOLS=%VSTOOLS:\\\\=/%\\"\\nset VSVARS=\\"%VSTOOLS%vsvars32.bat\\"\\nif not defined VSVARS (\\n    echo Can\'t find VC2013 installed!\\n    goto ERROR\\n)\\necho./*\\necho. * Building Windows Phone Project...\\necho. */\\necho.\\ncall %VSVARS%\\nif %FOUND_VC%==1 (\\n\\tmsbuild  HelloWorld.WindowsPhone.vcxproj /p:Configuration=\\"Release\\"  /p:Platform=\\"ARM\\" /t:Clean;Rebuild\\n)\\n~~~\\n\\n`msbuild  HelloWorld.WindowsPhone.vcxproj /p:Configuration=\\"Release\\"  /p:Platform=\\"ARM\\" /t:Clean;Rebuild`\u8868\u793a\u5728`Release`\u6a21\u5f0f\u4e0b\u6e05\u7406\u7136\u540e\u91cd\u65b0\u6784\u5efa`HelloWorld.WindowsPhone.vcxproj`\u9879\u76ee,\u76ee\u6807\u5e73\u53f0\u4e3a`ARM`. \\n\u547d\u4ee4\u4f1a\u6309\u4ee5\u524d\u6784\u5efa\u7684\u76ee\u6807\u76ee\u5f55\u5bfc\u51fa\u6700\u7ec8\u7684\u5305\u6587\u4ef6,\u5982\u679c\u4e4b\u524d\u6ca1\u8bbe\u7f6e,\u5219\u5728\u5f53\u524d\u76ee\u5f55.\u5982\u679c\u9700\u8981\u6307\u5b9a\u901a\u8fc7\u53c2\u6570`/p:OutDir=\u8def\u5f84`\u8bbe\u7f6e\\n\\n### \u9a8c\u8bc1\u5b89\u88c5\u5305\\n\\n\u5fae\u8f6f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177`appcert.exe`\u6765\u9a8c\u8bc1,\u8fd9\u4e2a\u6587\u4ef6\u7684\u4e00\u822c\u8def\u5f84\u4e3a:`C:\\\\Program Files (x86)\\\\Windows Kits\\\\10\\\\App Certification Kit\\\\appcert.exe`\\n\\n> appcert.exe test -appxpackagepath \u5305\u8def\u5f84 -reportoutputpath \u751f\u6210xml\u683c\u5f0f\u7684\u62a5\u544a\u6587\u4ef6\u8def\u5f84\\n\\n**\u6ce8\u610f:\u8fd9\u91cc\u8bf4\u660e\u7684\u662f\u57fa\u4e8e`VS2013`\u7684\u5f00\u53d1\u73af\u5883.`VS2015`\u53ef\u80fd\u6709\u4e9b\u51fa\u5165.**\\n\\n### \u90e8\u7f72\u5b89\u88c5\u5305\u5230\u8bbe\u5907\\n\\n`AppDeployCmd.exe`\\n\u4e00\u822c\u8def\u5f84\u4e3a:`C:\\\\Program Files (x86)\\\\Microsoft SDKs\\\\Windows Phone\\\\v8.1\\\\Tools\\\\AppDeploy\\\\AppDeployCmd.exe`\\n\\n> AppDeployCmd.exe /install \u5305\u8def\u5f84 /targetdevice:de\\n\\nEnd:)"},{"id":"/2016/thinking-core-graphics","metadata":{"permalink":"/2016/thinking-core-graphics","source":"@site/blog/2016/thinking-core-graphics.md","title":"\u8bf4\u8bf4Core Graphics","description":"\u8bb0\u5f9711\u5e74\u5de6\u53f3\u505aiOS\u5f00\u53d1\u7684\u4eba\u771f\u4e0d\u591a,\u5927\u73af\u5883\u4e0b\u5927\u5bb6\u5b66\u4e60iOS\u5f00\u53d1\u57fa\u672c\u90fd\u9760WWDC\u548c\u56fd\u5916\u7684\u6587\u732e,\u8fd1\u51e0\u5e74\u968f\u7740iOS\u5f00\u53d1\u7684\u706b\u7206,\u597d\u591a\u6280\u672f\u90fd\u88ab\u6316\u6398\u51fa\u6765(\u5176\u5b9e\u662f\u81ea\u5df1\u4ee5\u524d\u82f1\u6587\u4e0d\u597d,\u597d\u591a\u4e1c\u897f\u90fd\u662f\u70b9\u5230\u4e3a\u6b62),\u6700\u8fd1\u6bd4\u8f83\u95f2\u91cd\u65b0\u770b\u4e86\u4e0biOS\u76f8\u5173\u7684\u4e00\u4e9b\u4e1c\u897f.\u611f\u89c9\u6709\u4e9b\u4e1c\u897f\u867d\u7136\u4e0d\u662f\u5e38\u7528\u7684,\u4f46\u660e\u767d\u540e\u53ef\u4ee5\u66f4\u7075\u6d3b\u7684\u8fd0\u7528\u5230\u65e5\u5e38\u7684\u5f00\u53d1\u4e2d.\u8fd9\u91cc\u8bb0\u5f55\u4e0b\u6211\u5bf9iOS\u91cc\u4e00\u4e9b\u7279\u6027\u7406\u89e3.","date":"2016-08-03T11:18:01.000Z","tags":[{"inline":true,"label":"iOS","permalink":"/tags/i-os"}],"readingTime":3.365,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"\u8bf4\u8bf4Core Graphics","date":"2016-08-03T11:18:01.000Z","tags":["iOS"]},"unlisted":false,"prevItem":{"title":"\u4e0d\u540c\u5e73\u53f0\u4e0b\u7684\u9879\u76ee\u81ea\u52a8\u6253\u5305\u65b9\u5f0f","permalink":"/2016/autopackage"},"nextItem":{"title":"\u4ee5ABS\u5b8f\u4e3a\u4f8b\u8bf4\u8bf4Clang\u4e2d\u7684\u5b8f\u5b9a\u4e49\u65b9\u5f0f\u6280\u5de7","permalink":"/2016/thinking-about-macro"}},"content":"\u8bb0\u5f9711\u5e74\u5de6\u53f3\u505aiOS\u5f00\u53d1\u7684\u4eba\u771f\u4e0d\u591a,\u5927\u73af\u5883\u4e0b\u5927\u5bb6\u5b66\u4e60iOS\u5f00\u53d1\u57fa\u672c\u90fd\u9760WWDC\u548c\u56fd\u5916\u7684\u6587\u732e,\u8fd1\u51e0\u5e74\u968f\u7740iOS\u5f00\u53d1\u7684\u706b\u7206,\u597d\u591a\u6280\u672f\u90fd\u88ab\u6316\u6398\u51fa\u6765(\u5176\u5b9e\u662f\u81ea\u5df1\u4ee5\u524d\u82f1\u6587\u4e0d\u597d,\u597d\u591a\u4e1c\u897f\u90fd\u662f\u70b9\u5230\u4e3a\u6b62),\u6700\u8fd1\u6bd4\u8f83\u95f2\u91cd\u65b0\u770b\u4e86\u4e0biOS\u76f8\u5173\u7684\u4e00\u4e9b\u4e1c\u897f.\u611f\u89c9\u6709\u4e9b\u4e1c\u897f\u867d\u7136\u4e0d\u662f\u5e38\u7528\u7684,\u4f46\u660e\u767d\u540e\u53ef\u4ee5\u66f4\u7075\u6d3b\u7684\u8fd0\u7528\u5230\u65e5\u5e38\u7684\u5f00\u53d1\u4e2d.\u8fd9\u91cc\u8bb0\u5f55\u4e0b\u6211\u5bf9iOS\u91cc\u4e00\u4e9b\u7279\u6027\u7406\u89e3.\\n\\n## \u5e7f\u4e49\u7684\u79bb\u5c4f\u6e32\u67d3?\\n\\n\u9996\u5148\u770bGPU\u5c4f\u5e55\u6e32\u67d3\u4e24\u79cd\u65b9\u5f0f:\\n\\n* On-Screen Rendering:\u610f\u4e3a\u5f53\u524d\u5c4f\u5e55\u6e32\u67d3\uff0c\u6307\u7684\u662fGPU\u7684\u6e32\u67d3\u64cd\u4f5c\u662f\u5728\u5f53\u524d\u7528\u4e8e\u663e\u793a\u7684\u5c4f\u5e55\u7f13\u51b2\u533a\u4e2d\u8fdb\u884c\u3002\\n* Off-Screen Rendering:\u610f\u4e3a\u79bb\u5c4f\u6e32\u67d3\uff0c\u6307\u7684\u662fGPU\u5728\u5f53\u524d\u5c4f\u5e55\u7f13\u51b2\u533a\u4ee5\u5916\u65b0\u5f00\u8f9f\u4e00\u4e2a\u7f13\u51b2\u533a\u8fdb\u884c\u6e32\u67d3\u64cd\u4f5c\u3002\\n\x3c!-- truncate --\x3e\\n\u4e0a\u9762\u7684\u4e24\u79cd\u65b9\u5f0f\u90fd\u662f\u5728GPU\u4e2d\u6267\u884c\u7684,\u79bb\u5c4f\u6e32\u67d3\u4f1a\u5f00\u8f9f\u4e00\u4e2a\u7f13\u51b2\u533a\u4e0a\u4e0b\u6587\u8fdb\u884c\u6e32\u67d3(\u8fd9\u91cc\u4e0d\u4f1a\u5728\u5c4f\u5e55\u4e0a\u663e\u793a),\u7136\u540e\u8fdb\u884c\u4e0a\u4e0b\u7684\u5207\u6362.\u6bd4\u5982\u5c06\u4e4b\u524d\u5f00\u8f9f\u7684\u7f13\u51b2\u533a\u8bbe\u7f6e\u4e3a\u5f53\u524d\u5c4f\u5e55\u7684\u7f13\u51b2\u533a(\u663e\u793a\u5230\u5c4f\u5e55),\u4f46\u8fd9\u91cc\u5f00\u9500\u6bd4\u8f83\u5927\u3002\\n\u800c`Core Graphics`\u662f`Software rendering`,\u4e5f\u5c31\u662f`CPU`\u6267\u884c`GPU`\u4e0a\u4e00\u6837\u7684\u7b97\u6cd5(`GPU`\u80fd\u66f4\u597d\u7684\u6267\u884c\u5e76\u53d1\u4efb\u52a1).\\n\u53c2\u8003:https://en.wikipedia.org/wiki/Software_rendering\\n\\n## \u79bb\u5c4f\u6e32\u67d3\u5e76\u4e0d\u610f\u5473\u7740\u8f6f\u4ef6\u7ed8\u5236?\\n\\n`QuartzCore Framework`\u901a\u8fc7`Core Anmation`\u6765\u628a\u6211\u4eec\u6784\u5efa\u7684\u754c\u9762\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a(\u901a\u8fc7\u64cd\u4f5copenGL ES).\\n\u8fd9\u91cc\u9762\u4f1a\u4f7f\u7528`openGL ES`\u7684\u7f13\u51b2\u533a,\u5b83\u662f\u5728`GPU`\u91cc\u6267\u884c\u7684\u3002\u6bd4\u5982`CALayer`\u7684`masking`\u5c31\u4f7f\u7528\u4e86\u7247\u6bb5\u7740\u8272\u5668.\\n![CoreAnmation](http://cc.cocimg.com/api/uploads/20150428/1430209790572112.png)\\n\\n> \u8fd9\u91cc\u8bf4\u660e\u4e0bCALayer\u7684mask,\u5b83\u662f\u6839\u636e\u8bbe\u7f6e\u7684layer\u7684alpha\u503c\u8fdb\u884c\u8fc7\u6ee4\u50cf\u7d20\u5b9e\u73b0\u6a21\u677f\u7684(\u7247\u6bb5\u7740\u8272\u5668),\u4e0d\u662fopenGL ES\u4e2d\u7684\u6a21\u677f\u6d4b\u8bd5\u5b9e\u73b0\u7684\\n\\n\u53c2\u8003WWDC:https://developer.apple.com/videos/play/wwdc2014/419/\\n\\n\\n## Quartz 2D \u548cQuartz Core\u7684\u533a\u522b\u662f\u4ec0\u4e48?\\n\\n`QuartzCore Framework`\u901a\u8fc7`Core Anmation`\u6765\u628a\u6211\u4eec\u6784\u5efa\u7684\u754c\u9762\u7ed8\u5236\u5230\u5c4f\u5e55\u4e0a.\\n`Quartz 2D`\u662f`CoreGraphics Framework`\u4e0b\u4e00\u5957API\\n\\n## Core Graphics\u6709\u989c\u8272\u7684\u6df7\u5408\u8bbe\u7f6e\u5417?\\n\\n`CGBlendMode`\u5b9a\u4e49\u4e86\u5f88\u591a\u9884\u8bbe\u6a21\u5f0f,\u53ef\u4ee5\u901a\u8fc7`drawInRect:blendMode:alpha:`\u6216\u8005`UIRectFillUsingBlendMode(...)`\u7b49\u51fd\u6570\u8fdb\u884c\u6df7\u5408\u6a21\u5f0f\u7684\u8bbe\u7f6e\u3002\\n\\n## openGL ES\u7684\u6570\u636e\u53ef\u4ee5\u7528Core Graphics\u7ed8\u5236\u5417?\\n\\n\u5177\u4f53\u7684\u8f6c\u6362\u65b9\u6cd5\u53c2\u8003\u8fd9\u91cc:http://gamesfromwithin.com/remixing-opengl-and-uikit\\n\\n## \u5982\u4f55\u7406\u89e3\u8d1d\u585e\u5c14\u66f2\u7ebf\\n\\n\u901a\u8fc7\u7ef4\u57fa\u767e\u79d1\u7684\u56fe\u7406\u89e3:)\\n* \u4e8c\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\u53ea\u6709\u4e00\u4e2a\u63a7\u5236\u70b9p1\\n![\u4e8c\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf](http://upload.wikimedia.org/wikipedia/commons/thumb/2/2d/Bezier_2_big.gif/240px-Bezier_2_big.gif)\\n* \u4e09\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf\u6709\u4e24\u4e2a\u63a7\u5236\u70b9p1\u548cp2\\n![\u4e09\u6b21\u8d1d\u585e\u5c14\u66f2\u7ebf](http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Bezier_3_big.gif/240px-Bezier_3_big.gif)\\n\\n\\n## \u53c2\u8003\\n\\n* https://github.com/gnustep/quartzcore\\n* http://www.jianshu.com/p/6d24a4c29e18\\n* http://www.jianshu.com/p/0e785269dccc"},{"id":"/2016/thinking-about-macro","metadata":{"permalink":"/2016/thinking-about-macro","source":"@site/blog/2016/thinking-about-macro.md","title":"\u4ee5ABS\u5b8f\u4e3a\u4f8b\u8bf4\u8bf4Clang\u4e2d\u7684\u5b8f\u5b9a\u4e49\u65b9\u5f0f\u6280\u5de7","description":"\u6211\u4eec\u5728iOS\u5f00\u53d1\u7684\u65f6\u5019\u7ecf\u5e38\u4f7f\u7528\u5b8f\u5b9a\u4e49,\u6700\u5e38\u7528\u7684\u5b8f\u80af\u5b9a\u662fDEBUG,\u50cf\u4e0b\u9762\u8fd9\u6837:)","date":"2016-07-25T17:25:56.000Z","tags":[{"inline":true,"label":"iOS","permalink":"/tags/i-os"}],"readingTime":5.69,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"\u4ee5ABS\u5b8f\u4e3a\u4f8b\u8bf4\u8bf4Clang\u4e2d\u7684\u5b8f\u5b9a\u4e49\u65b9\u5f0f\u6280\u5de7","date":"2016-07-25T17:25:56.000Z","tags":["iOS"]},"unlisted":false,"prevItem":{"title":"\u8bf4\u8bf4Core Graphics","permalink":"/2016/thinking-core-graphics"},"nextItem":{"title":"\u7528Lua\u5b9e\u73b0A*\u5bfb\u8def\u7b97\u6cd5","permalink":"/2016/findWay"}},"content":"\u6211\u4eec\u5728iOS\u5f00\u53d1\u7684\u65f6\u5019\u7ecf\u5e38\u4f7f\u7528\u5b8f\u5b9a\u4e49,\u6700\u5e38\u7528\u7684\u5b8f\u80af\u5b9a\u662f`DEBUG`,\u50cf\u4e0b\u9762\u8fd9\u6837:)\\n\\n~~~objectivec\\n#if DEBUG\\n...\\n#endif\\n\\n#if __has_feature(objc_arc_weak)\\n...\\n#elif __has_feature(objc_arc)\\n...\\n#else\\n...\\n#endif\\n\\n#if (TARGET_OS_MAC || TARGET_OS_IPHONE)\\n...\\n#endif\\n~~~\\n\\n\u8bb0\u5f55\u4e0b\u6211\u5bf9Clang\u4e2d\u5b9a\u4e49\u7684\u5b8f`ABS`\u7684\u7406\u89e3(\u4ece\u96f6\u5f00\u59cb\u7684\u7406\u89e3),\u5b83\u7684\u4f5c\u7528\u5f88\u7b80\u5355:`\u5f97\u5230\u4e00\u4e2a\u6570\u7684\u7edd\u5bf9\u503c`\u3002\\n\\n\\n\x3c!-- truncate --\x3e\\n# \u5b8f\u7684\u7c7b\u578b\\n\\n\u5b8f\u5206\u4e3a\u5bf9\u8c61\u5b8f(object-like macro)\u548c\u51fd\u6570\u5b8f(function-like macro)\u3002\\n\\n## \u5bf9\u8c61\u5b8f\\n\\n\u5bf9\u8c61\u5b8f\u5c31\u662f\u6211\u4eec\u5b9a\u4e49\u7684\u4e00\u4e9b\u56fa\u5b9a\u503c,\u5c31\u50cf\u82f9\u679c\u7684\u5b9a\u4e49:\\n\\n~~~objectivec\\n/*  Even though these might be more useful as long doubles, POSIX requires\\n    that they be double-precision literals.                                   */\\n#define M_E         2.71828182845904523536028747135266250   /* e              */\\n#define M_LOG2E     1.44269504088896340735992468100189214   /* log2(e)        */\\n#define M_LOG10E    0.434294481903251827651128918916605082  /* log10(e)       */\\n#define M_LN2       0.693147180559945309417232121458176568  /* loge(2)        */\\n#define M_LN10      2.30258509299404568401799145468436421   /* loge(10)       */\\n#define M_PI        3.14159265358979323846264338327950288   /* pi             */\\n#define M_PI_2      1.57079632679489661923132169163975144   /* pi/2           */\\n#define M_PI_4      0.785398163397448309615660845819875721  /* pi/4           */\\n#define M_1_PI      0.318309886183790671537767526745028724  /* 1/pi           */\\n#define M_2_PI      0.636619772367581343075535053490057448  /* 2/pi           */\\n#define M_2_SQRTPI  1.12837916709551257389615890312154517   /* 2/sqrt(pi)     */\\n#define M_SQRT2     1.41421356237309504880168872420969808   /* sqrt(2)        */\\n#define M_SQRT1_2   0.707106781186547524400844362104849039  /* 1/sqrt(2)      */\\n~~~\\n\\n\u7406\u89e3\u6210\u7b80\u5355\u7684\u66ff\u6362\u4ee3\u7801\u5c31\u597d\u3002\\n\\n## \u51fd\u6570\u5b8f\\n\\n\u51fd\u6570\u5b8f\u5c31\u50cf\u51fd\u6570\u4e00\u6837\u63a5\u53d7\u53c2\u6570,\u5c31\u50cf\u4e0a\u6587\u4e2d\u8bf4\u5230\u7684`ABS`\u5b8f\\n\\n# \u5b9a\u4e49ABS\u5b8f\\n\\n\u6211\u4eec\u5c1d\u8bd5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a\u5b8f`ABS`,\u529f\u80fd\u548c`Clang`\u7684\u4e00\u6837,\u5f97\u5230\u4e00\u4e2a\u6570\u7684\u7edd\u5bf9\u503c\u3002\\n\\n~~~objectivec\\n//version 1\\n#define ABS(A) A < 0 ? - A : A\\n~~~\\n\\n\u7136\u540e\u4f7f\u7528\\n\\n~~~objectivec\\nNSLog(@\\"%d\\",ABS(-1)); //1\\n~~~\\n\\n\u597d\u7b80\u5355,\u5b8c\u6210\u4e86\u3002\u522b\u4eba\u62ff\u53bb\u4e00\u7528\u9a6c\u4e0a\u51fa\u95ee\u9898\u4e86,\u53ea\u80fd\u8bf4\u8fd8\u662f\u592a\u5e74\u8f7b\u4e86:)\\n\\n~~~objectivec\\nNSLog(@\\"%d\\",ABS(-1) + 1); //1 error\\n//NSLog(@\\"%d\\",-1 < 0 ? 1 : 1 + 1)\\n~~~\\n\\n\u628a\u4e0a\u9762\u7684\u5b8f\u5c55\u5f00\u5c31\u660e\u663e\u770b\u51fa\u7ed3\u679c\u662f`1`,\u6211\u4eec\u5e94\u8be5\u628a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u4f5c\u4e3a\u7ed3\u679c\u66ff\u6362\u5b8f,\\nso\u6211\u4eec\u4fee\u590d\u6211\u4eec\u7684\u5b8f:\\n\\n~~~objectivec\\n//version 2\\n#define ABS(A) (A < 0 ? - A : A)\\n~~~\\n\\n\u4ee5\u4e3a\u5929\u4e0b\u592a\u5e73\u4e86? `No`,\u5982\u679c\u50cf\u4e0b\u9762\u8fd9\u6837\u7528\u5462?\\n\\n~~~objectivec\\nNSLog(@\\"%d\\",ABS(2 < 3 ? -1 < 0 ? -1 : -2 : -2)); //-1 error\\n//NSLog(@\\"%d\\",2 < 3 ? -1 : -2 < 0 ? - 2 < 3 ? -1 : -2 : 2 < 3 ? -1 : -2);\\n//NSLog(@\\"%d\\",(2 < 3 ? -1 : -2 ) < 0 ? (- 2 < 3 ? -1 : -2) : (2 < 3 ? -1 : -2));\\n~~~\\n\\n\u54c8\u54c8\uff0c\u662f\u4e0d\u662f\u88ab\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u5413\u5230\u4e86? \u5176\u5b9e\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u6211\u4eec\u53c2\u6570\u53ef\u4ee5\u662f\u8868\u8fbe\u5f0f\u3002\\n\\n~~~objectivec\\n//version 3\\n#define ABS(A) ((A) < 0 ? - (A) : (A))\\n~~~\\n\\n\u73b0\u5728\u8fd9\u4e2a\u5b8f\u57fa\u672c\u80dc\u4efb\u4e86\u5927\u90e8\u5206\u5730\u65b9,\u4f46\u662f\u8fc7\u51e0\u5929\u67d0\u5927\u725b\u7a81\u7136\u8fc7\u6765\u627e\u4f60,\u8bf4\u4f60\u63d0\u4f9b\u7684\u5b8f\u6709\u95ee\u9898!\\n\\n~~~objectivec\\nint a = -1;\\nNSLog(@\\"%d\\",ABS(a++)); //0 error\\nNSLog(@\\"%d\\",a);//1 error\\n~~~\\n\\n\u4f60\u770b\u5230\u8fd9\u4ee3\u7801\u7684\u7b2c\u4e00\u53cd\u5e94\u53ef\u80fd\u662f,\u5367\u69fd,\u4e3a\u4ec0\u4e48\u4e00\u5b9a\u8981\u7528`a++`\u5c31\u4e0d\u80fd\u7528\u5b8c\u4e86\u518d`+1`\u561b\uff01\u53ef\u662f\u5927\u725b\u8bf4\u4ed6\u5c31\u7231\u8fd9\u6837\u5199,\u4ee3\u7801\u7b80\u6d01...\\n\u597d\uff01\u6211\u4eec\u8fd8\u662f\u8001\u5b9e\u7684\u5c55\u5f00\u8fd9\u4e2a\u5b8f\\n\\n~~~objectivec\\nNSLog(@\\"%d\\",((a++) < 0 ? - (a++) : (a++)));\\nNSLog(@\\"%d\\",a);\\n~~~\\n\\n`a++`\u8868\u793a\u5148\u4f7f\u7528`a`\u7684\u503c,\u7136\u540e\u5bf9`a`\u8fdb\u884c\u81ea\u52a01,\u4e0a\u9762\u7684\u5c55\u5f00\u7684\u5b8f\u4e2d,\u7b2c\u4e00\u6b21`a`\u548c`0`\u6bd4\u8f83\u8fc7\u540e\u8fdb\u884c\u4e86\u81ea\u52a0`1`\u53d8\u6210\u4e86`0`,\u540e\u9762\u8fd4\u56de`0`\u540e\u53c8\u81ea\u52a0`1`\uff0c\u6240\u4ee5`a`\u6700\u540e\u7684\u503c\u53d8\u6210\u4e86`1`!\\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u5148\u7b97\u51fa\u8868\u8fbe\u5f0f`A`\u7684\u503c,\u4fdd\u8bc1\u5b83\u53ea\u88ab\u8ba1\u7b97\u4e00\u6b21\u3002\\n\\n~~~objectivec\\n//version 4\\n#define ABS(A) ({__typeof__ (A) __a = (A); __a < 0 ? - __a : __a;})\\n~~~\\n\\n`({...})`\u662f\u8bed\u53e5\u8868\u8fbe\u5f0f,GNU C \u628a\u5305\u542b\u5728\u62ec\u53f7\u4e2d\u7684\u590d\u5408\u8bed\u53e5\u770b\u505a\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a\u8bed\u53e5\u8868\u8fbe\u5f0f\uff0c\u5b83\u53ef\u4ee5\u51fa\u73b0\u5728\u4efb\u4f55\u5141\u8bb8\u8868\u8fbe\u5f0f\u7684\u5730\u65b9\uff0c\u4f60\u53ef\u4ee5\u5728\u8bed\u53e5\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u5faa\u73af\u3001\u5c40\u90e8\u53d8\u91cf\u7b49\uff0c\u539f\u672c\u53ea\u80fd\u5728\u590d\u5408\u8bed\u53e5\u4e2d\u4f7f\u7528\u3002\\n\\n# \u82f9\u679c\u5b9a\u4e49\u7684ABS\\n\\n\u6700\u540e\u6211\u4eec\u6765\u770b\u770b\u82f9\u679c\u5b9a\u4e49\u7684`ABS`\u5b8f:\\n\\n~~~objectivec\\n#define __NSX_PASTE__(A,B) A##B\\n#if !defined(ABS)\\n#define __NSABS_IMPL__(A,L) ({ __typeof__(A) __NSX_PASTE__(__a,L) = (A); (__NSX_PASTE__(__a,L) < 0) ? - __NSX_PASTE__(__a,L) : __NSX_PASTE__(__a,L); })\\n#define ABS(A) __NSABS_IMPL__(A,__COUNTER__)\\n#endif\\n~~~\\n\\n\u770b\u8d77\u6765\u548c\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684`ABS`\u6574\u4f53\u67b6\u6784\u5dee\u4e0d\u591a,`__NSX_PASTE__`\u4e2d\u7684`##`\u662f\u7279\u6b8a\u7b26\u53f7\u7528\u6765\u8fde\u63a5\u4e24\u4e2a\u53c2\u6570\u3002\u6bd4\u5982\u4e0a\u9762\u662f`__a`\u548c`L`\uff0c\u800c`L`\u4f20\u5165\u7684\u662f`__COUNTER__`\uff0c\u5b83\u662f\u4f7f\u7528\u4e00\u6b21\u540e\u4fbf\u4f1a\u81ea\u52a01\u7684\u7279\u6b8a\u5b8f.\u4e5f\u5c31\u662f\u4e3a\u4e86\u7ed9\u6211\u4eec\u7684\u53d8\u91cf\u52a0\u4e86\u540e\u7f00\u3002\u8fd9\u662f\u4e3a\u4e86\u786e\u4fdd\u5728\u8fd9\u4e2a\u4f5c\u7528\u57df\u4e2d\u5b8f\u4e0d\u4f1a\u51fa\u73b0\u76f8\u540c\u53d8\u91cf\u3002\\n\u50cf\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u5b8f\u4e00\u6837\u7b80\u5355\u7684\u4f7f\u7528`__a`\u53d8\u91cf,\u5982\u679c\u4ee3\u7801\u7684\u4f5c\u7528\u57df\u4e2d\u6709\u91cd\u590d\u7684`__a`\u53d8\u91cf\u5c31\u60b2\u5267\u4e86... \u6bd4\u5982\u6211\u4eec\u50cf\u4e0b\u9762\u8fd9\u6837\u4f7f\u7528\u6211\u4eec\u5148\u524d\u81ea\u5df1\u5b9a\u4e49\u7684`ABS`\u5b8f(version 4)\u5c31\u4f1a\u53d1\u73b0\u9519\u8bef\u4e86...\\n\\n~~~objectivec\\nint __a = -1;\\nNSLog(@\\"%d\\",ABS(__a++)); //32767 error\\nNSLog(@\\"%d\\",__a); // -1\\n~~~\\n\\n\u4f60\u770b\u4e86\u4e0a\u9762\u82f9\u679c\u7684\u5b9a\u4e49\u540e\u5e94\u8be5\u77e5\u9053\u600e\u4e48\u4fee\u6539\u6211\u4eec\u7684\u5b9a\u4e49\u4e86\u5427\\n:) end"},{"id":"/2016/findWay","metadata":{"permalink":"/2016/findWay","source":"@site/blog/2016/findWay.md","title":"\u7528Lua\u5b9e\u73b0A*\u5bfb\u8def\u7b97\u6cd5","description":"\u5173\u4e8eA*\u5bfb\u8def\u7684\u7b97\u6cd5\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0","date":"2016-07-22T19:37:17.000Z","tags":[{"inline":true,"label":"Lua","permalink":"/tags/lua"}],"readingTime":4.555,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"\u7528Lua\u5b9e\u73b0A*\u5bfb\u8def\u7b97\u6cd5","date":"2016-07-22T19:37:17.000Z","tags":["Lua"]},"unlisted":false,"prevItem":{"title":"\u4ee5ABS\u5b8f\u4e3a\u4f8b\u8bf4\u8bf4Clang\u4e2d\u7684\u5b8f\u5b9a\u4e49\u65b9\u5f0f\u6280\u5de7","permalink":"/2016/thinking-about-macro"},"nextItem":{"title":"WindowsPhone\u7684TextBox\u591a\u884c\u652f\u6301\u53ca\u7591\u95ee","permalink":"/2016/multiline-textbox-wp8-1"}},"content":"\u5173\u4e8eA*\u5bfb\u8def\u7684\u7b97\u6cd5\u53c2\u8003\u8fd9\u7bc7[\u6587\u7ae0](http://www.cnblogs.com/zhoug2020/p/3468167.html)\\n\x3c!-- truncate --\x3e\\n# \u5b9e\u73b0\\n\\n~~~lua\\n-------------------------------------------------------------------------------\\n-- \u9884\u5b9a\u4e49\u5de5\u5177\u7c7b\\n-------------------------------------------------------------------------------\\n-- \u5b9a\u4e49\u7c7b\\nfunction class(classname, super)\\n    local superType = type(super)\\n    local cls\\n\\n    if superType ~= \\"function\\" and superType ~= \\"table\\" then\\n        superType = nil\\n        super = nil\\n    end\\n\\n    if superType == \\"function\\" or (super and super.__ctype == 1) then\\n        -- inherited from native C++ Object\\n        cls = {}\\n\\n        if superType == \\"table\\" then\\n            -- copy fields from super\\n            for k,v in pairs(super) do cls[k] = v end\\n            cls.__create = super.__create\\n            cls.super    = super\\n        else\\n            cls.__create = super\\n            cls.ctor = function() end\\n        end\\n\\n        cls.__cname = classname\\n        cls.__ctype = 1\\n\\n        function cls.new(...)\\n            local instance = cls.__create(...)\\n            -- copy fields from class to native object\\n            for k,v in pairs(cls) do instance[k] = v end\\n            instance.class = cls\\n            instance:ctor(...)\\n            return instance\\n        end\\n\\n    else\\n        -- inherited from Lua Object\\n        if super then\\n            cls = {}\\n            setmetatable(cls, {__index = super})\\n            cls.super = super\\n        else\\n            cls = {ctor = function() end}\\n        end\\n\\n        cls.__cname = classname\\n        cls.__ctype = 2 -- lua\\n        cls.__index = cls\\n\\n        function cls.new(...)\\n            local instance = setmetatable({}, cls)\\n            instance.class = cls\\n            instance:ctor(...)\\n            return instance\\n        end\\n    end\\n\\n    return cls\\nend\\n\\n-- \u5224\u65ad\u662f\u5426\u662f\u7c7b\u7684\u5b9e\u4f8b\\nfunction iskindof(obj, classname)\\n    local t = type(obj)\\n    local mt\\n    if t == \\"table\\" then\\n        mt = getmetatable(obj)\\n    end\\n\\n    while mt do\\n        if mt.__cname == classname then\\n            return true\\n        end\\n        mt = mt.super\\n    end\\n\\n    return false\\nend\\n\\n-------------------------------------------------------------------------------\\n-- \u903b\u8f91\\n-------------------------------------------------------------------------------\\n\\nlocal ASSERT_FUNC = function(op)\\n    assert(op,string.format(\\"error:%s\\",debug.getinfo(1).name))\\nend\\n\\n-- Point\\nlocal PathPoint = class(\\"PathPoint\\")\\n\\nfunction PathPoint:ctor(x,y)\\n    self:setX(x)\\n    self:setY(y)\\nend\\n\\nfunction PathPoint:setX(x)\\n    self.x = x\\nend\\n\\nfunction PathPoint:getX()\\n    return self.x\\nend\\n\\nfunction PathPoint:setY(y)\\n    self.y = y\\nend\\n\\nfunction PathPoint:getY()\\n    return self.y\\nend\\n\\nfunction PathPoint:getXY()\\n    return self:getX(),self:getY()\\nend\\n\\nfunction PathPoint:setG(g)\\n    self.g = g\\nend\\n\\nfunction PathPoint:getG()\\n    return self.g or 0\\nend\\n\\nfunction PathPoint:setH(h)\\n    self.h = h\\nend\\n\\nfunction PathPoint:getH()\\n    return self.h\\nend\\n\\nfunction PathPoint:getF()\\n\\n    return (self:getG() and self:getH()) and (self:getG() + self:getH()) or 0\\nend\\n\\nfunction PathPoint:setParent(point)\\n    ASSERT_FUNC(iskindof(point, \\"PathPoint\\"))\\n    self.parent = point\\nend\\n\\nfunction PathPoint:getParent()\\n    return self.parent\\nend\\n\\nfunction PathPoint:generalPointString()\\n    local infoString = string.format(\\"PathPoint:[%s]@F|G|H:[%s %s %s]\\",\\n        self:ID(),\\n        tostring((self:getF() and self:getF() or  \\"unkown\\")),\\n        tostring((self:getG() and self:getG() or  \\"unkown\\")),\\n        tostring((self:getH() and self:getH() or  \\"unkown\\")))\\n    if self:getParent() then\\n        infoString = string.format(\\"%s\\\\nPathPoint:[%s]@Parent:%s\\",\\n            infoString,\\n            self:ID(),\\n            self:getParent():generalPointString())\\n    end\\n    return infoString\\nend\\n\\nfunction PathPoint:ID()\\n    return string.format(\\"%d_%d\\",self:getX(),self:getY())\\nend\\n\\nPathPoint.__tostring = function(point)\\n    return point:generalPointString()\\nend \\n\\n\\n-- Pathfinding 2D\\nlocal Pathfinding = class(\\"Pathfinding\\")\\n\\n\\nfunction Pathfinding:ctor(mapData,reachableFunction)\\n    self.m_openList = {}\\n    self.m_closedList = {}\\n    self:setMapData(mapData)\\n    self:setReachableFunction(reachableFunction)\\nend\\n\\n-- private functions\\n\\nfunction Pathfinding:listAddPoint_(list,point)\\n    ASSERT_FUNC(type(list) == \'table\' and iskindof(point,\\"PathPoint\\"))\\n    list[point:ID()] = point\\nend\\n\\nfunction Pathfinding:listRemovePoint_(list,point)\\n    ASSERT_FUNC(type(list) == \'table\' and iskindof(point,\\"PathPoint\\"))\\n    if list[point:ID()] then list[point:ID()] = nil end\\nend\\n\\nfunction Pathfinding:listGetMinFPoint(list)\\n    ASSERT_FUNC(type(list) == \'table\')\\n    local __,ret = next(list)\\n    for __,p in pairs(list) do\\n        if iskindof(p, \\"PathPoint\\") then\\n            if p:getF() < ret:getF() then\\n                ret = p\\n            end\\n        end\\n    end\\n    return ret\\nend\\n\\nfunction Pathfinding:listContainsPoint(list,point)\\n    ASSERT_FUNC(type(list) == \'table\' and iskindof(point,\\"PathPoint\\"))\\n    return list[point:ID()]\\nend\\n\\nfunction Pathfinding:listIsEmpty(list)\\n    ASSERT_FUNC(type(list) == \'table\')\\n    return not next(list)\\nend\\n\\n-- logic private methods\\n\\nfunction Pathfinding:canReach(point,x,y)\\n    if not self:isReachableByXY(x,y)  or self:isCloseListContainsPoint(PathPoint.new(x,y)) then return false end\\n    return math.abs(point:getX() - x) + math.abs(point:getY() - y) == 1\\nend\\n\\nfunction Pathfinding:getSurroundPoints(point)\\n    ASSERT_FUNC(iskindof(point,\\"PathPoint\\"))\\n    local ret = {}\\n    for x = point:getX()-1,point:getX()+1 do\\n        for y = point:getY()-1,point:getY()+1 do\\n            if self:canReach(point,x,y) then\\n                table.insert(ret, PathPoint.new(x,y))\\n            end\\n        end\\n    end\\n    return ret\\nend\\n\\nfunction Pathfinding:closeListAddPoint(point)\\n    ASSERT_FUNC(iskindof(point,\\"PathPoint\\"))\\n    self:listAddPoint_(self.m_closedList, point)\\nend\\n\\nfunction Pathfinding:isCloseListContainsPoint(point)\\n    ASSERT_FUNC(iskindof(point,\\"PathPoint\\"))\\n    return self:listContainsPoint(self.m_closedList,point)\\nend\\n\\nfunction Pathfinding:openListMinFPoint()\\n    return self:listGetMinFPoint(self.m_openList)\\nend\\n\\nfunction Pathfinding:openListAddPoint(point)\\n    ASSERT_FUNC(iskindof(point,\\"PathPoint\\"))\\n    self:listAddPoint_(self.m_openList, point)\\nend\\n\\nfunction Pathfinding:isOpenListIsEmpty()\\n    return self:listIsEmpty(self.m_openList)\\nend\\n\\nfunction Pathfinding:openListRemovePoint(point)\\n    ASSERT_FUNC(iskindof(point,\\"PathPoint\\"))\\n    return self:listRemovePoint_(self.m_openList, point)\\nend\\n\\nfunction Pathfinding:isOpenListContainsPoint(point)\\n    ASSERT_FUNC(iskindof(point,\\"PathPoint\\"))\\n    return self:listContainsPoint(self.m_openList,point)\\nend\\n\\nfunction Pathfinding:getOpenListMinFPoint()\\n    return self:listGetMinFPoint(self.m_openList)\\nend\\n\\nfunction Pathfinding:getMapItemDataByXY(x,y)\\n    if not self.m_mapData or not self.m_mapData[tonumber(x)] or not self.m_mapData[tonumber(x)][tonumber(y)] then\\n        return\\n    end\\n    return self.m_mapData[tonumber(x)][tonumber(y)]\\nend\\n\\nfunction Pathfinding:isReachableByXY(x,y)\\n    if not self.m_reachableFunc then return true end -- if reachable function is not set,we want all postions are reachable.\\n    local itemData = self:getMapItemDataByXY(x,y)\\n    return itemData and self.m_reachableFunc(itemData)\\nend\\n\\nfunction Pathfinding:isPointReadchable(point)\\n    ASSERT_FUNC(iskindof(point,\\"PathPoint\\"))\\n    return self:isReachableByXY(point:getX(),point:getY())\\nend\\n\\nfunction Pathfinding:calcG(start,point)\\n    local G = 1\\n    local parentG = point:getParent() and point:getParent():getG() or 0\\n    return G + parentG\\nend\\n\\nfunction Pathfinding:calcH(endP,point)\\n    return math.abs(point:getX() - endP:getX()) + math.abs(point:getY() - endP:getY())\\nend\\n\\nfunction Pathfinding:notFoundPoint(tempStart,endP,point)\\n    point:setParent(tempStart)\\n    point:setG(self:calcG(tempStart,point))\\n    point:setH(self:calcH(endP,point))\\n    self:openListAddPoint(point)\\nend\\n\\nfunction Pathfinding:foundPoint(tempStart,point)\\n    local G = self:calcG(tempStart,point)\\n    if G < point:getG() then\\n        point:setParent(tempStart)\\n        point:setG(G)\\n    end\\nend\\n\\nfunction Pathfinding:generatePoints(point)\\n    local ret = {}\\n    if point then\\n        while point do\\n            table.insert(ret, point)\\n            point = point:getParent()\\n        end\\n    end\\n    return ret\\nend\\n\\n-- public api\\n------------------------------------------------------------------\\n\\nfunction Pathfinding:setReachableFunction(func)\\n    if not func then return end\\n    ASSERT_FUNC(type(func) == \'function\')\\n    self.m_reachableFunc = func\\nend\\n\\nfunction Pathfinding:setMapData(mapData)\\n    if not mapData then return end\\n    ASSERT_FUNC(type(mapData) == \'table\')\\n    self.m_mapData = mapData\\nend\\n\\nfunction Pathfinding:findPath(startPoint,endPoint)\\n    self:openListAddPoint(startPoint)\\n    while not self:isOpenListIsEmpty() do\\n        local tempPoint = self:openListMinFPoint()\\n        self:openListRemovePoint(tempPoint)\\n        self:closeListAddPoint(tempPoint)\\n        if self:isCloseListContainsPoint(endPoint) then\\n            return endPoint\\n        end\\n        local surroundPoints = self:getSurroundPoints(tempPoint)\\n        for __,point in ipairs(surroundPoints) do\\n            if self:isOpenListContainsPoint(point) then\\n                self:foundPoint(tempPoint, point)\\n            else\\n                self:notFoundPoint(tempPoint, endPoint, point)\\n            end\\n        end\\n        if self:isOpenListContainsPoint(endPoint) then\\n            return self:isOpenListContainsPoint(endPoint)\\n        end\\n    end\\n    return self:isOpenListContainsPoint(endPoint)\\nend\\n\\n\\nPathfinding.PathPoint = PathPoint\\n\\nreturn Pathfinding\\n\\n~~~\\n\\n# \u4f7f\u7528\\n\\n~~~lua\\nlocal Pathfinding = require(\\"Pathfinding\\")\\nlocal PathPoint = Pathfinding.PathPoint\\nfunction generalMapData()\\n\\tlocal map = {\\n\\t\\t{0,0,0,0,0,0},\\n\\t\\t{0,0,0,1,0,0},\\n\\t\\t{0,0,0,1,0,0},\\n\\t\\t{0,1,0,1,0,0},\\n\\t\\t{0,0,0,0,0,0},\\n\\t\\t{0,0,0,0,0,0}\\n\\t}\\n\\treturn map\\nend\\n\\nfunction dumpMap(map)\\n\\tprint(\\"------------\\")\\n\\tprint(\\"-- Map Data\\")\\n\\tprint(\\"------------\\")\\n\\tfor iR,row in ipairs(map) do\\n\\t\\tif type(row) ~= \'table\' then return end\\n\\t\\tfor iC,column in ipairs(row) do\\n\\t\\t\\tio.write(string.format(\\"%s \\",tostring(column)))\\n\\t\\tend\\n\\t\\tio.write(\\"\\\\n\\")\\n\\tend\\n\\tprint(\\"------------\\")\\nend\\n\\nlocal data = generalMapData()\\ndumpMap(data)\\nlocal finder = Pathfinding.new(data,function(val)\\n\\treturn val ~= 1 \\nend)\\n\\n-- test find way from 3,2 to 3,5\\nlocal retPoint = finder:findPath(PathPoint.new(3,2),PathPoint.new(3,5))\\nif retPoint then\\n\\twhile retPoint do\\n\\t\\tdata[retPoint:getX()][retPoint:getY()] = \\"*\\"\\n\\t\\tretPoint = retPoint:getParent()\\n\\tend\\nend\\ndumpMap(data)\\n~~~"},{"id":"/2016/multiline-textbox-wp8-1","metadata":{"permalink":"/2016/multiline-textbox-wp8-1","source":"@site/blog/2016/multiline-textbox-wp8-1.md","title":"WindowsPhone\u7684TextBox\u591a\u884c\u652f\u6301\u53ca\u7591\u95ee","description":"\u6700\u8fd1\u5728\u4f7f\u75282dx\u7684\u65f6\u5019\u6539\u9020\u4e86\u4e00\u4e2aUIEditBox,\u4f7f\u5176\u652f\u6301\u591a\u884c\u8f93\u5165,\u56e0\u4e3a\u5728Windows Phone\u4e0a\u5355\u884c\u548c\u591a\u884c\u8f93\u5165\u90fd\u662f\u4f7f\u7528\u540c\u4e00\u4e2a\u7cfb\u7edf\u63a7\u4ef6TextBox,\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u591a\u884c\u8f93\u5165,\u53ef\u4ee5\u53c2\u8003\u5fae\u8f6f\u7684\u6587\u6863","date":"2016-07-20T14:57:34.000Z","tags":[{"inline":true,"label":"Cocos2dx","permalink":"/tags/cocos-2-dx"},{"inline":true,"label":"Windows Phone","permalink":"/tags/windows-phone"}],"readingTime":2.78,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"WindowsPhone\u7684TextBox\u591a\u884c\u652f\u6301\u53ca\u7591\u95ee","date":"2016-07-20T14:57:34.000Z","tags":["Cocos2dx","Windows Phone"]},"unlisted":false,"prevItem":{"title":"\u7528Lua\u5b9e\u73b0A*\u5bfb\u8def\u7b97\u6cd5","permalink":"/2016/findWay"},"nextItem":{"title":"Cocos2dx\u4f7f\u7528ETC1+Alpha\u538b\u7f29\u7eb9\u7406","permalink":"/2016/etc1-alpha-on-android-cocos2dx"}},"content":"\u6700\u8fd1\u5728\u4f7f\u75282dx\u7684\u65f6\u5019\u6539\u9020\u4e86\u4e00\u4e2a[UIEditBox](https://github.com/cocos2d/cocos2d-x/blob/v3/cocos/ui/UIEditBox/UIEditBoxImpl-winrt.cpp),\u4f7f\u5176\u652f\u6301\u591a\u884c\u8f93\u5165,\u56e0\u4e3a\u5728Windows Phone\u4e0a\u5355\u884c\u548c\u591a\u884c\u8f93\u5165\u90fd\u662f\u4f7f\u7528\u540c\u4e00\u4e2a\u7cfb\u7edf\u63a7\u4ef6`TextBox`,\u5173\u4e8e\u5982\u4f55\u4f7f\u7528\u591a\u884c\u8f93\u5165,\u53ef\u4ee5\u53c2\u8003\u5fae\u8f6f\u7684[\u6587\u6863](https://msdn.microsoft.com/en-us/library/ms742157.aspx)\\n\\n\u5f53\u7136Cocos2dx\u57283.5\u4ee5\u4e0a\u7684\u7248\u672c\u4e2d\u5df2\u7ecf\u662f\u4f7f\u7528cpp(cx)\u7684\u5f00\u53d1\u6a21\u677f,\u5927\u610f\u7684\u4ee3\u7801\u5982\u4e0b:\\n\x3c!-- truncate --\x3e\\n~~~cpp\\nm_textBox->TextWrapping = Windows::UI::Xaml::TextWrapping::Wrap;\\nm_textBox->AcceptsReturn = true;\\n~~~\\n\\n\u6211\u4eec\u65b0\u52a0\u4e86\u4e00\u4e2a\u7c7b`UITextViewWinRT`\u63d0\u4f9b\u7cfb\u7edf\u7684\u591a\u884c\u8f93\u5165\u3002\\n\\n~~~cpp\\nvoid UITextViewWinRT::SetupTextBox()\\n{\\n\\tRemoveTextBox();\\n\\tm_textBox = ref new TextBox;\\n\\t\\n\\tm_textBox->Name = \\"cocos2d_editbox_textbox\\";\\n\\tm_textBox->MinWidth = 200;\\n\\tm_textBox->PlaceholderText = m_strPlaceholder;\\n\\tm_textBox->Select(m_textBox->Text->Length(), 0);\\n\\tm_textBox->MaxLength = m_maxLength < 0 ? 0 : m_maxLength;\\n\\tm_textBox->MinHeight = 100;\\n\\tm_textBox->MaxHeight = 200;\\n\\tm_textBox->TextWrapping = Windows::UI::Xaml::TextWrapping::Wrap;\\n\\tm_textBox->AcceptsReturn = true;\\n\\n\\tSetInputScope(m_textBox, m_inputMode);\\n\\tm_textBox->Text = m_strText; //\u6ce8\u610f\u8fd9\u884c\\n\\tauto g = findXamlElement(m_flyout->Content, \\"cocos2d_editbox_grid\\");\\n\\tauto grid = dynamic_cast<Grid^>(g);\\n\\tgrid->Children->InsertAt(0, m_textBox);\\n}\\n~~~\\n\\n\u5982\u679c\u9605\u8bfb\u8fc7\u5b98\u65b9\u7684`UIEditBoxImpl-winrt.cpp`\u52a0\u4e0a\u7ec6\u5fc3\u7684\u540c\u5b66\u4f1a\u6ce8\u610f`m_textBox->Text = m_strText; //\u6ce8\u610f\u8fd9\u884c`\u8fd9\u884c\u4ee3\u7801,\u56e0\u4e3a\u6211\u5c06\u8fd9\u6bb5\u4ee3\u7801\u653e\u5230\u8bbe\u7f6e`TextBox`\u652f\u6301\u591a\u884c\u8f93\u51fa\u7684\u4ee3\u7801\u540e\u9762\u4e86\u3002\\n\\n**\u5982\u679c\u4e0d\u8fd9\u6837\u7684\u7684\u8bdd,\u5982\u679c\u4f60\u7ed9`TextBox`\u8bbe\u7f6e\u591a\u884c\u6587\u672c\u7684\u65f6\u5019\u662f\u65e0\u6548\u7684**,\u731c\u60f3\u53ef\u80fd\u662f\u7cfb\u7edf\u5728\u8bbe\u7f6e\u5176\u6587\u672c\u5c5e\u6027\u7684\u65f6\u5019\u8ba1\u7b97\u4e86\u6587\u672c\u7684\u6446\u653e\u7684\u7ed3\u6784,\u5f53\u6e32\u67d3\u7684\u65f6\u5019\u8fdb\u884c\u6e32\u67d3.\\nWindows Phone\u7684\u6362\u884c\u7b26\u4e3a`\\\\r\\\\n`\u4e0d\u662f\u4e00\u822c\u7684`\\\\n`,\u8fd9\u4f1a\u5f15\u8d77\u65b0\u7684\u95ee\u9898,2dx\u91cc\u5c06`unicode`\u7801\u8f6c\u5316\u6210`UTF8`\u5728`Label`\u91cc\u663e\u793a`\\\\r`\u4f1a\u88ab\u663e\u793a\u4e3a\u4e71\u7801\uff01\\n\x3c!-- truncate --\x3e\\n\u6211\u7684\u4fee\u6539\u65b9\u6848\u662f\\n\\n* Platform::String(unicode)\u8f6c\u4e3astd::string(UTF8)\u7684\u65f6\u5019\u79fb\u9664`\\\\r`,\u56e0\u4e3a\u57282dx\u7684`Label`\u91cc`\\\\n`\u5c31\u662f\u8868\u793a\u6362\u884c\\n\\n* std::string\u8f6c\u4e3aPlatform::String\u7684\u65f6\u5019\u5c06`\\\\n`\u66ff\u6362\u4e3a`\\\\r\\\\n`,\u8ba9\u7cfb\u7edf\u63a7\u4ef6\u8bc6\u522b\u6362\u884c\\n\\n~~~cpp\\nstatic std::string&   replace_all_distinct(std::string&   str, const   std::string&   old_value, const  std::string&   new_value)\\n{\\n\\tfor (std::string::size_type pos(0); pos != std::string::npos; pos += new_value.length())   {\\n\\t\\tif ((pos = str.find(old_value, pos)) != std::string::npos)\\n\\t\\t\\tstr.replace(pos, old_value.length(), new_value);\\n\\t\\telse   break;\\n\\t}\\n\\treturn   str;\\n}\\n\\nPlatform::String^ UITextViewImplWinrt::stringToPlatformString(std::string strSrc)\\n{\\n\\tstd::string newSrc = replace_all_distinct(strSrc, \\"\\\\n\\", \\"\\\\r\\\\n\\");\\n\\t// to wide char\\n\\tint nStrLen = MultiByteToWideChar(CP_UTF8, 0, newSrc.c_str(), -1, NULL, 0);\\n\\twchar_t* pWStr = new wchar_t[nStrLen + 1];\\n\\tmemset(pWStr, 0, nStrLen + 1);\\n\\tMultiByteToWideChar(CP_UTF8, 0, newSrc.c_str(), -1, pWStr, nStrLen);\\n\\tPlatform::String^ strDst = ref new Platform::String(pWStr);\\n\\tdelete[] pWStr;\\n\\treturn strDst;\\n}\\n\\nstd::string UITextViewImplWinrt::PlatformStringTostring(Platform::String^ strSrc)\\n{\\n\\tconst wchar_t* pWStr = strSrc->Data();\\n\\tint nStrLen = WideCharToMultiByte(CP_UTF8, 0, pWStr, -1, NULL, 0, NULL, NULL);\\n\\tchar* pStr = new char[nStrLen + 1];\\n\\tmemset(pStr, 0, nStrLen + 1);\\n\\tWideCharToMultiByte(CP_UTF8, 0, pWStr, -1, pStr, nStrLen, NULL, NULL);;\\n\\n\\tstd::string strDst = std::string(pStr);\\n\\n\\tdelete[] pStr;\\n\\tstd::string ret = replace_all_distinct(strDst, \\"\\\\r\\\\n\\", \\"\\\\n\\");\\n\\treturn ret;\\n}\\n~~~"},{"id":"/2016/etc1-alpha-on-android-cocos2dx","metadata":{"permalink":"/2016/etc1-alpha-on-android-cocos2dx","source":"@site/blog/2016/etc1-alpha-on-android-cocos2dx.md","title":"Cocos2dx\u4f7f\u7528ETC1+Alpha\u538b\u7f29\u7eb9\u7406","description":"\u6211\u4eec\u4e3a\u4e86\u4f18\u5316\u6e38\u620f\u7684\u5185\u5b58\u5360\u7528,\u4f1a\u7ed9\u56fe\u7247\u8d44\u6e90\u8fdb\u884c\u6709\u635f\u538b\u7f29,\u5728Android\u4e0a\u5219\u662f\u4f7f\u7528ETC1(Ericsson texture compression)\u8fdb\u884c\u7eb9\u7406\u538b\u7f29,\u538b\u7f29\u7eb9\u7406\u65e0\u8bba\u4ece\u52a0\u8f7d\u901f\u5ea6(GPU\u8bc6\u522b)\u548c\u5185\u5b58\u5360\u7528\u90fd\u6709\u5f88\u5927\u7684\u4f18\u52bf,\u552f\u4e00\u7684\u7f3a\u70b9\u5c31\u662f\u6709\u635f\u3002","date":"2016-07-15T13:41:42.000Z","tags":[{"inline":true,"label":"zlib","permalink":"/tags/zlib"},{"inline":true,"label":"Cocos2dx","permalink":"/tags/cocos-2-dx"},{"inline":true,"label":"Android","permalink":"/tags/android"},{"inline":true,"label":"ETC","permalink":"/tags/etc"},{"inline":true,"label":"Optimize","permalink":"/tags/optimize"}],"readingTime":10.91,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Cocos2dx\u4f7f\u7528ETC1+Alpha\u538b\u7f29\u7eb9\u7406","date":"2016-07-15T13:41:42.000Z","tags":["zlib","Cocos2dx","Android","ETC","Optimize"]},"unlisted":false,"prevItem":{"title":"WindowsPhone\u7684TextBox\u591a\u884c\u652f\u6301\u53ca\u7591\u95ee","permalink":"/2016/multiline-textbox-wp8-1"},"nextItem":{"title":"quick\u7684ScrollView\u968f\u60f3","permalink":"/2016/think-about-scrollview"}},"content":"\u6211\u4eec\u4e3a\u4e86\u4f18\u5316\u6e38\u620f\u7684\u5185\u5b58\u5360\u7528,\u4f1a\u7ed9\u56fe\u7247\u8d44\u6e90\u8fdb\u884c`\u6709\u635f\u538b\u7f29`,\u5728Android\u4e0a\u5219\u662f\u4f7f\u7528`ETC1`(Ericsson texture compression)\u8fdb\u884c\u7eb9\u7406\u538b\u7f29,\u538b\u7f29\u7eb9\u7406\u65e0\u8bba\u4ece\u52a0\u8f7d\u901f\u5ea6(GPU\u8bc6\u522b)\u548c\u5185\u5b58\u5360\u7528\u90fd\u6709\u5f88\u5927\u7684\u4f18\u52bf,\u552f\u4e00\u7684\u7f3a\u70b9\u5c31\u662f\u6709\u635f\u3002\\n\u4e5f\u5c31\u662f\u5b83\u4e0d\u662f`\u4e07\u91d1\u6cb9`,\u5e76\u4e0d\u662f\u6240\u6709\u7684\u56fe\u7247\u90fd\u80fd\u4f7f\u7528`ETC1`\u538b\u7f29\u3002\u6211\u5728\u8bb0\u5f55\u4e0b\u6211\u662f\u5982\u4f55\u5728`Cocos2dx`\u4e2d\u4f7f\u7528`ETC1`\u8fdb\u884c\u7eb9\u7406\u538b\u7f29.\u5f53\u7136\u8fd9\u91cc\u662f\u5728`android`\u5e73\u53f0\u4e0b\u4f7f\u7528\u3002\\n\\n# \u4e3a\u4ec0\u4e48\u662fETC1\\n\x3c!-- truncate --\x3e\\nETC1\u683c\u5f0f\u662fOpenGL ES\u56fe\u5f62\u6807\u51c6\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e14\u88ab\u6240\u6709\u7684Android\u8bbe\u5907\u6240\u652f\u6301,\u4e0d\u652f\u6301\u900f\u660e\u901a\u9053\u3002\u9700\u8981\u662fPOT\u7eb9\u7406\u3002\u867d\u7136\u540e\u9762\u7684`ETC2`\u652f\u6301\u900f\u660e\u901a\u9053,\u4f46\u662f\u5b83\u662f`OpenGL 3.0`\u7684\u6807\u51c6\uff0c\u5e76\u4e0d\u80fd\u88ab\u6240\u6709Android\u8bbe\u5907\u6240\u652f\u6301\uff0c\u800c`ETC1`\u6211\u4eec\u80fd\u901a\u8fc7\u6280\u672f\u624b\u6bb5\u52a0\u5165\u900f\u660e\u901a\u9053\u3002\u53c2\u8003\u8fd9\u7bc7[\u6587\u7ae0](http://malideveloper.arm.com/resources/sample-code/etcv1-texture-compression-and-alpha-channels/)\\n\\n# \u4e4b\u524d\u7684\u51c6\u5907\\n\\n![ETC1](http://malideveloper.arm.com/wp-content/uploads/2010/09/sample_code_alpha_seperate.jpg)\\n\\n\u6211\u91c7\u7528\u5c06\u4e00\u5f20\u7eb9\u7406\u5206\u5272\u6210\u4e24\u5f20\u56fe\u7684\u65b9\u6848,\u4e5f\u5c31\u662f`\u56fe\u7247 = RGB\u90e8\u5206\u7eb9\u7406+Alpha\u90e8\u5206\u7eb9\u7406`\u3002\u56e0\u4e3a\u7eb9\u7406\u5927\u5c0f\u7531\u4e8e\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u539f\u56e0\u662f\u6709\u9650\u5236\u7684,`2048x2048`\u57fa\u672c\u80fd\u88ab\u4e3b\u6d41\u8bbe\u5907\u6240\u8ba4\u540c\uff0c\u5982\u679c\u91c7\u7528Alpha\u62fc\u63a5\u7684\u65b9\u5f0f,\u539f\u672c2048\u7684\u7eb9\u7406\u6700\u7ec8\u5927\u5c0f\u4f1a\u8d85\u8fc72048,\u5982\u679c\u6240\u6709\u7eb9\u7406\u52a0\u4e0a\u6700\u5927\u5c3a\u5bf81024\u7684\u9650\u5236\u53c8\u4f1a\u4f7f\u7eb9\u7406\u6570\u91cf\u589e\u591a.\u6240\u4ee5\u6700\u7ec8\u6211\u9009\u62e9\u4e86\u5206\u5272\u56fe\u7247\u7684\u65b9\u6848\u3002\\n\x3c!-- truncate --\x3e\\n## ImageMagick\\n\\n\u4f7f\u7528[ImageMagick](http://www.imagemagick.org/script/index.php)\u6765\u5206\u5272\u7eb9\u7406\u7684RGB\u548cAlpha\u90e8\u5206,\u4e3a\u4ec0\u4e48\u6ca1\u6709\u7528`Mali GPU Texture Compression`\u76f4\u63a5\u751f\u6210\u5462?\u56e0\u4e3a\u5b83\u751f\u6210\u7684\u6700\u7ec8\u7684`pkm`\u6587\u4ef6\u662f\u7ecf\u8fc7\u538b\u7f29\u7684,\u538b\u7f29\u7387\u5e76\u4e0d\u7406\u60f3\u3002\u6240\u4ee5\u540e\u9762\u6211\u4f1a\u4ecb\u7ecd\u6211\u4f7f\u7528`zlib`\u6765\u538b\u7f29\u751f\u6210\u7684`ETC1`\u683c\u5f0f\u7684\u7eb9\u7406\u3002\\n\\n\u5206\u79bbRGB\u90e8\u5206\\n\\n~~~shell\\nconvert logo.png -alpha Off logo_rgb.png \\n~~~\\n\\n\u5206\u79bbAlpha\u90e8\u5206\\n\\n~~~shell\\nconvert logo.png -channel A -alpha extract logo_a.png \\n~~~\\n\\n## PVRTexTool\\n\\n\u4f7f\u7528[PVRTexTool](https://community.imgtec.com/developers/powervr/tools/pvrtextool/)\u538b\u7f29ETC1\u7eb9\u7406,\u6ce8\u610f\u8fd9\u91cc\u751f\u6210\u7684\u6587\u4ef6\u7684\u540e\u7f00\u662f`pvr`\uff0c\u5176\u5b9e\u5b83\u7684\u683c\u5f0f\u662f`ETC1`\\n\\n~~~shell\\nPVRTexTool -f ETC1 -i logo_rgb.png -o logo_rgb.pvr -q etcfast\\nPVRTexTool -f ETC1 -i logo_a.png -o logo_a.pvr -q etcfast\\n~~~\\n\\n\u73b0\u5728`logo_rgb.pvr`\u548c`logo_a.pvr`\u5df2\u7ecf\u662f\u6211\u4eec\u9700\u8981\u7684`ETC1`\u683c\u5f0f\u7684\u7eb9\u7406\u4e86,\u4f46\u662f\u4f60\u4f1a\u53d1\u73b0\u5b83\u4eec\u6bd4\u8f6c\u6362\u4e4b\u524d\u7684\u6587\u4ef6\u5927\u5c0f\u5927\u4e86\u5f88\u591a:( \\n\u4e0d\u80fd\u589e\u52a0\u6211\u4eec\u7684\u5305\u5927\u5c0f\u662f\u4e0d?\u6240\u4ee5\u6211\u4eec\u5148\u4f7f\u7528`zlib`\u6765\u538b\u7f29\u4e0b\u4ed6\u4eec,\u4e3a\u4ec0\u4e48\u4f7f\u7528`zlib`? \u56e0\u4e3a2dx\u91cc\u5df2\u7ecf\u6709`zlib`\u5e93(\u8bb0\u5f97iOS\u91cc\u7684`xx.pvr`\u548c`xx.pvr.ccz`\u5427,ccz\u5176\u5b9e\u5c31\u88abzlib\u538b\u7f29\u8fc7\u540e\u7684`PVRTC4`\u7eb9\u7406),\u6211\u4eec\u4e0d\u7528\u5f15\u5165\u5176\u4ed6\u5e93,\u5077\u4e2a\u61d2:),\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u538b\u7f29\u7b97\u6cd5\uff0c\u6bd4\u5982`\u68a6\u5e7b\u897f\u6e38`\u3002\u542c\u4ed6\u4eec\u7684\u5f00\u53d1\u8bf4,\u4f7f\u7528\u7684\u662f`lzma`\u89e3\u538b\u8d44\u6e90,\u4f46\u662f\u5b83\u7684\u89e3\u538b\u901f\u5ea6\u4f1a\u7a0d\u6162,\u4f46\u662f\u538b\u7f29\u7387\u6bd4\u8f83\u9ad8,\u8fd9\u5c31\u9700\u8981\u4f60\u81ea\u5df1\u53d6\u820d\u4e86\u3002\\n\\n## \u538b\u7f29\u7eb9\u7406\\n\\n> \u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5de5\u5177,\u4ed6\u80fd\u5c06\u7eb9\u7406\u4f7f\u7528zlib\u538b\u7f29\u6210\u4e00\u4e2a2dx\u80fd\u8bc6\u522b\u7684\u538b\u7f29\u683c\u5f0f,\u6216\u8005\u6211\u4eec\u80fd\u5728\u4ee3\u7801\u91cc\u80fd\u8bc6\u522b\u7684\u6587\u4ef6.\\n\\n\u6211\u4eec\u53ef\u4ee5\u4eff\u7167pvr.ccz\u7684\u7b56\u7565,\u4fee\u6539\u6211\u4eec\u6700\u7ec8\u751f\u6210\u538b\u7f29\u6587\u4ef6\u7684\u6587\u4ef6\u5934\u4fe1\u606f,\u544a\u8bc92dx\u4f7f\u7528zlib\u6765\u89e3\u538b\u5b83\u3002\u5b9a\u4e49\u4e00\u4e2a8\u4e2a\u5b57\u8282\u7684\u7ed3\u6784\u4f53\uff0c\u8868\u793a\u6211\u4eec\u7684\u5934\u4fe1\u606f.cpp\u4e2d\u7684\u7ed3\u6784\u4f53\u662f\u8fde\u7eed\u7684\u5185\u5b58\u5206\u914d:)\\n\\n~~~cpp\\nstruct ZipHeaderInfo\\n{\\n    char sig[4];\\n    int fileSize;\\n};\\n~~~\\n\\n\u524d\u56db\u4e2achar\u5206\u522b\u4e3a`!`,`E`,`T`,`C`,\u540e\u9762\u7684`int`\u7528\u6765\u5b58\u50a8\u6587\u4ef6\u7684\u539f\u59cb\u5927\u5c0f\u3002\\n\\n\u6700\u7ec8\u7684\u6e90\u7801\u5982\u4e0b:\\n\\n~~~cpp\\n//\\n//  CompressETCTexture\\n//\\n//  Created by DannyHe on 9/16/15.\\n//  Copyright (c) 2015 DannyHe. All rights reserved.\\n//\\n\\n#include \\"ETCCompress.h\\"\\n\\n#include <iostream>\\n#include <stdlib.h>\\nusing namespace std;\\n\\nstruct ZipHeaderInfo\\n{\\n    char sig[4];\\n    int fileSize;\\n};\\n\\nint ETCCompress::compressETC(const char * destpath,const char *srcpath)\\n{\\n    ZipHeaderInfo zipHeader;\\n    \\n    \\n    FILE* inFile = fopen(srcpath, \\"rb\\");\\n    \\n    if(!inFile)\\n    {\\n        return -1;\\n    }\\n    \\n    fseek(inFile, 0, SEEK_END);\\n    int fileSize = ftell(inFile);\\n    char * fileData = new char[fileSize];\\n    fseek(inFile, 0, SEEK_SET);\\n    fread(fileData, 1, fileSize, inFile);\\n    fclose(inFile);\\n    zipHeader.fileSize = fileSize;\\n    zipHeader.sig[0] = \'!\';\\n    zipHeader.sig[1] = \'E\';\\n    zipHeader.sig[2] = \'T\';\\n    zipHeader.sig[3] = \'C\';\\n    \\n    uLongf destLength = compressBound(fileSize);\\n\\n    Bytef* pDestBuf = new Bytef[destLength];\\n    int result = compress2(pDestBuf , &destLength, (const Bytef*)fileData, fileSize,9);\\n    if (result != Z_OK)\\n    {\\n        switch(result)\\n        {\\n            case Z_MEM_ERROR:\\n                printf(\\"ETCCompress:: note enough memory for compression\\");\\n                break;\\n                \\n            case Z_BUF_ERROR:\\n                printf(\\"ETCCompress:: note enough room in buffer to compress the data\\");\\n                break;\\n        }\\n        return -1;\\n    }\\n    \\n    cout << \\"ETCCompress:: orignal size: \\" << fileSize << \\" bytes\\"\\n    << \\" , compressed size : \\" << destLength << \\" bytes\\"\\n    << \\" , header size: \\" << sizeof(zipHeader) << \\" bytes\\"\\n    << \\" , final size : \\" << sizeof(zipHeader) + destLength << \\" bytes\\"\\n    << \\" , compress ratio:\\" << (1 - (double)(sizeof(zipHeader) + destLength)/fileSize)*100 << \\"%\\"\\n    << \'\\\\n\';\\n    \\n    \\n    FILE* fo = fopen(destpath, \\"wb+\\");\\n    if(fo)\\n    {\\n        fwrite(&zipHeader, sizeof(zipHeader), 1, fo);\\n        fwrite(pDestBuf,destLength, 1, fo);\\n        fclose(fo);\\n        delete [] pDestBuf;\\n        \\n        return 0;\\n    }\\n    return 0;\\n}\\n\\nuLongf ETCCompress::unCompressETC(const char * packData,int packSize,Bytef* &buff)\\n{\\n    struct ZipHeaderInfo *header = (struct ZipHeaderInfo*) packData;\\n    if (!(header->sig[0] == \'!\' && header->sig[1] == \'E\' && header->sig[2] == \'T\' && header->sig[3] == \'C\')) {\\n        printf(\\"\\\\nETCCompress:: header error\\");\\n        return -1;\\n    }\\n    int orginSize = header->fileSize;\\n    int headerSize = sizeof(*header);\\n    uLongf newSize = orginSize;\\n    Bytef* pUnBuf = new Bytef[newSize];\\n    int result2 = uncompress(pUnBuf, &newSize,(const Bytef*)packData + headerSize,packSize - headerSize);\\n    if (result2 != Z_OK)\\n    {\\n        switch(result2)\\n        {\\n            case Z_MEM_ERROR:\\n                printf(\\"ETCCompress:: note enough memory for uncompression\\");\\n                break;\\n                \\n            case Z_BUF_ERROR:\\n                printf(\\"ETCCompress:: note enough room in buffer to uncompress the data\\");\\n                break;\\n        }\\n        return -1;\\n    }\\n    buff = pUnBuf;\\n    cout << \\"orignal size: \\" << packSize << \\" bytes\\" \\n    << \\" , ucompressed size : \\" << orginSize << \\" bytes\\" << \'\\\\n\';\\n    return newSize;\\n}\\n\\nint ETCCompress::unCompressETC(const char *destpath, const char *srcpath)\\n{\\n    FILE* packFile = fopen(srcpath, \\"rb\\");\\n    \\n    fseek(packFile, 0, SEEK_END);\\n    int packSize = ftell(packFile);\\n    char * packData = new char[packSize];\\n    fseek(packFile, 0, SEEK_SET);\\n    fread(packData, 1, packSize, packFile);\\n    fclose(packFile);\\n    Bytef* pUnBuf;\\n    uLongf newSize = unCompressETC(packData,packSize,pUnBuf);\\n    if (newSize == -1)\\n    {\\n        printf(\\"\\\\nETCCompress:: uncompress error!\\");\\n        return -1;\\n    }\\n    \\n    FILE* ft = fopen(destpath, \\"wb+\\");\\n    if(ft)\\n    {\\n        fwrite(pUnBuf,newSize, 1, ft);\\n        fclose(ft);\\n        delete [] pUnBuf;\\n        return 0;\\n    }\\n\\n    return -1;\\n}\\n~~~\\n\\n\u66f4\u591a\u8be6\u7ec6\u7684\u4ee3\u7801\u53ca\u7f16\u8bd1\u53ef\u4ee5\u770b\u6211\u4e4b\u524d\u7684[\u8fd9\u7bc7\u6587\u7ae0](http://dannyhe.wang/2015/12/15/how-to-copy-file-in-cmake/)\u548c[\u4ed3\u5e93](https://github.com/dannyjiajia/ETCCompress)\\n\u7136\u540e\u6211\u4eec\u4f7f\u7528\u6211\u4eec\u5199\u7684\u5de5\u5177\u538b\u7f29\u6211\u4eec\u7684\u7eb9\u7406\\n\\n~~~shell\\nCompressETCTexture pack logo_rgb.pvr logo_rgb.png\\nCompressETCTexture pack logo_a.pvr logo_a.png\\n~~~\\n\\n\u6700\u540e\u6211\u4eec\u5f97\u5230\u4e24\u4e2a\u6587\u4ef6`logo_rgb.png`\u548c`logo_a.png`,\u8fd9\u4e24\u4e2a\u6587\u4ef6\u7ecf\u8fc7\u4e86`ETC1`\u538b\u7f29\u5e76\u4e14\u6587\u4ef6\u5927\u5c0f\u4e5f\u662f\u6211\u4eec\u80fd\u63a5\u53d7\u7684\u8303\u56f4,\u7136\u540e\u6211\u4eec\u9700\u8981\u5728`Cocos2dx`\u4e2d\u4f7f\u7528\u4ed6\u4eec\u3002\\n\\n## 2dx(3.x)\u4e2d\u89e3\u538b\\n\\n\u6211\u4eec\u5728`ZipUtils`\u7c7b\u4e2d\u52a0\u5165\u6211\u4eec\u7684\u89e3\u538b\u903b\u8f91\\n\u5934\u6587\u4ef6`ZipUtils.h`\u4e2d\u58f0\u660e\u6211\u4eec\u7684\u5934\u4fe1\u606f\u7ed3\u6784\u4f53\u548c\u89e3\u538b\u51fd\u6570\\n~~~cpp\\n#if CC_USE_ETC1_ZLIB\\n    struct ETCCompressedHeader{\\n        char sig[4];\\n        int fileSize;\\n    };\\n#endif\\n\\n#if CC_USE_ETC1_ZLIB\\n    static bool isETCCompressedBuffer(const unsigned char *buffer, ssize_t len);\\n    static int inflateETCCompressedBuffer(const unsigned char *buffer, ssize_t len, unsigned char **out);\\n#endif\\n~~~\\n\\n\u5b9e\u73b0\u89e3\u538b\\n\\n~~~cpp\\n#if CC_USE_ETC1_ZLIB\\nbool ZipUtils::isETCCompressedBuffer(const unsigned char *buffer, ssize_t len)\\n{\\n    if (static_cast<size_t>(len) < sizeof(struct ETCCompressedHeader))\\n    {\\n        return false;\\n    }\\n    struct ETCCompressedHeader *header = (struct ETCCompressedHeader*) buffer;\\n    return header->sig[0] == \'!\' && header->sig[1] == \'E\' && header->sig[2] == \'T\' && header->sig[3] == \'C\';\\n}\\n\\nint ZipUtils::inflateETCCompressedBuffer(const unsigned char *buffer, ssize_t bufferLen, unsigned char **out)\\n{\\n    struct ETCCompressedHeader *header = (struct ETCCompressedHeader*) buffer;\\n    int len = header->fileSize;\\n    \\n    *out = (unsigned char*)malloc( len );\\n    if(! *out )\\n    {\\n        CCLOG(\\"cocos2d: ETCCompressed: Failed to allocate memory for texture\\");\\n        return -1;\\n    }\\n    uLongf destlen = len;\\n    int ret = uncompress(*out, &destlen, (Bytef*)buffer + sizeof(*header), bufferLen - sizeof(*header) );\\n    \\n    if( ret != Z_OK )\\n    {\\n        CCLOG(\\"cocos2d: ETCCompressed: Failed to uncompress data\\");\\n        free( *out );\\n        *out = nullptr;\\n        return -1;\\n    }\\n    \\n    return len;\\n}\\n#endif\\n~~~\\n\\n\u6700\u540e\u6211\u4eec\u57282dx\u8bfb\u53d6\u7eb9\u7406\u6587\u4ef6\u7684\u5730\u65b9(`Image::initWithImageData`)\u8c03\u7528\u6211\u4eec\u7684\u89e3\u538b\u51fd\u6570\\n\\n~~~cpp\\n#if CC_USE_ETC1_ZLIB\\n    if(ZipUtils::isETCCompressedBuffer(data,dataLen))\\n    {\\n        CCLOG(\\"Image: Use our etc format compressed!\\");\\n        unsigned char* etcUnpackedData = nullptr;\\n        ssize_t etcUnpackedLen = 0;\\n        etcUnpackedLen = ZipUtils::inflateETCCompressedBuffer(data,dataLen,&etcUnpackedData);\\n        //detecgt and unzip the compress file\\n        if (ZipUtils::isCCZBuffer(etcUnpackedData, etcUnpackedLen))\\n        {\\n            unpackedLen = ZipUtils::inflateCCZBuffer(etcUnpackedData, etcUnpackedLen, &unpackedData);\\n        }\\n        else if (ZipUtils::isGZipBuffer(etcUnpackedData, etcUnpackedLen))\\n        {\\n            unpackedLen = ZipUtils::inflateMemory(const_cast<unsigned char*>(etcUnpackedData), etcUnpackedLen, &unpackedData);\\n        }\\n        else\\n        {\\n            unpackedData = const_cast<unsigned char*>(etcUnpackedData);\\n            unpackedLen = etcUnpackedLen;\\n        }\\n        if(etcUnpackedData != unpackedData)\\n        {\\n            free(etcUnpackedData);\\n        }\\n    }\\n    else\\n    {\\n        //detecgt and unzip the compress file\\n        if (ZipUtils::isCCZBuffer(data, dataLen))\\n        {\\n            unpackedLen = ZipUtils::inflateCCZBuffer(data, dataLen, &unpackedData);\\n        }\\n        else if (ZipUtils::isGZipBuffer(data, dataLen))\\n        {\\n            unpackedLen = ZipUtils::inflateMemory(const_cast<unsigned char*>(data), dataLen, &unpackedData);\\n        }\\n        else\\n        {\\n            unpackedData = const_cast<unsigned char*>(data);\\n            unpackedLen = dataLen;\\n        }\\n\\n    }\\n#else\\n    //detecgt and unzip the compress file\\n    if (ZipUtils::isCCZBuffer(data, dataLen))\\n    {\\n        unpackedLen = ZipUtils::inflateCCZBuffer(data, dataLen, &unpackedData);\\n    }\\n    else if (ZipUtils::isGZipBuffer(data, dataLen))\\n    {\\n        unpackedLen = ZipUtils::inflateMemory(const_cast<unsigned char*>(data), dataLen, &unpackedData);\\n    }\\n    else\\n    {\\n        unpackedData = const_cast<unsigned char*>(data);\\n        unpackedLen = dataLen;\\n    }        \\n#endif\\n~~~\\n\\n# 2dx\u4e2d\u4f7f\u7528ETC1\\n\\n\u6211\u4f7f\u7528Shader\u6765\u64cd\u4f5c\u6700\u4e2d\u7684Alpha,\u6bd4\u5982\u5728`CCSprite`\u4e2d\uff0c\u53d1\u73b0\u81ea\u5df1\u4f7f\u7528\u7684\u7eb9\u7406\u662f`ETC1`\u683c\u5f0f\u4fbf\u53bb\u67e5\u627eAlpha\u7eb9\u7406\uff0c\u5982\u679c\u53d1\u73b0\u4fbf\u4f7f\u7528\u81ea\u5df1\u7684Shader\u66ff\u6362\u9ed8\u8ba4\u7684Shader.\\n\u8fd9\u6837\u5c31\u505a\u5230\u5bf9\u6e38\u620f\u4ee5\u524d\u7684\u5f00\u53d1\u903b\u8f91\u6beb\u65e0\u4fee\u6539\u3002\u56e0\u4e3a\u8fd0\u7528Shader\u7684\u65b9\u5f0f\u6bd4\u8f83\u591a\uff0c\u6211\u8fd9\u91cc\u5c31\u53ea\u5217\u51fa\u6211\u7684Shader\u4ee3\u7801(CCSprite)\\n\\n\u9876\u70b9\u4e0d\u9700\u8981\u4fee\u6539\u9ed8\u8ba4\u7684\\n\\n~~~glsl\\nconst char* ccShader_etc1_PositionTextureColor_noMVP_vert = STRINGIFY(\\nattribute vec4 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec4 a_color;\\n\\nvarying vec4 v_fragmentColor;\\nvarying vec2 v_texCoord;\\n\\n\\nvoid main()\\n{\\n    gl_Position = CC_PMatrix * a_position;\\n    v_fragmentColor = a_color;\\n    v_texCoord = a_texCoord;\\n}\\n);\\n~~~\\n\\n\u7247\u6bb5\u7740\u8272\\n\\n~~~glsl\\n// u_texture1\u662fetc\u7684alpha\u6570\u636e\u4e5f\u53ef\u4ee5\u7528ETC1\u538b\u7f29\\nconst char* ccShader_etc1_PositionTextureColor_noMVP_frag = STRINGIFY(\\n\\\\n\\nvarying vec4 v_fragmentColor;\\nvarying vec2 v_texCoord;\\n\\nuniform sampler2D u_texture1;\\n\\nvoid main()\\n{\\n    vec4 color = texture2D(CC_Texture0, v_texCoord);\\n    color.a = texture2D(u_texture1, v_texCoord).r;\\n    gl_FragColor = color * v_fragmentColor; //\u652f\u6301Cocos opacity\\n}\\n);\\n~~~\\n\\n\u4f7f\u7528\u7684\u8bdd\u5927\u6982\u53ea\u9700\u8fd9\u6837\\n\\n~~~cpp\\nauto program = GLProgramCache::getInstance()->getGLProgram(GLProgram::SHADER_NAME_ETC_ALPHA_POSITION_TEXTURE_COLOR_NO_MVP); //\u65b0\u52a0\u7684etc shader\\nauto etc_program_state = GLProgramState::create(program);\\netc_program_state->setUniformTexture(\\"u_texture1\\", texture_alpha);\\nsetGLProgramState(etc_program_state);\\n~~~\\n\\n# \u6700\u540e\\n\\n\u5982\u679c\u8fd8\u9700\u8981\u4f18\u5316\u5305\u5927\u5c0f,\u53ef\u4ee5\u91c7\u7528\u5c06PNG\u8f6c\u6362\u6210\u4e24\u5f20JPG,\u4e5f\u662fRGB+ALPHA.`\u5200\u5854\u4f20\u5947`\u5c31\u6709\u4f7f\u7528\u8fd9\u79cd\u7b56\u7565\u3002\u6211\u4eec\u8fd8\u53ef\u4ee5\u76f4\u63a5\u538b\u7f29`png`,\u4f7f\u5b83\u7684\u753b\u8d28\u964d\u4f4e,\u6bd4\u5982[pngquant](https://pngquant.org/)\\n\\n\u53e6\u5916\u4e0a\u6587\u4e2d\u6211\u4eeczlib\u538b\u7f29\u6587\u4ef6\u7684\u5c0f\u5de5\u5177\u4e5f\u53ef\u4ee5\u6765\u538b\u7f29\u5176\u4ed6\u6587\u4ef6,\u6bd4\u5982\u6211\u4eec\u5728`Windows Phone`\u5e73\u53f0\u4f7f\u7528\u7684\u538b\u7f29\u7eb9\u7406`DXT3`...\\n\u5728\u53d1\u5e03`Android`\u7684\u65f6\u5019\u6211\u4eec\u540c\u6837\u9700\u8981\u58f0\u660e\u6211\u4eec\u7684\u6e38\u620f\u4f7f\u7528ETC\u538b\u7f29\\n\\n~~~xml\\n\x3c!-- we want the device support etc1 texture format --\x3e\\n<supports-gl-texture android:name=\\"GL_OES_compressed_ETC1_RGB8_texture\\" />\\n~~~"},{"id":"/2016/think-about-scrollview","metadata":{"permalink":"/2016/think-about-scrollview","source":"@site/blog/2016/think-about-scrollview.mdx","title":"quick\u7684ScrollView\u968f\u60f3","description":"\u4e00\u76f4\u4f7f\u7528quick\u3002\u4e4b\u524d\u4e00\u76f4\u5fd9\u7740\u505a\u9879\u76ee,\u90fd\u6ca1\u6709\u7a7a\u505c\u4e0b\u6765\u597d\u597d\u60f3\u60f3OpenGL\u7684\u4e00\u4e9b\u77e5\u8bc6.\u4eca\u5929\u548c\u540c\u4e8b\u5206\u6790\u4e86\u4e0bClippingNode\u7684\u5b9e\u73b0,\u8bb0\u5f55\u5728\u8fd9\u91cc\u3002","date":"2016-07-07T15:27:13.000Z","tags":[{"inline":true,"label":"iOS","permalink":"/tags/i-os"},{"inline":true,"label":"OpenGL","permalink":"/tags/open-gl"},{"inline":true,"label":"Cocos2dx","permalink":"/tags/cocos-2-dx"}],"readingTime":5.67,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"quick\u7684ScrollView\u968f\u60f3","date":"2016-07-07T15:27:13.000Z","tags":["iOS","OpenGL","Cocos2dx"]},"unlisted":false,"prevItem":{"title":"Cocos2dx\u4f7f\u7528ETC1+Alpha\u538b\u7f29\u7eb9\u7406","permalink":"/2016/etc1-alpha-on-android-cocos2dx"},"nextItem":{"title":"Core Graphics\u548cOpenGL\u91cc\u7684\u77e9\u9635\u8fd0\u7b97","permalink":"/2016/matrix-ios-and-opengl.mdx"}},"content":"import BrowserWindow from \'@site/src/components/BrowserWindow\';\\n\\n\u4e00\u76f4\u4f7f\u7528`quick`\u3002\u4e4b\u524d\u4e00\u76f4\u5fd9\u7740\u505a\u9879\u76ee,\u90fd\u6ca1\u6709\u7a7a\u505c\u4e0b\u6765\u597d\u597d\u60f3\u60f3OpenGL\u7684\u4e00\u4e9b\u77e5\u8bc6.\u4eca\u5929\u548c\u540c\u4e8b\u5206\u6790\u4e86\u4e0b`ClippingNode`\u7684\u5b9e\u73b0,\u8bb0\u5f55\u5728\u8fd9\u91cc\u3002\\n\\n## quick\u7684\u5c34\u5c2c\\n\\nquick\u7528\u88c1\u526a\u6d4b\u8bd5,\u5b9e\u73b0\u4e86\u4e00\u4e2alua\u7248\u7684`UIScrollView.lua`,\u53ef\u4ee5\u6ee1\u8db3\u7b80\u5355\u7684\u88c1\u526a\u548c\u6ed1\u52a8\u9700\u6c42.\\n{/* truncate */}\\n~~~lua\\nlocal UIScrollView = class(\\"UIScrollView\\", function()\\n\\treturn display.newClippingRegionNode()\\nend)\\n~~~\\n\\n\u5982\u679c\u6211\u4eec\u9700\u8981\u6ed1\u52a8\u5217\u8868\u80fd\u5d4c\u5957(\u6a2a(\u7ad6)\u5411\u4e2d\u5d4c\u5165\u7ad6(\u6a2a)\u5411\u7684\u5217\u8868),\u8fd9\u4e2a\u5217\u8868\u5c31\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u4e86.\\n\\n`ClippingRectangleNode`\u7684\u6838\u5fc3\u5b9e\u73b0\u662f\u6839\u636eOpenGL\u7684\u88c1\u526a\u6d4b\u8bd5\\n\\n~~~c++\\nglEnable(GL_SCISSOR_TEST);\\nglScissor(x,y,width,height);\\nglDisable(GL_SCISSOR_TEST);\\n~~~\\n\\n## ClippingNode\u539f\u7406\\n\\n`ClippingNode`\u91c7\u7528\u6a21\u677f\u6d4b\u8bd5\u5b9e\u73b0\u88c1\u526a,\u53ef\u5b9e\u73b0\u88c1\u526a\u7684\u5d4c\u5957.\u8fd9\u91cc\u5206\u6790\u5b83\u7684\u5b9e\u73b0\u6b65\u9aa4\u3002\\n\\n### \u6a21\u677f\u6d4b\u8bd5\\n\\n\u6a21\u677f\u7f13\u51b2\u4e2d\u7684\u6a21\u677f\u503c(Stencil Value)\u901a\u5e38\u662f8\u4f4d\u7684\uff0c\u56e0\u6b64\u6bcf\u4e2a\u7247\u6bb5/\u50cf\u7d20\u5171\u6709256\u79cd\u4e0d\u540c\u7684\u6a21\u677f\u503c\uff0c2dx\u5728\u542f\u52a8\u65f6\u4fbf\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u503c\\n\\n~~~cpp\\nbool GLViewImpl::initWithRect(const std::string& viewName, Rect rect, float frameZoomFactor)\\n{\\n    CGRect r = CGRectMake(rect.origin.x, rect.origin.y, rect.size.width, rect.size.height);\\n    convertAttrs();\\n    CCEAGLView *eaglview = [CCEAGLView viewWithFrame: r\\n                                       pixelFormat: (NSString*)_pixelFormat\\n                                       depthFormat: _depthFormat //iOS\u4e0a\u8bbe\u7f6e\u6df1\u5ea6\u6d4b\u8bd5\u548c\u6a21\u677f\u6d4b\u8bd5\u7684\u53c2\u6570\u4e3aGL_DEPTH24_STENCIL8_OES\\n                                preserveBackbuffer: NO\\n                                        sharegroup: nil\\n                                     multiSampling: NO\\n                                   numberOfSamples: 0];\\n\\n    [eaglview setMultipleTouchEnabled:YES];\\n\\n    _screenSize.width = _designResolutionSize.width = [eaglview getWidth];\\n    _screenSize.height = _designResolutionSize.height = [eaglview getHeight];\\n//    _scaleX = _scaleY = [eaglview contentScaleFactor];\\n\\n    _eaglview = eaglview;\\n\\n    return true;\\n}\\n~~~\\n\\n\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003[\u8fd9\u7bc7\u6587\u7ae0](http://learnOpenGL-cn.readthedocs.io/zh/latest/04%20Advanced%20OpenGL/02%20Stencil%20testing/)\\n\\n### \u4e00\u822c\u60c5\u51b5(\u4e0d\u5d4c\u5957)\\n\\n\u6211\u4eec\u8fd9\u91cc\u5206\u6790`_inverted`\u4e3a`false`\u7684\u60c5\u51b5,\u4e5f\u5c31\u662f\u4fdd\u7559\u88c1\u526a\u533a\u57df\u5185\u7684\u5185\u5bb9\u7684\u60c5\u51b5.\\n\\n#### onBeforeVisit\\n\\n\u5f00\u59cb\u7ed8\u5236\u65f6,\u9996\u5148\u8ba1\u7b97\u51fa\u8fd9\u4e2a`ClippingNode`\u7684\u4f4d\u906e\u7f69(Bitmask)-`mask_layer`\\n\\n~~~cpp\\n// increment the current layer\\ns_layer++;\\n\\n// mask of the current layer (ie: for layer 3: 00000100)\\nGLint mask_layer = 0x1 << s_layer;\\n// mask of all layers less than the current (ie: for layer 3: 00000011)\\nGLint mask_layer_l = mask_layer - 1;\\n// mask of all layers less than or equal to the current (ie: for layer 3: 00000111)\\n_mask_layer_le = mask_layer | mask_layer_l;\\n~~~\\n\\ns_layer = 0\\n\\nmask_layer = 1\\n\\nmask_layer_l = 0\\n\\n_mask_layer_le = 1\\n\\n\u7136\u540e\u4fdd\u5b58\u4e0b\u6a21\u677f\u6d4b\u8bd5\u7684\u5f53\u524d\u7684\u72b6\u6001,\u63a5\u7740\u5f00\u542f\u6a21\u677f\u6d4b\u8bd5\uff0c\u8bbe\u7f6e\u4f4d\u906e\u7f69\\n\\n~~~cpp\\n// enable stencil use\\nglEnable(GL_STENCIL_TEST);\\n// check for OpenGL error while enabling stencil test\\nCHECK_GL_ERROR_DEBUG();\\n\\n// all bits on the stencil buffer are readonly, except the current layer bit,\\n// this means that operation like glClear or glStencilOp will be masked with this value\\nglStencilMask(mask_layer);\\n~~~\\n\\n`glStencilMask`\u8bbe\u7f6e\u7684\u503c\u4e3a`0x1`,\u5c31\u662f\u544a\u8bc9\u7f13\u51b2\u5bf9\u6a21\u677f\u503c\u7684\u6700\u540e\u4e00\u4f4d\u662f\u53ef\u5199\u7684\u3002\\n\\n\u63a5\u7740\u6e05\u7a7a\u6a21\u677f\u7f13\u51b2\u4e2d\u7684\u503c\uff0c\u8bbe\u7f6e\u7ed3\u679c\u4e3a`GL_NEVER`,\u6c38\u8fdc\u4e0d\u901a\u8fc7,\u4e0d\u901a\u8fc7\u65f6\u6267\u884c`GL_ZERO`\u64cd\u4f5c(`_inverted`\u4e3a`false`),\u7ed8\u5236\u4e00\u4e2a\u5168\u5c4f\u7684\u77e9\u5f62\\n\\n~~~cpp\\nglStencilFunc(GL_NEVER, mask_layer, mask_layer);\\nglStencilOp(!_inverted ? GL_ZERO : GL_REPLACE, GL_KEEP, GL_KEEP);\\n\\ndrawFullScreenQuadClearStencil();\\n~~~\\n\\n\u6b64\u65f6\u6a21\u677f\u7f13\u51b2\u4e2d\u7684\u503c\u4e3a,\u5047\u8bbe\u4e0b\u9762\u7684\u77e9\u9635\u8868\u793a\u4e86\u4e00\u4e2a\u5c4f\u5e55\u4e2d\u7684\u6240\u6709\u6a21\u677f\u7f13\u51b2\u503c.**\u4e5f\u5c31\u662f\u4e00\u4e2a0\u8868\u793a\u7684\u662f8\u4f4d\u4e8c\u8fdb\u5236\u7ed3\u679c`0x00000000`**\\n\\n<BrowserWindow>\\n$$\\\\begin{matrix} 0&0&0&0&0 \\\\\\\\\\\\ 0&0&0&0&0 \\\\\\\\\\\\ 0&0&0&0&0 \\\\\\\\\\\\ 0&0&0&0&0 \\\\\\\\\\\\ 0&0&0&0&0  \\\\end{matrix}$$\\n</BrowserWindow>\\n\\n\u7136\u540e\u5f00\u59cb\u51c6\u5907\u753b\u6211\u4eec\u7684`\u8499\u7248`,\u4ecd\u7136\u662f\u6d4b\u8bd5\u6c38\u8fdc\u4e0d\u901a\u8fc7,\u5982\u679c\u4e0d\u901a\u8fc7\u6267\u884c`mask_layer`(0x1)\u7684\u6700\u540e\u4e00\u4f4d`\u66ff\u6362`\u5230\u6a21\u677f\u503c\u7684\u6700\u540e\u4e00\u4f4d\\n\\n~~~cpp\\nglStencilFunc(GL_NEVER, mask_layer, mask_layer);\\nglStencilOp(!_inverted ? GL_REPLACE : GL_ZERO, GL_KEEP, GL_KEEP);\\n~~~\\n\\n\u7136\u540e\u6a21\u677f\u7f13\u51b2\u4e2d\u7684\u503c\u4e3a\\n<BrowserWindow>\\n$$\\\\begin{matrix} 0&0&0&0&0 \\\\\\\\\\\\ 0&1&1&1&0 \\\\\\\\\\\\ 0&1&1&1&0 \\\\\\\\\\\\ 0&1&1&1&0 \\\\\\\\\\\\ 0&0&0&0&0  \\\\end{matrix}$$\\n</BrowserWindow>\\n\\n#### onAfterDrawStencil\\n\\n\u5728`\u8499\u7248`\u7ed8\u5236\u5b8c\u540e,\u5f00\u59cb\u7ed8\u5236\u5b50\u8282\u70b9\u524d\u8bbe\u7f6e\u6d4b\u8bd5\u64cd\u4f5c\\n\\n~~~cpp\\nglStencilFunc(GL_EQUAL, _mask_layer_le, _mask_layer_le);\\nglStencilOp(GL_KEEP, GL_KEEP, GL_KEEP);\\n~~~\\n\\n\u4fdd\u7559\u6ee1\u8db3\u516c\u5f0f`(\u6a21\u677f\u503c & _mask_layer_le) == (_mask_layer_le & _mask_layer_le)`\u7684\u6a21\u677f\u503c\u7247\u6bb5,\u4e5f\u5c31\u662f\u4e0a\u9762\u56fe\u4e2d\u5f97\u6240\u67091\u4f4d\u7f6e\u7684\u7247\u6bb5,\u4e5f\u5c31\u662f\u6211\u4eec`\u8499\u7248`\u4e2d\u7684\u56fe\u50cf.`\u6a21\u677f\u503c & 1 == 1`\\n\\n#### onAfterVisit\\n\\n\u6700\u540e\u8fd8\u539f\u4e00\u5f00\u59cb\u4fdd\u7559\u7684\u6a21\u677f\u6d4b\u8bd5\u7684\u72b6\u6001,\u5173\u95ed\u6a21\u677f\u6d4b\u8bd5\\n~~~cpp\\nvoid ClippingNode::onAfterVisit()\\n{\\n#if DIRECTX_ENABLED == 0\\n    ///////////////////////////////////\\n    // CLEANUP\\n\\n    // manually restore the stencil state\\n    glStencilFunc(_currentStencilFunc, _currentStencilRef, _currentStencilValueMask);\\n    glStencilOp(_currentStencilFail, _currentStencilPassDepthFail, _currentStencilPassDepthPass);\\n    glStencilMask(_currentStencilWriteMask);\\n    if (!_currentStencilEnabled)\\n    {\\n        glDisable(GL_STENCIL_TEST);\\n    }\\n\\n    // we are done using this layer, decrement\\n    s_layer--;\\n#endif\\n}\\n~~~\\n\\n### \u5d4c\u5957\u7684\u60c5\u51b5\\n\u6211\u4eec\u5047\u8bbe\u4e0a\u9762\u7684`ClippingNode`\u6709\u4e00\u4e2a`ClippingNode`\u7c7b\u578b\u7684`child`\\n\u5148\u7ed8\u5236\u7236\u8282\u70b9,\u7136\u540e\u624d\u7ed8\u5236\u5b50\u8282\u70b9`ClippingNode`\\n\u4e5f\u5c31\u662f\u5728\u7236\u8282\u70b9\u6267\u884c\u7ed8\u5236\u5b50\u8282\u70b9\u7684\u65f6\u5019,\u5b50\u8282\u70b9`ClippingNode`\u4f1a\u6709\u4e0b\u9762\u7684\u6b65\u9aa4\\n\\n#### onBeforeVisit\\n\\ns_layer = 1\\n\\nmask_layer = 2\\n\\nmask_layer_l = 1\\n\\n_mask_layer_le = 3\\n\\n<BrowserWindow>\\n$$\\\\begin{matrix} 0&0&0&0&0 \\\\\\\\\\\\ 0&1&1&1&0 \\\\\\\\\\\\ 2&3&3&3&2 \\\\\\\\\\\\ 0&1&1&1&0 \\\\\\\\\\\\ 0&0&0&0&0  \\\\end{matrix}$$\\n</BrowserWindow>\\n\\n#### onAfterDrawStencil\\n\\n`(\u6a21\u677f\u503c & _mask_layer_le) == (_mask_layer_le & _mask_layer_le)` $\\\\to$ `(\u6a21\u677f\u503c & 3) == (3 & 3)`\\n\u4e5f\u5c31\u662f\u53ea\u6709\u6a21\u677f\u503c\u4e3a`3`\u7684\u7247\u6bb5\u4f1a\u88ab\u4fdd\u7559\\n\\n## \u6700\u540e\\n\\n~~\u731c\u6d4b\u4e0biOS\u4e2d\u7684`UIScrollView`\u4e5f\u662f\u57fa\u4e8e\u6a21\u677f\u6d4b\u8bd5,\u5f53\u7136\u6709\u53ef\u80fd\u4e0d\u5d4c\u5957\u7684\u65f6\u5019\u4e5f\u662f\u4f7f\u7528\u7684`glScissor`,\u6bd5\u7adf\u6a21\u677f\u6d4b\u8bd5\u4f1a\u591a\u4e24\u6b21drawcall.~~\\n\u6700\u540e\u5982\u4f55\u6539\u9020`qucik`\u7684`UIScrollView.lua`\\n\\n1. \u7ee7\u627f`cc.ClippingNode`\\n\\n2. `setViewRect`\u7684\u5b9e\u73b0\u4fee\u6539\u4e3a\u8bbe\u7f6e`setStencil`\\n\\n3. \u5c06`addTouchNode`\u4e2d`node`\u8bbe\u7f6e\u4e3a\u4f20\u9012\u4e8b\u4ef6`setTouchSwallowEnabled(false)`"},{"id":"/2016/matrix-ios-and-opengl.mdx","metadata":{"permalink":"/2016/matrix-ios-and-opengl.mdx","source":"@site/blog/2016/matrix-ios-and-opengl.mdx.md","title":"Core Graphics\u548cOpenGL\u91cc\u7684\u77e9\u9635\u8fd0\u7b97","description":"\u603b\u7ed3\u4e0biOS\u548cOpenGL\u91cc\u7684\u77e9\u9635\u8ba1\u7b97","date":"2016-07-04T16:19:19.000Z","tags":[{"inline":true,"label":"iOS","permalink":"/tags/i-os"},{"inline":true,"label":"OpenGL","permalink":"/tags/open-gl"}],"readingTime":1.83,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Core Graphics\u548cOpenGL\u91cc\u7684\u77e9\u9635\u8fd0\u7b97","date":"2016-07-04T16:19:19.000Z","tags":["iOS","OpenGL"]},"unlisted":false,"prevItem":{"title":"quick\u7684ScrollView\u968f\u60f3","permalink":"/2016/think-about-scrollview"},"nextItem":{"title":"(cpp)cx\u4e2d\u5c06string\u8f6c\u6362\u6210GUID","permalink":"/2016/cpp-convert-string-to-guid"}},"content":"import BrowserWindow from \'@site/src/components/BrowserWindow\';\\n\\n\u603b\u7ed3\u4e0biOS\u548cOpenGL\u91cc\u7684\u77e9\u9635\u8ba1\u7b97\\n\\n#### iOS (Core Graphics)\\n\\niOS\u91cc\u9762\u7684\u77e9\u9635\u7528\u884c\u5411\u91cf\u8868\u793a,\u6240\u4ee5\u662f\u77e9\u9635\u53f3\u4e58\u5411\u91cf.\\n\\n\u4ee5`Quartz 2D`\u4e3e\u4f8b\u5e73\u79fb,\u56e0\u4e3a\u662f2d\u6240\u4ee5\u662f\u4e00\u4e2a3x3\u7684\u77e9\u9635,3d\u5c31\u662f4x4\\n\x3c!-- truncate --\x3e\\n> \u8865\u5145:\u6709\u670b\u53cb\u95ee\u6211\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u53d8\u6210\u4e863x3\u7684\u77e9\u9635?3d\u5219\u662f4x4?\\n\\n> \u8fd9\u91cc\u4f7f\u7528\u7684\u9f50\u6b21\u5750\u6807\u3002\u56fe\u5f62\u5b66\u5f15\u5165\u9f50\u6b21\u5750\u6807\u7684\u76ee\u7684\u4e3b\u8981\u662f\u5408\u5e76\u77e9\u9635\u8fd0\u7b97\u4e2d\u7684\u4e58\u6cd5\u548c\u52a0\u6cd5\uff0c\u8868\u793a\u4e3ap\' = p*M\u7684\u5f62\u5f0f\u3002\u5373\u5b83\u63d0\u4f9b\u4e86\u7528\u77e9\u9635\u8fd0\u7b97\u628a\u4e8c\u7ef4\u3001\u4e09\u7ef4\u751a\u81f3\u9ad8\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u96c6\u4ece\u4e00\u4e2a\u5750\u6807\u7cfb\u53d8\u6362\u5230\u53e6\u4e00\u4e2a\u5750\u6807\u7cfb\u7684\u6709\u6548\u65b9\u6cd5\u3002\\n<BrowserWindow>\\n$$\\\\begin{bmatrix} x&y&1 \\\\end{bmatrix} \\\\cdot  \\\\begin{bmatrix} a&b&0 \\\\\\\\\\\\ c&d&0 \\\\\\\\\\\\ t_x&t_y&1 \\\\end{bmatrix} = \\\\begin{bmatrix} ax+cy+t_x&bx+dy+t_y&1 \\\\end{bmatrix}$$\\n</BrowserWindow>\\n\u6240\u4ee5`CGAffineTransform CGAffineTransformMakeTranslation ( CGFloat tx, CGFloat ty );`\u662f\u4e0a\u9762\u7684\u516c\u5f0f\u4e2d\u7684\\n`a=d=1`\u548c`b=c=0`\\n\\n\u4e5f\u5c31\u662f\u77e9\u9635\\n<BrowserWindow>\\n$\\\\begin{bmatrix} 1&0&0 \\\\\\\\\\\\ 0&1&0 \\\\\\\\\\\\ t_x&t_y&1 \\\\end{bmatrix}$\\n</BrowserWindow>\\n**\u5982\u679c\u6211\u4eec\u628a\u8fd9\u4e2a\u516c\u5f0f\u7528\u4e8e3d** \u5219\u662f`CATransform3D`\\n<BrowserWindow>\\n$$\\\\begin{bmatrix} x&y&z&1 \\\\end{bmatrix} \\\\cdot \\\\begin{bmatrix} m11&m12&m13&m14 \\\\\\\\\\\\ m21&m22&m23&m24 \\\\\\\\\\\\ m31&m32&m33&m34 \\\\\\\\\\\\ m41&m42&m43&m44 \\\\end{bmatrix} = \\\\begin{bmatrix} x\'&y\'&z\'&1 \\\\end{bmatrix}$$\\n</BrowserWindow>\\n`m34`\u53ef\u4ee5\u5f71\u54cd\u6295\u5f71\u77e9\u9635\u8bbe\u7f6e\u4e3a$-1 \\\\over d$\u8868\u793a\u5411`z=d`\u7684\u5e73\u9762\u8fdb\u884c\u900f\u89c6\u6295\u5f71\\n#### OpenGL\\n\\nOpenGL\u4f7f\u7528\u5217\u5411\u91cf\u8868\u793a,\u6240\u4ee5\u662f\u77e9\u9635\u5de6\u4e58\u5411\u91cf.\\n<BrowserWindow>\\n$$\\n\\\\begin{bmatrix} a&b&c&d \\\\\\\\\\\\ e&f&g&h \\\\\\\\\\\\ i&j&k&l \\\\\\\\\\\\ m&n&o&p \\\\end{bmatrix} \\\\cdot \\\\begin{bmatrix} x\\\\\\\\\\\\ y \\\\\\\\\\\\ z \\\\\\\\\\\\ w \\\\end{bmatrix} = \\\\begin{bmatrix} ax+by+cz+dw \\\\\\\\\\\\ ex+fy+gz+hw \\\\\\\\\\\\ ix+jy+kz+lw \\\\\\\\\\\\ mx+ny+oz+pw\\\\end{bmatrix}\\n$$\\n</BrowserWindow>\\nOpenGL\u7684\u900f\u89c6\u6295\u5f71\u8ba1\u7b97\u53ef\u4ee5\u53c2\u8003[\u8fd9\u7bc7\u6587\u7ae0](http://www.360doc.com/content/14/1028/10/19175681_420522154.shtml)"},{"id":"/2016/cpp-convert-string-to-guid","metadata":{"permalink":"/2016/cpp-convert-string-to-guid","source":"@site/blog/2016/cpp-convert-string-to-guid.md","title":"(cpp)cx\u4e2d\u5c06string\u8f6c\u6362\u6210GUID","description":"~~~cpp","date":"2016-06-24T15:06:05.000Z","tags":[{"inline":true,"label":"Windows Phone","permalink":"/tags/windows-phone"}],"readingTime":0.275,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"(cpp)cx\u4e2d\u5c06string\u8f6c\u6362\u6210GUID","date":"2016-06-24T15:06:05.000Z","tags":["Windows Phone"]},"unlisted":false,"prevItem":{"title":"Core Graphics\u548cOpenGL\u91cc\u7684\u77e9\u9635\u8fd0\u7b97","permalink":"/2016/matrix-ios-and-opengl.mdx"},"nextItem":{"title":"GCD\u4e0eRunLoop","permalink":"/2016/gcd-and-runloop"}},"content":"~~~cpp\\n#include <windows.h>\\n\\nusing namespace Windows::ApplicationModel::Store;\\nusing namespace Windows::Foundation;\\nusing namespace Windows::Foundation::Collections;\\n\\nPlatform::String^ transactionId = \\"{xxxxx}\\"; //\u4ece\u5fae\u8f6f\u7684\u5185\u8d2d\u4e2d\u83b7\u53d6\u7684\u8ba2\u5355\u53f7\u5b57\u7b26\u4e32\\nGUID guid;\\nHRESULT hr = IIDFromString(transactionId->Data(), &guid);\\nif (SUCCEEDED(hr)) {\\n\\tPlatform::Guid guid_transactionId(guid);\\n\\tauto fuillAsync = CurrentApp::ReportConsumableFulfillmentAsync(productId, guid_transactionId); //\u5b8c\u6210\u8ba2\u5355\\n}\\n~~~"},{"id":"/2016/gcd-and-runloop","metadata":{"permalink":"/2016/gcd-and-runloop","source":"@site/blog/2016/gcd-and-runloop.md","title":"GCD\u4e0eRunLoop","description":"\u6700\u8fd1\u53d1\u73b0iOS\u4e2d\u7684RunLoop\u548cGCD\u88ab\u8ba8\u8bba\u7684\u633a\u591a\u7684,\u6211\u4e5f\u5199\u70b9\u590d\u4e60\u4e0b:)","date":"2016-06-24T10:33:15.000Z","tags":[{"inline":true,"label":"GCD","permalink":"/tags/gcd"},{"inline":true,"label":"RunLoop","permalink":"/tags/run-loop"},{"inline":true,"label":"iOS","permalink":"/tags/i-os"}],"readingTime":3.08,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"GCD\u4e0eRunLoop","date":"2016-06-24T10:33:15.000Z","tags":["GCD","RunLoop","iOS"]},"unlisted":false,"prevItem":{"title":"(cpp)cx\u4e2d\u5c06string\u8f6c\u6362\u6210GUID","permalink":"/2016/cpp-convert-string-to-guid"},"nextItem":{"title":"\u5982\u4f55\u8ba1\u7b97git\u53d8\u52a8\u7684\u6587\u4ef6\u5927\u5c0f","permalink":"/2016/calculate-git-changed-file-size"}},"content":"\u6700\u8fd1\u53d1\u73b0iOS\u4e2d\u7684RunLoop\u548cGCD\u88ab\u8ba8\u8bba\u7684\u633a\u591a\u7684,\u6211\u4e5f\u5199\u70b9\u590d\u4e60\u4e0b:)\\n\x3c!-- truncate --\x3e\\n### GCD\\n~~~objectivec\\n#import <Foundation/Foundation.h>\\n\\nint main()\\n{\\n    dispatch_queue_t globalQ = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\\n    \\n    /** \u5f02\u6b65\u4efb\u52a1 **/\\n    dispatch_async(globalQ, ^{\\n        NSLog(@\\"async task\\");\\n    });\\n    \\n    /** \u540c\u6b65\u4efb\u52a1 **/\\n    dispatch_sync(globalQ, ^{\\n        NSLog(@\\"sync task\\");\\n    });\\n    NSLog(@\\"sync end\\");\\n    \\n    /** \u4e00\u6b21\u6027\u6267\u884c **/\\n    static dispatch_once_t onceToken;\\n    dispatch_once(&onceToken, ^{\\n        NSLog(@\\"once task\\");\\n    });\\n    \\n    /**  \u5ef6\u8fdf 2 \u79d2\u6267\u884c **/\\n    double delayInSeconds = 2.0;\\n    dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, delayInSeconds * NSEC_PER_SEC);\\n    dispatch_after(popTime, globalQ, ^(void){\\n        NSLog(@\\"delay task\\");\\n    });\\n    \\n    \\n    /** global queue\u662f\u5e76\u884c\u7684 **/\\n    dispatch_async(globalQ, ^{\\n        NSLog(@\\"global_queue_task_1\\");\\n    });\\n\\n    \\n    dispatch_async(globalQ, ^{\\n        NSLog(@\\"global_queue_task_2\\");\\n    });\\n    \\n    /** \u81ea\u5b9a\u4e49\u4e32\u884cqueue **/\\n    dispatch_queue_t customSerialQ = dispatch_queue_create(\\"customSerialQ\\", DISPATCH_QUEUE_SERIAL);\\n    \\n    dispatch_async(customSerialQ, ^{\\n        NSLog(@\\"customSerialQ_task_1\\");\\n    });\\n    \\n    \\n    dispatch_async(customSerialQ, ^{\\n        NSLog(@\\"customSerialQ_task_2\\");\\n    });\\n\\n    \\n    /** \u81ea\u5b9a\u4e49\u5e76\u884cqueue **/\\n    dispatch_queue_t customConcurrentQ = dispatch_queue_create(\\"customConcurrentQ\\", DISPATCH_QUEUE_CONCURRENT);\\n    \\n    dispatch_async(customConcurrentQ, ^{\\n        NSLog(@\\"customConcurrentQ_task_1\\");\\n    });\\n    \\n    \\n    dispatch_async(customConcurrentQ, ^{\\n        NSLog(@\\"customConcurrentQ_task_2\\");\\n    });\\n    \\n    \\n    /** \u5e76\u884c\u4efb\u52a1\u5f52\u603b **/\\n    \\n    dispatch_group_t group = dispatch_group_create();\\n    dispatch_group_async(group, globalQ, ^{\\n        NSLog(@\\"\u5e76\u884c\u6267\u884c\u7684\u7ebf\u7a0b1\\");\\n    });\\n    dispatch_group_async(group, globalQ, ^{\\n        NSLog(@\\"\u5e76\u884c\u6267\u884c\u7684\u7ebf\u7a0b2\\");\\n    });\\n    dispatch_group_notify(group, globalQ, ^{\\n       NSLog(@\\"\u5e76\u884c\u6267\u884c\u4efb\u52a1\u5b8c\u6210\\");\\n    });\\n    \\n    /** dispatch_source **/\\n    //1. timer\\n    \\n    dispatch_source_t gcd_timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0,globalQ);\\n    dispatch_source_set_timer(gcd_timer, DISPATCH_TIME_NOW, 5ull * NSEC_PER_SEC, 0); //5s\\n    dispatch_source_set_event_handler(gcd_timer, ^{\\n        NSLog(@\\"gcd timer task\\");\\n    });\\n    dispatch_resume(gcd_timer);\\n\\n    //2. \u81ea\u5b9a\u4e49source\u4efb\u52a1\\n    dispatch_source_t gcd_source = dispatch_source_create(DISPATCH_SOURCE_TYPE_DATA_ADD, 0, 0,globalQ);\\n    dispatch_source_set_event_handler(gcd_source, ^{\\n        NSLog(@\\"gcd source task\\");\\n    });\\n    dispatch_resume(gcd_source);\\n    \\n    //2s\u540e\u89e6\u53d1source\u4efb\u52a1\\n    dispatch_after(popTime, globalQ, ^(void){\\n        NSLog(@\\"fire gcd source task\\");\\n        dispatch_source_merge_data(gcd_source, 1);\\n    });\\n    \\n    /** \u4fe1\u53f7\u91cf **/\\n    dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);\\n    \\n    dispatch_async(globalQ, ^{\\n        NSLog(@\\"\u5b8c\u6210\u4fe1\u53f7\u91cf\u4efb\u52a1\\");\\n        dispatch_semaphore_signal(semaphore);//\u589e\u52a0\u4fe1\u53f7\u91cf\\n    });\\n    //\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\\n    dispatch_time_t timeoutTime = dispatch_time(DISPATCH_TIME_NOW, 1ull*NSEC_PER_SEC);\\n    if (dispatch_semaphore_wait(semaphore, timeoutTime)) {\\n        NSLog(@\\"\u4fe1\u53f7\u91cf\u4efb\u52a1\u8d85\u65f6\\");\\n    }\\n    dispatch_main(); //\u6267\u884c\u63d0\u4ea4\u5230main queue\u4e2d\u7684blocks,\u5728iOS\u548cMac\u7684\u684c\u9762\u5e94\u7528\u4f60\u4e0d\u9700\u8981\u8c03\u7528\\n}\\n~~~\\n\x3c!-- truncate --\x3e\\n### RunLoop\\n\\n~~~\\n#import <Foundation/Foundation.h>\\n\\nstatic void\\n_perform(void *info __unused)\\n{\\n    printf(\\"Source0 event\\\\n\\");\\n}\\n\\nstatic void\\n_timer(CFRunLoopTimerRef timer __unused, void *info)\\n{\\n    NSLog(@\\"Timer fire Source0\\");\\n    CFRunLoopSourceSignal(info);\\n}\\n\\nint main()\\n{\\n\\n    /** \u6ce8\u518cobserver **/\\n    CFRunLoopRef runLoop = CFRunLoopGetCurrent();\\n    CFStringRef runLoopMode = kCFRunLoopDefaultMode;\\n    CFRunLoopObserverRef observer = CFRunLoopObserverCreateWithHandler(kCFAllocatorDefault, kCFRunLoopAllActivities, true, 0, ^(CFRunLoopObserverRef observer, CFRunLoopActivity _) {\\n        NSLog(@\\"observer event:%lu\\",_);\\n    });\\n    CFRunLoopAddObserver(runLoop, observer, runLoopMode);\\n    \\n    /** Source 0 **/\\n    CFRunLoopSourceRef source;\\n    CFRunLoopSourceContext source_context;\\n    bzero(&source_context, sizeof(source_context));\\n    source_context.perform = _perform;\\n    source = CFRunLoopSourceCreate(NULL, 0, &source_context);\\n    CFRunLoopAddSource(CFRunLoopGetCurrent(), source, kCFRunLoopDefaultMode);\\n    \\n    //2s\u540e\u89e6\u53d1source0\\n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, 2 * NSEC_PER_SEC), dispatch_get_main_queue(), ^(void){\\n        CFRunLoopSourceSignal(source);\\n    });\\n    \\n    /** Timer **/\\n\\n    CFRunLoopTimerRef timer;\\n    CFRunLoopTimerContext timer_context;\\n    bzero(&timer_context, sizeof(timer_context));\\n    timer_context.info = source;\\n    timer = CFRunLoopTimerCreate(NULL, CFAbsoluteTimeGetCurrent(), 5, 0, 0,\\n                                 _timer, &timer_context);\\n    CFRunLoopAddTimer(CFRunLoopGetCurrent(), timer, kCFRunLoopDefaultMode);\\n    CFRunLoopRun();\\n    \\n}\\n~~~\\n\\n### \u6211\u7684\u603b\u7ed3\\n\\n- \u7cfb\u7edf\u901a\u8fc7RunLoop\u6267\u884c\u4e3b\u961f\u5217\u4e2d\u7684\u4efb\u52a1,\u8fd9\u4e2aRunLoop\u7531`UIApplicationMain`\u6216\u8005`NSApplicationMain`\u6216\u8005`CFRunLoopRun`\u521b\u5efa\\n- \u4e24\u4e2a\u4e0d\u540c\u7684Timer,`NSTimer`\u4f9d\u8d56RunLoop\u6765\u6267\u884c,GCD\u7684Timer\u4e0d\u9700\u8981RunLoop\u5b58\u5728\u4e5f\u80fd\u6267\u884c\\n\\n### \u6700\u540e\\n\\n\u5199\u7684\u7528\u4f8b\u90fd\u662f\u5728Mac\u7684\u547d\u4ee4\u884c\u9879\u76ee\u4e0b\u6d4b\u8bd5\u7684,\u611f\u89c9\u66f4\u80fd\u8bf4\u660eRunLoop\u7684\u771f\u5b9e\u8fd0\u884c\u72b6\u6001,\u6bd4\u5982\u6d4b\u8bd5`NSTimer`,\u5982\u679c\u4e0d\u6267\u884c`CFRunLoopRun`,\u4e3b\u7ebf\u7a0b\u662f\u6ca1\u6709`RunLoop`\u7684,`NSTimer`\u4e5f\u4f1a\u5931\u6548,\u800c\u5728`iOS`\u9879\u76ee\u4e2d,\u6574\u4e2a\u751f\u547d\u5468\u671f\u90fd\u662f\u57fa\u4e8eRunLoop,`NSTimer`\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u65e0\u6548\u7684\u60c5\u51b5.(\u6307\u5b9a\u7279\u6b8a`Mode`\u7684\u4efb\u52a1\u9664\u5916)"},{"id":"/2016/calculate-git-changed-file-size","metadata":{"permalink":"/2016/calculate-git-changed-file-size","source":"@site/blog/2016/calculate-git-changed-file-size.md","title":"\u5982\u4f55\u8ba1\u7b97git\u53d8\u52a8\u7684\u6587\u4ef6\u5927\u5c0f","description":"~~~bash","date":"2016-05-12T16:35:26.000Z","tags":[{"inline":true,"label":"git","permalink":"/tags/git"},{"inline":true,"label":"shell","permalink":"/tags/shell"}],"readingTime":0.815,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"\u5982\u4f55\u8ba1\u7b97git\u53d8\u52a8\u7684\u6587\u4ef6\u5927\u5c0f","date":"2016-05-12T16:35:26.000Z","tags":["git","shell"]},"unlisted":false,"prevItem":{"title":"GCD\u4e0eRunLoop","permalink":"/2016/gcd-and-runloop"},"nextItem":{"title":"Sublime Text 3 License Key - CRACK","permalink":"/2016/sublime_crack"}},"content":"~~~bash\\n#!/bin/bash\\n# The tool to get the total size of autoupdate \\n# by Dannyhe\\n\\nfunction NotSupport()\\n{\\n\\techo \\"Not support $OSTYPE\\"\\n\\texit -1\\n}\\n\\nfunction main()\\n{\\n\\techo \\"os: $OSTYPE\\"\\n\\techo \\"size:\\"\\n\\tif [[ \\"$OSTYPE\\" == \\"linux-gnu\\" ]]; then\\n\\t     NotSupport\\n\\telif [[ \\"$OSTYPE\\" == \\"darwin\\"* ]]; then\\n         # Mac OSX\\n\\t     git log --name-status -1 | grep -E \'^[A-Z]\\\\b\' | sort -k 2,2 -u | grep -E \\"M|A\\" | awk \'{print $2}\' | xargs stat -f \\"%z\\" | awk \'{t+=$0}END{print t/(1024*1024)\\" Mb\\"}\'\\n\\telif [[ \\"$OSTYPE\\" == \\"cygwin\\" ]]; then\\n        # POSIX compatibility layer and Linux environment emulation for WindowsNotSupport\\n        NotSupport\\n\\telif [[ \\"$OSTYPE\\" == \\"msys\\" ]]; then\\n        # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)\\n        git log --name-status -1 | grep -E \'^[A-Z]\\\\b\' | sort -k 2,2 -u | grep -E \\"M|A\\" | awk \'{print $2}\' | xargs du -b | awk \'{t+=$0}END{print t/(1024*1024)\\" Mb\\"}\'\\n\\telif [[ \\"$OSTYPE\\" == \\"freebsd\\"* ]]; then\\n\\t\\tNotSupport\\n\\telse\\n\\t\\tNotSupport\\n\\tfi\\n}\\n\\nmain\\n~~~"},{"id":"/2016/sublime_crack","metadata":{"permalink":"/2016/sublime_crack","source":"@site/blog/2016/sublime_crack.md","title":"Sublime Text 3 License Key - CRACK","description":"Sublime Text 3 Build 3103 License Key - CRACK","date":"2016-05-01T14:52:56.000Z","tags":[{"inline":true,"label":"Sublime","permalink":"/tags/sublime"}],"readingTime":0.975,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Sublime Text 3 License Key - CRACK","date":"2016-05-01T14:52:56.000Z","tags":["Sublime"]},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u8ba1\u7b97git\u53d8\u52a8\u7684\u6587\u4ef6\u5927\u5c0f","permalink":"/2016/calculate-git-changed-file-size"},"nextItem":{"title":"rsync\u5728Windows\u4e0a\u7684\u6743\u9650\u95ee\u9898","permalink":"/2016/about-rsync"}},"content":"Sublime Text 3 Build 3103 License Key - CRACK\\n\\n~~~\\n\u2014\u2013 BEGIN LICENSE \u2014\u2013\\nMichael Barnes\\nSingle User License\\nEA7E-821385\\n8A353C41 872A0D5C DF9B2950 AFF6F667\\nC458EA6D 8EA3C286 98D1D650 131A97AB\\nAA919AEC EF20E143 B361B1E7 4C8B7F04\\nB085E65E 2F5F5360 8489D422 FB8FC1AA\\n93F6323C FD7F7544 3F39C318 D95E6480\\nFCCC7561 8A4A1741 68FA4223 ADCEDE07\\n200C25BE DBBC4855 C4CFB774 C5EC138C\\n0FEC1CEF D9DCECEC D3A5DAD1 01316C36\\n\u2014\u2014 END LICENSE \u2014\u2014\\n\\n\u2014\u2013 BEGIN LICENSE \u2014\u2013\\nNicolas Hennion\\nSingle User License\\nEA7E-866075\\n8A01AA83 1D668D24 4484AEBC 3B04512C\\n827B0DE5 69E9B07A A39ACCC0 F95F5410\\n729D5639 4C37CECB B2522FB3 8D37FDC1\\n72899363 BBA441AC A5F47F08 6CD3B3FE\\nCEFB3783 B2E1BA96 71AAF7B4 AFB61B1D\\n0CC513E7 52FF2333 9F726D2C CDE53B4A\\n810C0D4F E1F419A3 CDA0832B 8440565A\\n35BF00F6 4CA9F869 ED10E245 469C233E\\n\u2014\u2014 END LICENSE \u2014\u2014\\n\\n\u2014\u2013 BEGIN LICENSE \u2014\u2013\\nAnthony Sansone\\nSingle User License\\nEA7E-878563\\n28B9A648 42B99D8A F2E3E9E0 16DE076E\\nE218B3DC F3606379 C33C1526 E8B58964\\nB2CB3F63 BDF901BE D31424D2 082891B5\\nF7058694 55FA46D8 EFC11878 0868F093\\nB17CAFE7 63A78881 86B78E38 0F146238\\nBAE22DBB D4EC71A1 0EC2E701 C7F9C648\\n5CF29CA3 1CB14285 19A46991 E9A98676\\n14FD4777 2D8A0AB6 A444EE0D CA009B54\\n\u2014\u2014 END LICENSE \u2014\u2014\\n\\n\u2014\u2013 BEGIN LICENSE \u2014\u2013\\nAlexey Plutalov\\nSingle User License\\nEA7E-860776\\n3DC19CC1 134CDF23 504DC871 2DE5CE55\\n585DC8A6 253BB0D9 637C87A2 D8D0BA85\\nAAE574AD BA7D6DA9 2B9773F2 324C5DEF\\n17830A4E FBCF9D1D 182406E9 F883EA87\\nE585BBA1 2538C270 E2E857C2 194283CA\\n7234FF9E D0392F93 1D16E021 F1914917\\n63909E12 203C0169 3F08FFC8 86D06EA8\\n73DDAEF0 AC559F30 A6A67947 B60104C6\\n\u2014\u2014 END LICENSE \u2014\u2014\\n~~~"},{"id":"/2016/about-rsync","metadata":{"permalink":"/2016/about-rsync","source":"@site/blog/2016/about-rsync.md","title":"rsync\u5728Windows\u4e0a\u7684\u6743\u9650\u95ee\u9898","description":"~~~shell","date":"2016-04-13T09:46:24.000Z","tags":[{"inline":true,"label":"shell","permalink":"/tags/shell"}],"readingTime":0.085,"hasTruncateMarker":false,"authors":[{"name":"Danny He","title":"Developer in ChengDu,China","url":"https://dannyjiajia.github.io/","socials":{"github":"https://github.com/dannyjiajia"},"imageURL":"https://avatars.githubusercontent.com/u/2572540","key":"dannyhe","page":null}],"frontMatter":{"title":"rsync\u5728Windows\u4e0a\u7684\u6743\u9650\u95ee\u9898","date":"2016-04-13T09:46:24.000Z","tags":["shell"],"authors":"dannyhe"},"unlisted":false,"prevItem":{"title":"Sublime Text 3 License Key - CRACK","permalink":"/2016/sublime_crack"},"nextItem":{"title":"\u5bf9Android\u7684Gradle\u63d2\u4ef6\u7684\u7406\u89e3","permalink":"/2016/think-about-android-gradle"}},"content":"~~~shell\\nrsync -ravc --exclude=.DS_Store* --exclude=.git/ --exclude=.gitignore \u6e90\u8def\u5f84 \u76ee\u6807\u8def\u5f84 --delete-after --perms --chmod=a=rw,Da+x\\n~~~"},{"id":"/2016/think-about-android-gradle","metadata":{"permalink":"/2016/think-about-android-gradle","source":"@site/blog/2016/think-about-android-gradle.md","title":"\u5bf9Android\u7684Gradle\u63d2\u4ef6\u7684\u7406\u89e3","description":"\u672c\u6765\u6253\u7b97\u5199\u4e00\u7bc7\u5173\u4e8eAndroid\u7684gradle\u63d2\u4ef6\u7684\u4f7f\u7528\u8be6\u89e3\u4e4b\u7c7b\u7684\u6587\u7ae0,\u7ed3\u679c\u5728\u77e5\u4e4e\u770b\u5230\u4e86\u4e00\u7bc7\u4e0d\u9519\u7684\u3002\u6211\u5728\u8fd9\u91cc\u603b\u7ed3\u4e0b\u5427\u3002","date":"2016-03-28T19:26:48.000Z","tags":[{"inline":true,"label":"Android","permalink":"/tags/android"},{"inline":true,"label":"Android Studio","permalink":"/tags/android-studio"},{"inline":true,"label":"Gradle","permalink":"/tags/gradle"},{"inline":true,"label":"Ant","permalink":"/tags/ant"},{"inline":true,"label":"Antenna","permalink":"/tags/antenna"}],"readingTime":3.37,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"\u5bf9Android\u7684Gradle\u63d2\u4ef6\u7684\u7406\u89e3","date":"2016-03-28T19:26:48.000Z","tags":["Android","Android Studio","Gradle","Ant","Antenna"],"categories":null},"unlisted":false,"prevItem":{"title":"rsync\u5728Windows\u4e0a\u7684\u6743\u9650\u95ee\u9898","permalink":"/2016/about-rsync"},"nextItem":{"title":"\u8c08\u8c08next\u4e3b\u9898\u5982\u4f55\u6dfb\u52a0\\"Fork me on Github\\"","permalink":"/2016/github-link-with-next"}},"content":"\u672c\u6765\u6253\u7b97\u5199\u4e00\u7bc7\u5173\u4e8eAndroid\u7684gradle\u63d2\u4ef6\u7684\u4f7f\u7528\u8be6\u89e3\u4e4b\u7c7b\u7684\u6587\u7ae0,\u7ed3\u679c\u5728\u77e5\u4e4e\u770b\u5230\u4e86\u4e00\u7bc7\u4e0d\u9519\u7684\u3002\u6211\u5728\u8fd9\u91cc\u603b\u7ed3\u4e0b\u5427\u3002\\n\\nhttp://ghui.me/post/2015/03/create-several-variants\\n\\n### \u5f00\u59cb\\n\\n1. \u5408\u5e76\u7684\u601d\u60f3\\n   \\n   \u65b0\u7684\u6784\u5efa\u7cfb\u7edf\u6700\u4e3b\u8981\u7684\u60f3\u6cd5\u5c31\u662f\u5408\u5e76,\u5c06\u5404\u81ea`Productflavor`\u5b9a\u4e49\u7684\u4e0d\u540c\u9879\u76ee\u914d\u7f6e(applicationId,versionCode,signingConfig,sourceSets...)\u4ee5\u53ca\u8d44\u6e90(java\u4ee3\u7801,AndroidManifest.xml,res,jni...)\u548c\u516c\u7528\u7684`defaultConfig`\u5b9a\u4e49\u7684\u914d\u7f6e\u3001`sourceSets.main`\u5b9a\u4e49\u7684\u8d44\u6e90\u8fdb\u884c\u5408\u5e76\\n\x3c!-- truncate --\x3e\\n2. applicationId\u548cAndroidManifest.xml\u4e2d\u7684package\\n\\t\\n   applicationId\u7528\u6765\u5728Android\u8bbe\u5907\u548cGoogle Play\u6765\u533a\u5206apk,\u4e5f\u5c31\u662f\u4ee5\u524d\u7684package.\u800c\u73b0\u5728AndroidManifest.xml\u4e2d\u7684package\u4ec5\u7528\u6765\u751f\u6210R.java\\n\\n3. \u5404\u81ea\u7684Productflavor\u53ef\u4ee5\u663e\u5f0f\u7684\u8bbe\u7f6esourceSets\\n\\n\\t\u4e0d\u8981\u8bef\u4ee5\u4e3a\u6bcf\u4e2aProductflavor\u5bf9\u5e94\u7684java\u4ee3\u7801\u76ee\u5f55\u548c\u8d44\u6e90\u76ee\u5f55\u662f\u5b9a\u6b7b\u7684,\u53ef\u4ee5\u901a\u8fc7sourceSets.flavor\u6765\u81ea\u5b9a\u4e49,\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u624d\u662f\u5982\u4e0a\u6587\u4e2d\u6240\u8bf4\u7684\u8def\u5f84.\u5982:\\n\\t~~~\\n\\tsourceSets.flavor {\\n        java.srcDir \\"src-flavor\\"\\n        res.srcDir \\"res-flavor\\"\\n        jniLibs.srcDir \\"libs-flavor\\"\\n        manifest.srcFile \\"AndroidManifestflavor.xml\\"\\n        assets.srcDir \\"assets-flavor\\"\\n    }\\n    ~~~\\n\\n4. \u5404\u81ea\u7684Productflavor\u4e0b\u4e0d\u8981\u5b9a\u4e49\u548c`main`\u4e2d\u540c\u540d\u7684java\u7c7b\\n\\n5. packagingOptions\u7684\u4e0d\u8db3\\n\\t\\n\\tpackagingOptions\u867d\u7136\u53ef\u4ee5\u53d6\u6d88\u6389\u4e00\u4e9bso\u6587\u4ef6\u7684\u5f15\u7528,\u4f46\u662f\u6682\u65f6\u8fd8\u4e0d\u80fd\u505a\u5230\u5bf9\u4e0d\u540c\u7684`Productflavor`\u8fdb\u884c\u8bbe\u7f6e,\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e09\u65b9\u63d2\u4ef6https://github.com/Jween/android-soexcluder\\n\\n### \u81ea\u5df1\u7684\u65b9\u6848\\n\\n  \u6211\u91c7\u7528\u7684\u662f\u540c\u4e00\u4efdjava\u4ee3\u7801,\u540c\u4e00\u4e2a\u9759\u6001\u5e93,\u4e0d\u540c\u7684\u8d44\u6e90\u76ee\u5f55,\u4e0d\u540c\u7684`AndroidManifest.xml`\u6587\u4ef6.java\u4ee3\u7801\u901a\u8fc7`ant`\u63d2\u4ef6\u7684\u5b8f\u5b9a\u4e49\u5206\u522b\u751f\u6210\u4e0d\u540c\u7684java\u4ee3\u7801(\u53ea\u662f\u5728\u7f16\u8bd1\u65f6).\u8fd9\u6837\u5c31\u8fbe\u5230\u4e86\u7075\u6d3b\u6253\u5305\u7684\u7279\u70b9,\u6839\u636e\u4e0d\u540c\u7684\u5b8f\u5b9a\u4e49\u5b9a\u5236\u51fa\u4e0d\u540c\u7684apk,\u4ee3\u7801\u59cb\u7ec8\u7ef4\u62a4\u4e00\u4efd\\n\\n#### \u914d\u7f6e\\n\\n  \u4f7f\u7528ant\u7684\u63d2\u4ef6[antenna](http://antenna.sourceforge.net/wtkpreprocess.php),\u4e0b\u8f7d\u540e\u5c06jar\u5305\u653e\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u7684`tools`\u76ee\u5f55\u4e2d,\u7136\u540e\u5728`build.gradle`\u4e2d\u914d\u7f6e\\n\\n  ~~~\\n  def FreeMarcos = \\"FREE_VERSION\\"\\n  ant.properties[\'wtk.home\'] = \\"tools\\"\\n  ant.taskdef( name: \\"wtkpreprocess\\", classname: \\"de.pleumann.antenna.WtkPreprocess\\", classpath:\\"../tools/antenna-bin-1.0.2.jar\\")\\n  task PreprocessFree {\\n    inputs.dir \\"src\\"\\n    outputs.dir \\"src\\"\\n    doLast {\\n        ant.wtkpreprocess(\\n            srcdir: \\"src\\",\\n            destdir: \\"src\\", \\n            verbose:true,\\n            printsymbols:true,\\n            debuglevel:\\"debug\\",\\n            encoding:\\"UTF-8\\",\\n            symbols:FreeMarcos\\n        )\\n    }\\n  }\\n  ~~~\\n\\n  \u4e5f\u53ef\u4ee5\u7528ant\u7684\u65b9\u5f0f\u6765\u914d\u7f6e,\u53ef\u4ee5\u770b[\u8fd9\u7bc7\u6587\u7ae0](http://dannyhe.wang/2016/01/31/use-ant-in-gradle)\\n\\n#### \u4f7f\u7528\\n  \\n  \u6bd4\u5982\u5728java\u4ee3\u7801\u91cc\u8fd9\u6837\u4f7f\u7528:\\n\\n  ~~~\\n  public void buy(){\\n//#ifdef FREE_VERSION\\n        pay(0);\\n//#else \\n        pay(100.0);\\n//#endif\\n  }\\n  ~~~\\n\\n  \u6267\u884cgradle task:`gradle PreprocessFree`,\u7136\u540e\u91cd\u65b0\u6253\u5f00\u4e0a\u9762\u7684\u4ee3\u7801\u6587\u4ef6,\u5c31\u80fd\u770b\u89c1\u6e90\u7801\u7684\u53d8\u5316\u4e86:)\\n\\n#### \u6700\u540e\\n  \u5c06\u4e0a\u9762\u7684`PreprocessFree`\u4efb\u52a1\u52a0\u5230\u5bf9\u5e94\u7684`Productflavor`\u7f16\u8bd1\u4e2d,\u8fd9\u6837\u5728\u6211\u4eec\u6bcf\u6b21\u6267\u884c`assemble`\u4efb\u52a1\u7684\u65f6\u5019,\u4fbf\u4f1a\u81ea\u52a8\u6267\u884c\u4ee3\u7801\u7684\u751f\u6210\u4efb\u52a1\u3002\\n\\n  \u6bd4\u5982\u6211\u5b9a\u4e49\u7684flavor\u4e3a`free`\\n\\n  ~~~\\n  android.applicationVariants.all { variant ->\\n    variant.productFlavors.each { flavor ->\\n        if (flavor.name.equals(\'free\')) {\\n            variant.javaCompile.dependsOn(PreprocessFree)\\n        }\\n    }\\n  }\\n  ~~~\\n\\n  \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a`flavor`\u548c\u591a\u4e2aPreprocess\u4efb\u52a1,\u4e0d\u540c\u7684`flavor`\u4f7f\u7528\u4e0d\u540c\u7684java\u6e90\u7801,\u8fd9\u5c31\u5b9e\u73b0\u4e86\u591a\u4e2a\u7248\u672c\u7684\u9700\u6c42\uff0c\u800c\u4e14\u4e5f\u4e0d\u9700\u8981\u5c06\u6e90\u7801\u5206\u76ee\u5f55\u653e\u4e86\u3002\\n  happy coding :)"},{"id":"/2016/github-link-with-next","metadata":{"permalink":"/2016/github-link-with-next","source":"@site/blog/2016/github-link-with-next.md","title":"\u8c08\u8c08next\u4e3b\u9898\u5982\u4f55\u6dfb\u52a0\\"Fork me on Github\\"","description":"\u8bf4\u8bf4\u8fd9\u4e2a\u7ad9\u70b9\u662f\u5982\u4f55\u6dfb\u52a0\\"Fork me on Github\\",\u5982\u679c\u53ea\u662f\u7b80\u5355\u7684\u6dfb\u52a0\u53ea\u9700\u8981\u53c2\u8003github\u7684\u6587\u6863,","date":"2016-03-12T22:59:19.000Z","tags":[{"inline":true,"label":"Next","permalink":"/tags/next"}],"readingTime":1.225,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"\u8c08\u8c08next\u4e3b\u9898\u5982\u4f55\u6dfb\u52a0\\"Fork me on Github\\"","date":"2016-03-12T22:59:19.000Z","tags":["Next"],"categories":null},"unlisted":false,"prevItem":{"title":"\u5bf9Android\u7684Gradle\u63d2\u4ef6\u7684\u7406\u89e3","permalink":"/2016/think-about-android-gradle"},"nextItem":{"title":"\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c06iOS\u4e2d\u7684NSLog\u5199\u5165\u6587\u4ef6","permalink":"/2016/simple-write-ios-log"}},"content":"\u8bf4\u8bf4\u8fd9\u4e2a\u7ad9\u70b9\u662f\u5982\u4f55\u6dfb\u52a0\\"Fork me on Github\\",\u5982\u679c\u53ea\u662f\u7b80\u5355\u7684\u6dfb\u52a0\u53ea\u9700\u8981\u53c2\u8003[github\u7684\u6587\u6863](https://github.com/blog/273-github-ribbons),\\n\u5c06\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\u6dfb\u52a0\u5230\u4e3b\u9898\u6587\u4ef6\u5939\u4e0b`layout`\u6587\u4ef6\u5939\u4e0b\u7684`_layout.swig`\u6587\u4ef6\u4e2d\\n\\n\x3c!-- truncate --\x3e\\n~~~html\\n<a href=\\"https://github.com/you\\"><img style=\\"position: absolute; top: 0; left: 0; border: 0;\\" src=\\"https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67\\" alt=\\"Fork me on GitHub\\" data-canonical-src=\\"https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png\\"></a>\\n~~~\\n\\n\\n\u6bd4\u5982\u6211\u7684`github`\u5730\u5740\u4e3a:`https://github.com/dannyjiajia`\\n\u6240\u4ee5\u4e0a\u9762\u7684\u4ee3\u7801\u6539\u4e3a:\\n\\n~~~html\\n<a href=\\"https://github.com/dannyjiajia\\"><img style=\\"position: absolute; top: 0; left: 0; border: 0;\\" src=\\"https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67\\" alt=\\"Fork me on GitHub\\" data-canonical-src=\\"https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png\\"></a>\\n~~~\\n\\n**\u4f46\u662f\u8fd9\u6837\u4f1a\u6709\u4e2a\u95ee\u9898\uff1a\u624b\u673a\u4e0a\u7684\u9875\u9762\u4e5f\u4f1a\u662f\u8fd9\u4e2a\u6548\u679c,\u5176\u4ed6\u4e3b\u9898\u4e0d\u77e5\u9053\uff0c`next`\u4e3b\u9898\u4f1a\u628a\u9875\u9762\u7684\u5bfc\u822a\u83dc\u5355\u7ed9\u6321\u4f4f\u3002\u6211\u8fd9\u91cc\u91c7\u53d6\u7684\u65b9\u5f0f\u662f\u53ea\u5728`\u684c\u9762\u7248`\u7684\u9875\u9762\u4e0a\u6dfb\u52a0\u3002**\\n\\n~~\u4fee\u6539`/themes/next/source/js/src/schemes/pisces.js`~~\\n\u5176\u5b9e\u53ef\u4ee5\u7edf\u4e00\u4fee\u6539\u8fd9\u4e2a\u6587\u4ef6:`/themes/next/source/js/src/motion.js`\\n\\n\u5728`$(document).ready`\u51fd\u6570\u5185\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\\n\\n~~~js\\nNexT.utils.isDesktop() && $(document.body).append(\'\u8fd9\u91cc\u7c98\u8d34\u4f60\u4fee\u6539\u540e\u7684html\u4ee3\u7801\');\\n~~~\\n\\nover~ \u8fd9\u6837\u5c31\u53ea\u4f1a\u5728\u684c\u9762\u7248\u7684\u7f51\u9875\u5185\u663e\u793a\\"Fork me on Github\\""},{"id":"/2016/simple-write-ios-log","metadata":{"permalink":"/2016/simple-write-ios-log","source":"@site/blog/2016/simple-write-ios-log.md","title":"\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c06iOS\u4e2d\u7684NSLog\u5199\u5165\u6587\u4ef6","description":"~~~objectivec","date":"2016-01-31T17:05:29.000Z","tags":[{"inline":true,"label":"iOS","permalink":"/tags/i-os"}],"readingTime":0.42,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c06iOS\u4e2d\u7684NSLog\u5199\u5165\u6587\u4ef6","date":"2016-01-31T17:05:29.000Z","tags":["iOS"],"categories":null},"unlisted":false,"prevItem":{"title":"\u8c08\u8c08next\u4e3b\u9898\u5982\u4f55\u6dfb\u52a0\\"Fork me on Github\\"","permalink":"/2016/github-link-with-next"},"nextItem":{"title":"\u5982\u4f55\u5728window phone\u63a7\u5236\u5c4f\u5e55\u5e38\u4eae","permalink":"/2016/request-display-always-in-wp"}},"content":"~~~objectivec\\n#ifdef DEBUG\\n- (void) redirectConsoleLogToDocumentFolder {\\n    \\n    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\\n    NSString *documentsDirectory = [paths objectAtIndex:0];\\n    NSString *logPath = [documentsDirectory stringByAppendingPathComponent:@\\"iOS.log\\"];\\n    freopen([logPath cStringUsingEncoding:NSUTF8StringEncoding],\\"a+\\",stderr);\\n    NSDateFormatter *formatter = [[NSDateFormatter alloc]init];\\n    [formatter setDateFormat:@\\"yyyy-MM-dd HH:mm:ss\\"];\\n    NSString *time = [formatter stringFromDate:[NSDate date]];\\n    NSLog(@\\"-------------- Start Log [%@] --------------\\",time);\\n    [formatter release];\\n}\\n#endif\\n~~~\\n\\n\u5728\u7a0b\u5e8f\u542f\u52a8\u7684\u65f6\u5019\u8c03\u7528\u5373\u53ef,\u6240\u6709\u7684NSLog\u65e5\u5fd7\u90fd\u4f1a\u8bb0\u5f55\u5230documents\u4e0b\u7684iOS.log\u5185\\n\\n~~~objectivec\\n#ifdef DEBUG\\n[self redirectConsoleLogToDocumentFolder]; \\n#endif\\n~~~"},{"id":"/2016/request-display-always-in-wp","metadata":{"permalink":"/2016/request-display-always-in-wp","source":"@site/blog/2016/request-display-always-in-wp.md","title":"\u5982\u4f55\u5728window phone\u63a7\u5236\u5c4f\u5e55\u5e38\u4eae","description":"\u5728WindowPhone\u4e0b\u7981\u7528\u9501\u5c4f\u7684\u4e8b\u4ef6","date":"2016-01-31T16:54:42.000Z","tags":[{"inline":true,"label":"Windows Phone","permalink":"/tags/windows-phone"},{"inline":true,"label":"Windows Mobile","permalink":"/tags/windows-mobile"}],"readingTime":0.645,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"\u5982\u4f55\u5728window phone\u63a7\u5236\u5c4f\u5e55\u5e38\u4eae","date":"2016-01-31T16:54:42.000Z","tags":["Windows Phone","Windows Mobile"],"categories":null},"unlisted":false,"prevItem":{"title":"\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c06iOS\u4e2d\u7684NSLog\u5199\u5165\u6587\u4ef6","permalink":"/2016/simple-write-ios-log"},"nextItem":{"title":"ant\u63d2\u4ef6Antenna\u5b9e\u73b0java\u4ee3\u7801\u5b8f\u7f16\u8bd1","permalink":"/2016/use-ant-in-gradle"}},"content":"\u5728WindowPhone\u4e0b\u7981\u7528\u9501\u5c4f\u7684\u4e8b\u4ef6\\n\\n\x3c!-- truncate --\x3e\\n\\n### \u5b9a\u4e49\u5de5\u5177\u7c7b\\n~~~cpp\\npublic ref class Device sealed\\n{\\nprivate:\\n\\tDevice(){ m_requestActivd = false; };\\n\\tWindows::System::Display::DisplayRequest^ m_display_request;\\n\\tbool m_requestActivd;\\npublic:\\n\\tvoid DisplayRequestActive()\\n\\t{\\n\\t\\tif (m_requestActivd) //\u5982\u679c\u91cd\u590d\u8c03\u7528\u4f1a\u629b\u51fa\u9519\u8bef\\n\\t\\t{\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tif (nullptr == m_display_request)\\n\\t\\t{\\n\\t\\t\\tm_display_request = ref new Windows::System::Display::DisplayRequest();\\n\\t\\t}\\n\\t\\tm_display_request->RequestActive();\\n\\t\\tm_requestActivd = true;\\n\\t}\\n\\n\\tvoid DisplayRequestRelease()\\n\\t{\\n\\t\\tif (!m_requestActivd)\\n\\t\\t{\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tif (nullptr != m_display_request)\\n\\t\\t{\\n\\t\\t\\tm_display_request->RequestRelease();\\n\\t\\t\\tm_requestActivd = false;\\n\\t\\t}\\n\\t}\\n\\tstatic property Device^ Instance\\n\\t{\\n\\t\\tDevice^ get()\\n\\t\\t{\\n\\t\\t\\tstatic Device^ instance = ref new Device();\\n\\t\\t\\treturn instance;\\n\\t\\t}\\n\\t}\\n}\\n~~~\\n\\n### \u4f7f\u7528\\n~~~\\n//\u5c4f\u5e55\u5e38\u4eae\\nDevice::Instance->DisplayRequestActive();\\n//\u5173\u95ed\u5c4f\u5e55\u5e38\u4eae\\nDevice::Instance->DisplayRequestRelease();\\n~~~\\n\\nover~~"},{"id":"/2016/use-ant-in-gradle","metadata":{"permalink":"/2016/use-ant-in-gradle","source":"@site/blog/2016/use-ant-in-gradle.md","title":"ant\u63d2\u4ef6Antenna\u5b9e\u73b0java\u4ee3\u7801\u5b8f\u7f16\u8bd1","description":"\u8fd8\u6ca1\u600e\u4e48\u7814\u7a76\u8fc7android studio,\u4ee5\u524d\u4e00\u76f4\u4e60\u60ef\u7528eclipse+ant+adt\u5f00\u53d1android.\u4f46\u662f\u770b\u5230\u5f88\u591a\u7b2c\u4e09\u65b9sdk\u90fd\u662f\u53d1\u5e03aar\u8fd9\u79cd\u5305,\u5982FB\u3002\u771f\u5fc3\u4e0d\u60f3\u8d39\u795e\u53bb\u81ea\u5df1\u628a\u5b83\u6784\u5efa\u6210eclipse\u9879\u76ee\u3002\u4e8e\u662f\u5f00\u59cb\u5b66\u4e60android studio...","date":"2016-01-31T16:28:28.000Z","tags":[{"inline":true,"label":"Android","permalink":"/tags/android"},{"inline":true,"label":"Android Studio","permalink":"/tags/android-studio"},{"inline":true,"label":"Gradle","permalink":"/tags/gradle"},{"inline":true,"label":"Ant","permalink":"/tags/ant"},{"inline":true,"label":"Antenna","permalink":"/tags/antenna"}],"readingTime":1.1,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"ant\u63d2\u4ef6Antenna\u5b9e\u73b0java\u4ee3\u7801\u5b8f\u7f16\u8bd1","date":"2016-01-31T16:28:28.000Z","tags":["Android","Android Studio","Gradle","Ant","Antenna"]},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u5728window phone\u63a7\u5236\u5c4f\u5e55\u5e38\u4eae","permalink":"/2016/request-display-always-in-wp"},"nextItem":{"title":"\u5982\u4f55\u5728cmake\u91cc\u5f15\u7528\u52a8\u6001\u5e93\u7684dll\u6587\u4ef6","permalink":"/2015/how-to-copy-file-in-cmake"}},"content":"\u8fd8\u6ca1\u600e\u4e48\u7814\u7a76\u8fc7android studio,\u4ee5\u524d\u4e00\u76f4\u4e60\u60ef\u7528eclipse+ant+adt\u5f00\u53d1android.\u4f46\u662f\u770b\u5230\u5f88\u591a\u7b2c\u4e09\u65b9sdk\u90fd\u662f\u53d1\u5e03aar\u8fd9\u79cd\u5305,\u5982FB\u3002\u771f\u5fc3\u4e0d\u60f3\u8d39\u795e\u53bb\u81ea\u5df1\u628a\u5b83\u6784\u5efa\u6210eclipse\u9879\u76ee\u3002\u4e8e\u662f\u5f00\u59cb\u5b66\u4e60android studio...\\n\x3c!-- truncate --\x3e\\n\u76f4\u63a5\u4e0a\u914d\u7f6e\\n\\napp\u4e0b\u7684`build.gradle`:\\n\\n~~~shell\\nant.importBuild \'../Antenna.xml\' //\u5bfc\u5165ant\u914d\u7f6e\\npreBuild.dependsOn(preprocess) //\u6784\u5efa\u4f9d\u8d56\u4e8epreprocess\u4efb\u52a1\\n~~~\\n\\n\\n\u7136\u540e\u65b0\u5efa`Antenna.xml`\u4e0e`app`\u76ee\u5f55\u540c\u7ea7\\n\\n~~~xml\\n\\n<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<project name=\\"Antenna\\" default=\\"preprocess\\">\\n<property name=\\"wtk.home\\" value=\\"tools\\"/>\\n<taskdef resource=\\"antenna.properties\\" classpath=\\"tools/antenna-bin-1.0.2.jar\\"/>\\n\\t<target name=\\"preprocess\\" description=\\"preprocess java source code with marco in antenna_predefines.txt\\">\\n\\t\\t<wtkpreprocess\\n\\t\\t\\tverbose=\\"true\\"\\n\\t\\t\\tsrcdir=\\"app/src/main/java\\"\\n\\t\\t\\tdestdir=\\"app/src/main/java\\"\\n\\t\\t\\tprintsymbols=\\"true\\"\\n\\t\\t\\tdebuglevel=\\"debug\\"\\n\\t\\t\\tencoding=\\"UTF-8\\">\\n\\t\\t\\t<symbols_file name=\\"antenna_predefines.txt\\"/>\\n\\t\\t</wtkpreprocess>\\n\\t</target>\\n</project>\\n\\n~~~\\n\\n\\n\u5f53\u7136\u4f60\u9700\u8981\u5728app\u540c\u7ea7\u76ee\u5f55\u5efa\u7acb\u6587\u4ef6\u5939`tools`,\u653e\u5165\u63d2\u4ef6`Antenna`\u7684jar\u5305,\u5176\u6b21\u4f60\u7684\u73af\u5883\u53d8\u91cf\u4e2d\u9700\u8981\u5df2\u7ecf\u5b89\u88c5\u7684`ant`\u73af\u5883\\n\u4f60\u8fd8\u9700\u8981\u65b0\u5efa\u4e00\u4e2a`antenna_predefines.txt`\u6587\u4ef6\u4f4d\u4e8e`app`\u6587\u4ef6\u5939\u7684\u540c\u7ea7\u6587\u4ef6\u5939\u4e0b,\u7528\u6765\u5b58\u653e`Antenna`\u7684\u5b8f\u5b9a\u4e49"},{"id":"/2015/how-to-copy-file-in-cmake","metadata":{"permalink":"/2015/how-to-copy-file-in-cmake","source":"@site/blog/2015/how-to-copy-file-in-cmake.md","title":"\u5982\u4f55\u5728cmake\u91cc\u5f15\u7528\u52a8\u6001\u5e93\u7684dll\u6587\u4ef6","description":"\u5728vs\u91cc\u5f15\u7528\u7b2c\u4e09\u65b9\u52a8\u6001\u5e93\u7684\u65f6\u5019\u9700\u8981\u7528\u5230dll\u6587\u4ef6,\u6211\u4eec\u5982\u4f55\u5728cmake\u7684\u811a\u672c\u91cc\u5b9a\u4e49\u81ea\u52a8\u62f7\u8d1d.","date":"2015-12-15T12:44:26.000Z","tags":[{"inline":true,"label":"Windows","permalink":"/tags/windows"},{"inline":true,"label":"cmake","permalink":"/tags/cmake"}],"readingTime":0.51,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"\u5982\u4f55\u5728cmake\u91cc\u5f15\u7528\u52a8\u6001\u5e93\u7684dll\u6587\u4ef6","date":"2015-12-15T12:44:26.000Z","tags":["Windows","cmake"],"categories":null,"updated":"2015-12-15T12:52:19.000Z"},"unlisted":false,"prevItem":{"title":"ant\u63d2\u4ef6Antenna\u5b9e\u73b0java\u4ee3\u7801\u5b8f\u7f16\u8bd1","permalink":"/2016/use-ant-in-gradle"},"nextItem":{"title":"Python\u6253\u5370\u7684\u4e00\u4e2a\u4f8b\u5b50","permalink":"/2015/python-logging"}},"content":"\u5728vs\u91cc\u5f15\u7528\u7b2c\u4e09\u65b9\u52a8\u6001\u5e93\u7684\u65f6\u5019\u9700\u8981\u7528\u5230dll\u6587\u4ef6,\u6211\u4eec\u5982\u4f55\u5728cmake\u7684\u811a\u672c\u91cc\u5b9a\u4e49\u81ea\u52a8\u62f7\u8d1d.\\n\\n[http://stackoverflow.com/questions/10671916/how-to-copy-dll-files-into-the-same-folder-as-the-executable-using-cmake](http://stackoverflow.com/questions/10671916/how-to-copy-dll-files-into-the-same-folder-as-the-executable-using-cmake)\\n\\n\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50:\\n\x3c!-- truncate --\x3e\\n~~~cmake\\n# CompressETCTexture cmake file\\n# cmake -GXcode\\n# by dannyhe ver 0.0.1\\n\\nCMAKE_MINIMUM_REQUIRED(VERSION 2.6)\\n\\nPROJECT(CompressETCTexture)\\n\\nSET(SRC_LIST main.cpp ETCCompress.cpp)\\n\\nADD_EXECUTABLE(CompressETCTexture ${SRC_LIST})\\n\\nIF(WIN32)  \\n    MESSAGE(STATUS \\"Use ZLIB 1.2.5 in zlib_win32\\")\\n    INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/zlib_win32/include)\\n\\tTARGET_LINK_LIBRARIES(CompressETCTexture ${PROJECT_SOURCE_DIR}/zlib_win32/prebuilt/libzlib) \\n\\tadd_custom_command(TARGET CompressETCTexture POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different \\"${PROJECT_SOURCE_DIR}/zlib_win32/prebuilt/zlib1.dll\\" \\"${CMAKE_CURRENT_BINARY_DIR}\\")\\nELSE(WIN32) \\nFIND_PACKAGE(zlib)\\nIF(ZLIB_FOUND)  \\n\\tINCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIRS})\\n\\tTARGET_LINK_LIBRARIES(CompressETCTexture ${ZLIB_LIBRARIES}) \\nELSE(ZLIB_FOUND)  \\n\\tMESSAGE(FATAL_ERROR \\"ZLIB library not found\\")  \\nENDIF(ZLIB_FOUND)  \\t\\nENDIF(WIN32)\\n~~~"},{"id":"/2015/python-logging","metadata":{"permalink":"/2015/python-logging","source":"@site/blog/2015/python-logging.md","title":"Python\u6253\u5370\u7684\u4e00\u4e2a\u4f8b\u5b50","description":"\u7528python\u80af\u5b9a\u662f\u4e3a\u4e86\u8de8\u5e73\u53f0\u7684\u4fbf\u5229,\u7528python\u65f6\u5728\u4e0d\u540c\u5e73\u53f0\u6253\u5370\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u3002","date":"2015-12-11T11:46:23.000Z","tags":[{"inline":true,"label":"Python","permalink":"/tags/python"},{"inline":true,"label":"Platform","permalink":"/tags/platform"},{"inline":true,"label":"Cocos2dx","permalink":"/tags/cocos-2-dx"}],"readingTime":1.11,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Python\u6253\u5370\u7684\u4e00\u4e2a\u4f8b\u5b50","date":"2015-12-11T11:46:23.000Z","tags":["Python","Platform","Cocos2dx"],"categories":null},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u5728cmake\u91cc\u5f15\u7528\u52a8\u6001\u5e93\u7684dll\u6587\u4ef6","permalink":"/2015/how-to-copy-file-in-cmake"},"nextItem":{"title":"lua\u7b80\u5355\u904d\u5386\u5b57\u7b26\u4e32\u5b57\u7b26","permalink":"/2015/simple-foreach-lua-string"}},"content":"\u7528python\u80af\u5b9a\u662f\u4e3a\u4e86\u8de8\u5e73\u53f0\u7684\u4fbf\u5229,\u7528python\u65f6\u5728\u4e0d\u540c\u5e73\u53f0\u6253\u5370\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u3002\\n\\n\\n> Windows\u548cmac\u7684\u7ec8\u7aef\u7f16\u7801\u4e0d\u4e00\u6837,\u5c24\u5176\u662f\u5728\u6253\u5370\u4e2d\u6587\u7684\u65f6\u5019\\n\\n\u6211\u91c7\u7528\u7684\u65b9\u6cd5\u662f\u5728windows\u4e0b\u5c06\u7f16\u7801\u8f6c\u6362\u4e3agbk\\n\\n> \u6253\u5370\u65f6\u5019\u6700\u597d\u80fd\u52a0\u4e0a\u989c\u8272\\n\\n\u4f7f\u7528`colorama`\u8fd9\u4e2a\u5e93\u6765\u5b9e\u73b0\\n\x3c!-- truncate --\x3e\\n### \u5bf9Logging\u7684\u5c01\u88c5\\n~~~python\\n# coding=utf-8\\n# DannyHe\\nimport os\\nimport sys\\nimport platform\\nimport time\\nfrom colorama import *\\ninit(autoreset=True)\\nclass Logging:\\n\\n    DEBUG_MODE = False\\n\\n    @staticmethod\\n    def _print(s, color=None):\\n        if sys.platform != \'win32\':\\n            print color + s\\n        else:\\n            print color + s.decode(\'utf-8\').encode(\\"GBK\\")\\n\\n    @staticmethod\\n    def debug(s):\\n        if Logging.DEBUG_MODE:\\n            localtime = time.strftime(\\n                \\"%a %H:%M:%S\\", time.localtime(time.time()))\\n            Logging._print(\\"[DEBUG]%s %s \\" % (localtime, s), Fore.RESET)\\n\\n    @staticmethod\\n    def info(s):\\n        localtime = time.strftime(\\"%a %H:%M:%S\\", time.localtime(time.time()))\\n        Logging._print(\\"[INFO]%s %s \\" % (localtime, s), Fore.CYAN)\\n\\n    @staticmethod\\n    def warning(s):\\n        localtime = time.strftime(\\"%a %H:%M:%S\\", time.localtime(time.time()))\\n        Logging._print(\\"[WARNING]%s %s \\" % (localtime, s), Fore.YELLOW)\\n\\n    @staticmethod\\n    def error(s):\\n        localtime = time.strftime(\\"%a %H:%M:%S\\", time.localtime(time.time()))\\n        Logging._print(\\"[ERROR]%s %s \\" % (localtime, s), Fore.RED)\\n~~~\\n\\n### \u4f7f\u7528\\n\\n~~~python\\n# coding=utf-8\\n# DannyHe\\nfrom Logging import *\\n\\nLogging.DEBUG_MODE = True\\n\\nLogging.debug(\\"hello world\\")\\nLogging.info(\\"\u4f60\u597d\\")\\n~~~"},{"id":"/2015/simple-foreach-lua-string","metadata":{"permalink":"/2015/simple-foreach-lua-string","source":"@site/blog/2015/simple-foreach-lua-string.md","title":"lua\u7b80\u5355\u904d\u5386\u5b57\u7b26\u4e32\u5b57\u7b26","description":"~~~lua","date":"2015-12-07T15:00:44.000Z","tags":[{"inline":true,"label":"lua","permalink":"/tags/lua"}],"readingTime":0.08,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"lua\u7b80\u5355\u904d\u5386\u5b57\u7b26\u4e32\u5b57\u7b26","date":"2015-12-07T15:00:44.000Z","tags":["lua"],"categories":null},"unlisted":false,"prevItem":{"title":"Python\u6253\u5370\u7684\u4e00\u4e2a\u4f8b\u5b50","permalink":"/2015/python-logging"},"nextItem":{"title":"Visual Studio\u76f8\u5173","permalink":"/2015/visual-studio"}},"content":"~~~lua\\nfunction string_foreach(str,func)\\n\\tstr:gsub(\\".\\", function(c)\\n\\t\\tfunc(c)\\n\\tend)\\nend\\n\\nlocal test = \'abcd\'\\n\\nstring_foreach(test,function(char)\\n\\tprint(char)\\nend)\\n~~~"},{"id":"/2015/visual-studio","metadata":{"permalink":"/2015/visual-studio","source":"@site/blog/2015/visual-studio.md","title":"Visual Studio\u76f8\u5173","description":"\u5b89\u88c5\u90e8\u5206","date":"2015-12-07T13:40:32.000Z","tags":[{"inline":true,"label":"Windows","permalink":"/tags/windows"},{"inline":true,"label":"Windows Mobile","permalink":"/tags/windows-mobile"},{"inline":true,"label":"Windows Phone","permalink":"/tags/windows-phone"}],"readingTime":0.355,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Visual Studio\u76f8\u5173","date":"2015-12-07T13:40:32.000Z","tags":["Windows","Windows Mobile","Windows Phone"],"categories":null},"unlisted":false,"prevItem":{"title":"lua\u7b80\u5355\u904d\u5386\u5b57\u7b26\u4e32\u5b57\u7b26","permalink":"/2015/simple-foreach-lua-string"}},"content":"## \u5b89\u88c5\u90e8\u5206\\n\\n### VS2013\u5e8f\u5217\u53f7\\n\\n\\tVisual Studio Ultimate 2013 KEY\uff08\u5bc6\u94a5\uff09\uff1aBWG7X-J98B3-W34RT-33B3R-JVYW9\\n\\n\\tVisual Studio Premium 2013 KEY\uff08\u5bc6\u94a5\uff09\uff1aFBJVC-3CMTX-D8DVP-RTQCT-92494\\n\\n\\tVisual Studio Professional 2013  KEY\uff08\u5bc6\u94a5\uff09\uff1a XDM3T-W3T3V-MGJWK-8BFVD-GVPKY\\n\\n\\tTeam Foundation Server 2013 KEY\uff08\u5bc6\u94a5\uff09\uff1aMHG9J-HHHX9-WWPQP-D8T7H-7KCQG\\n\\n### VS2015\u5e8f\u5217\u53f7\\n\\n\\t\u4e13\u4e1a\u7248\uff1aHMGNV-WCYXV-X7G9W-YCX63-B98R2\\n\\t\u4f01\u4e1a\u7248\uff1aHM6NR-QXX7C-DFW2Y-8B82K-WTYJV\\n\x3c!-- truncate --\x3e\\n## \u63d2\u4ef6\u90e8\u5206\\n\\n1. vs2013\u53ef\u7528\u63d2\u4ef6`vs assist x`"}]}}')}}]);