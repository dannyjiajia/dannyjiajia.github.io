"use strict";(self.webpackChunkdannyjiajia_github_io=self.webpackChunkdannyjiajia_github_io||[]).push([[4743],{3818:n=>{n.exports=JSON.parse('{"permalink":"/2016/gcd-and-runloop","source":"@site/blog/2016/gcd-and-runloop.md","title":"GCD\u4e0eRunLoop","description":"\u6700\u8fd1\u53d1\u73b0iOS\u4e2d\u7684RunLoop\u548cGCD\u88ab\u8ba8\u8bba\u7684\u633a\u591a\u7684,\u6211\u4e5f\u5199\u70b9\u590d\u4e60\u4e0b:)","date":"2016-06-24T10:33:15.000Z","tags":[{"inline":true,"label":"GCD","permalink":"/tags/gcd"},{"inline":true,"label":"RunLoop","permalink":"/tags/run-loop"},{"inline":true,"label":"iOS","permalink":"/tags/i-os"}],"readingTime":3.08,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"GCD\u4e0eRunLoop","date":"2016-06-24T10:33:15.000Z","tags":["GCD","RunLoop","iOS"]},"unlisted":false,"prevItem":{"title":"(cpp)cx\u4e2d\u5c06string\u8f6c\u6362\u6210GUID","permalink":"/2016/cpp-convert-string-to-guid"},"nextItem":{"title":"\u5982\u4f55\u8ba1\u7b97git\u53d8\u52a8\u7684\u6587\u4ef6\u5927\u5c0f","permalink":"/2016/calculate-git-changed-file-size"}}')},7974:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>u});var t=o(3818),r=o(4848),c=o(8453);const i={title:"GCD\u4e0eRunLoop",date:new Date("2016-06-24T10:33:15.000Z"),tags:["GCD","RunLoop","iOS"]},s=void 0,a={authorsImageUrls:[]},u=[{value:"GCD",id:"gcd",level:3},{value:"RunLoop",id:"runloop",level:3},{value:"\u6211\u7684\u603b\u7ed3",id:"\u6211\u7684\u603b\u7ed3",level:3},{value:"\u6700\u540e",id:"\u6700\u540e",level:3}];function d(n){const e={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:"\u6700\u8fd1\u53d1\u73b0iOS\u4e2d\u7684RunLoop\u548cGCD\u88ab\u8ba8\u8bba\u7684\u633a\u591a\u7684,\u6211\u4e5f\u5199\u70b9\u590d\u4e60\u4e0b:)"}),"\n",(0,r.jsx)(e.h3,{id:"gcd",children:"GCD"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-objectivec",children:'#import <Foundation/Foundation.h>\n\nint main()\n{\n    dispatch_queue_t globalQ = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\n    \n    /** \u5f02\u6b65\u4efb\u52a1 **/\n    dispatch_async(globalQ, ^{\n        NSLog(@"async task");\n    });\n    \n    /** \u540c\u6b65\u4efb\u52a1 **/\n    dispatch_sync(globalQ, ^{\n        NSLog(@"sync task");\n    });\n    NSLog(@"sync end");\n    \n    /** \u4e00\u6b21\u6027\u6267\u884c **/\n    static dispatch_once_t onceToken;\n    dispatch_once(&onceToken, ^{\n        NSLog(@"once task");\n    });\n    \n    /**  \u5ef6\u8fdf 2 \u79d2\u6267\u884c **/\n    double delayInSeconds = 2.0;\n    dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, delayInSeconds * NSEC_PER_SEC);\n    dispatch_after(popTime, globalQ, ^(void){\n        NSLog(@"delay task");\n    });\n    \n    \n    /** global queue\u662f\u5e76\u884c\u7684 **/\n    dispatch_async(globalQ, ^{\n        NSLog(@"global_queue_task_1");\n    });\n\n    \n    dispatch_async(globalQ, ^{\n        NSLog(@"global_queue_task_2");\n    });\n    \n    /** \u81ea\u5b9a\u4e49\u4e32\u884cqueue **/\n    dispatch_queue_t customSerialQ = dispatch_queue_create("customSerialQ", DISPATCH_QUEUE_SERIAL);\n    \n    dispatch_async(customSerialQ, ^{\n        NSLog(@"customSerialQ_task_1");\n    });\n    \n    \n    dispatch_async(customSerialQ, ^{\n        NSLog(@"customSerialQ_task_2");\n    });\n\n    \n    /** \u81ea\u5b9a\u4e49\u5e76\u884cqueue **/\n    dispatch_queue_t customConcurrentQ = dispatch_queue_create("customConcurrentQ", DISPATCH_QUEUE_CONCURRENT);\n    \n    dispatch_async(customConcurrentQ, ^{\n        NSLog(@"customConcurrentQ_task_1");\n    });\n    \n    \n    dispatch_async(customConcurrentQ, ^{\n        NSLog(@"customConcurrentQ_task_2");\n    });\n    \n    \n    /** \u5e76\u884c\u4efb\u52a1\u5f52\u603b **/\n    \n    dispatch_group_t group = dispatch_group_create();\n    dispatch_group_async(group, globalQ, ^{\n        NSLog(@"\u5e76\u884c\u6267\u884c\u7684\u7ebf\u7a0b1");\n    });\n    dispatch_group_async(group, globalQ, ^{\n        NSLog(@"\u5e76\u884c\u6267\u884c\u7684\u7ebf\u7a0b2");\n    });\n    dispatch_group_notify(group, globalQ, ^{\n       NSLog(@"\u5e76\u884c\u6267\u884c\u4efb\u52a1\u5b8c\u6210");\n    });\n    \n    /** dispatch_source **/\n    //1. timer\n    \n    dispatch_source_t gcd_timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0,globalQ);\n    dispatch_source_set_timer(gcd_timer, DISPATCH_TIME_NOW, 5ull * NSEC_PER_SEC, 0); //5s\n    dispatch_source_set_event_handler(gcd_timer, ^{\n        NSLog(@"gcd timer task");\n    });\n    dispatch_resume(gcd_timer);\n\n    //2. \u81ea\u5b9a\u4e49source\u4efb\u52a1\n    dispatch_source_t gcd_source = dispatch_source_create(DISPATCH_SOURCE_TYPE_DATA_ADD, 0, 0,globalQ);\n    dispatch_source_set_event_handler(gcd_source, ^{\n        NSLog(@"gcd source task");\n    });\n    dispatch_resume(gcd_source);\n    \n    //2s\u540e\u89e6\u53d1source\u4efb\u52a1\n    dispatch_after(popTime, globalQ, ^(void){\n        NSLog(@"fire gcd source task");\n        dispatch_source_merge_data(gcd_source, 1);\n    });\n    \n    /** \u4fe1\u53f7\u91cf **/\n    dispatch_semaphore_t semaphore = dispatch_semaphore_create(0);\n    \n    dispatch_async(globalQ, ^{\n        NSLog(@"\u5b8c\u6210\u4fe1\u53f7\u91cf\u4efb\u52a1");\n        dispatch_semaphore_signal(semaphore);//\u589e\u52a0\u4fe1\u53f7\u91cf\n    });\n    //\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\n    dispatch_time_t timeoutTime = dispatch_time(DISPATCH_TIME_NOW, 1ull*NSEC_PER_SEC);\n    if (dispatch_semaphore_wait(semaphore, timeoutTime)) {\n        NSLog(@"\u4fe1\u53f7\u91cf\u4efb\u52a1\u8d85\u65f6");\n    }\n    dispatch_main(); //\u6267\u884c\u63d0\u4ea4\u5230main queue\u4e2d\u7684blocks,\u5728iOS\u548cMac\u7684\u684c\u9762\u5e94\u7528\u4f60\u4e0d\u9700\u8981\u8c03\u7528\n}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"runloop",children:"RunLoop"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'#import <Foundation/Foundation.h>\n\nstatic void\n_perform(void *info __unused)\n{\n    printf("Source0 event\\n");\n}\n\nstatic void\n_timer(CFRunLoopTimerRef timer __unused, void *info)\n{\n    NSLog(@"Timer fire Source0");\n    CFRunLoopSourceSignal(info);\n}\n\nint main()\n{\n\n    /** \u6ce8\u518cobserver **/\n    CFRunLoopRef runLoop = CFRunLoopGetCurrent();\n    CFStringRef runLoopMode = kCFRunLoopDefaultMode;\n    CFRunLoopObserverRef observer = CFRunLoopObserverCreateWithHandler(kCFAllocatorDefault, kCFRunLoopAllActivities, true, 0, ^(CFRunLoopObserverRef observer, CFRunLoopActivity _) {\n        NSLog(@"observer event:%lu",_);\n    });\n    CFRunLoopAddObserver(runLoop, observer, runLoopMode);\n    \n    /** Source 0 **/\n    CFRunLoopSourceRef source;\n    CFRunLoopSourceContext source_context;\n    bzero(&source_context, sizeof(source_context));\n    source_context.perform = _perform;\n    source = CFRunLoopSourceCreate(NULL, 0, &source_context);\n    CFRunLoopAddSource(CFRunLoopGetCurrent(), source, kCFRunLoopDefaultMode);\n    \n    //2s\u540e\u89e6\u53d1source0\n    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, 2 * NSEC_PER_SEC), dispatch_get_main_queue(), ^(void){\n        CFRunLoopSourceSignal(source);\n    });\n    \n    /** Timer **/\n\n    CFRunLoopTimerRef timer;\n    CFRunLoopTimerContext timer_context;\n    bzero(&timer_context, sizeof(timer_context));\n    timer_context.info = source;\n    timer = CFRunLoopTimerCreate(NULL, CFAbsoluteTimeGetCurrent(), 5, 0, 0,\n                                 _timer, &timer_context);\n    CFRunLoopAddTimer(CFRunLoopGetCurrent(), timer, kCFRunLoopDefaultMode);\n    CFRunLoopRun();\n    \n}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"\u6211\u7684\u603b\u7ed3",children:"\u6211\u7684\u603b\u7ed3"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\u7cfb\u7edf\u901a\u8fc7RunLoop\u6267\u884c\u4e3b\u961f\u5217\u4e2d\u7684\u4efb\u52a1,\u8fd9\u4e2aRunLoop\u7531",(0,r.jsx)(e.code,{children:"UIApplicationMain"}),"\u6216\u8005",(0,r.jsx)(e.code,{children:"NSApplicationMain"}),"\u6216\u8005",(0,r.jsx)(e.code,{children:"CFRunLoopRun"}),"\u521b\u5efa"]}),"\n",(0,r.jsxs)(e.li,{children:["\u4e24\u4e2a\u4e0d\u540c\u7684Timer,",(0,r.jsx)(e.code,{children:"NSTimer"}),"\u4f9d\u8d56RunLoop\u6765\u6267\u884c,GCD\u7684Timer\u4e0d\u9700\u8981RunLoop\u5b58\u5728\u4e5f\u80fd\u6267\u884c"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"\u6700\u540e",children:"\u6700\u540e"}),"\n",(0,r.jsxs)(e.p,{children:["\u5199\u7684\u7528\u4f8b\u90fd\u662f\u5728Mac\u7684\u547d\u4ee4\u884c\u9879\u76ee\u4e0b\u6d4b\u8bd5\u7684,\u611f\u89c9\u66f4\u80fd\u8bf4\u660eRunLoop\u7684\u771f\u5b9e\u8fd0\u884c\u72b6\u6001,\u6bd4\u5982\u6d4b\u8bd5",(0,r.jsx)(e.code,{children:"NSTimer"}),",\u5982\u679c\u4e0d\u6267\u884c",(0,r.jsx)(e.code,{children:"CFRunLoopRun"}),",\u4e3b\u7ebf\u7a0b\u662f\u6ca1\u6709",(0,r.jsx)(e.code,{children:"RunLoop"}),"\u7684,",(0,r.jsx)(e.code,{children:"NSTimer"}),"\u4e5f\u4f1a\u5931\u6548,\u800c\u5728",(0,r.jsx)(e.code,{children:"iOS"}),"\u9879\u76ee\u4e2d,\u6574\u4e2a\u751f\u547d\u5468\u671f\u90fd\u662f\u57fa\u4e8eRunLoop,",(0,r.jsx)(e.code,{children:"NSTimer"}),"\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u65e0\u6548\u7684\u60c5\u51b5.(\u6307\u5b9a\u7279\u6b8a",(0,r.jsx)(e.code,{children:"Mode"}),"\u7684\u4efb\u52a1\u9664\u5916)"]})]})}function p(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>i,x:()=>s});var t=o(6540);const r={},c=t.createContext(r);function i(n){const e=t.useContext(c);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),t.createElement(c.Provider,{value:e},n.children)}}}]);