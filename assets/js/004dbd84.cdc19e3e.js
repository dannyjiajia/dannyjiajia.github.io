"use strict";(self.webpackChunkdannyjiajia_github_io=self.webpackChunkdannyjiajia_github_io||[]).push([[1989],{1132:t=>{t.exports=JSON.parse('{"permalink":"/2016/calculate-git-changed-file-size","source":"@site/blog/2016/calculate-git-changed-file-size.md","title":"\u5982\u4f55\u8ba1\u7b97git\u53d8\u52a8\u7684\u6587\u4ef6\u5927\u5c0f","description":"~~~bash","date":"2016-05-12T16:35:26.000Z","tags":[{"inline":true,"label":"git","permalink":"/tags/git"},{"inline":true,"label":"shell","permalink":"/tags/shell"}],"readingTime":0.815,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"\u5982\u4f55\u8ba1\u7b97git\u53d8\u52a8\u7684\u6587\u4ef6\u5927\u5c0f","date":"2016-05-12T16:35:26.000Z","tags":["git","shell"]},"unlisted":false,"prevItem":{"title":"GCD\u4e0eRunLoop","permalink":"/2016/gcd-and-runloop"},"nextItem":{"title":"Sublime Text 3 License Key - CRACK","permalink":"/2016/sublime_crack"}}')},6879:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var i=n(1132),o=n(4848),a=n(8453);const r={title:"\u5982\u4f55\u8ba1\u7b97git\u53d8\u52a8\u7684\u6587\u4ef6\u5927\u5c0f",date:new Date("2016-05-12T16:35:26.000Z"),tags:["git","shell"]},s=void 0,l={authorsImageUrls:[]},u=[];function c(t){const e={code:"code",pre:"pre",...(0,a.R)(),...t.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'#!/bin/bash\n# The tool to get the total size of autoupdate \n# by Dannyhe\n\nfunction NotSupport()\n{\n\techo "Not support $OSTYPE"\n\texit -1\n}\n\nfunction main()\n{\n\techo "os: $OSTYPE"\n\techo "size:"\n\tif [[ "$OSTYPE" == "linux-gnu" ]]; then\n\t     NotSupport\n\telif [[ "$OSTYPE" == "darwin"* ]]; then\n         # Mac OSX\n\t     git log --name-status -1 | grep -E \'^[A-Z]\\b\' | sort -k 2,2 -u | grep -E "M|A" | awk \'{print $2}\' | xargs stat -f "%z" | awk \'{t+=$0}END{print t/(1024*1024)" Mb"}\'\n\telif [[ "$OSTYPE" == "cygwin" ]]; then\n        # POSIX compatibility layer and Linux environment emulation for WindowsNotSupport\n        NotSupport\n\telif [[ "$OSTYPE" == "msys" ]]; then\n        # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)\n        git log --name-status -1 | grep -E \'^[A-Z]\\b\' | sort -k 2,2 -u | grep -E "M|A" | awk \'{print $2}\' | xargs du -b | awk \'{t+=$0}END{print t/(1024*1024)" Mb"}\'\n\telif [[ "$OSTYPE" == "freebsd"* ]]; then\n\t\tNotSupport\n\telse\n\t\tNotSupport\n\tfi\n}\n\nmain\n'})})}function p(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(c,{...t})}):c(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>s});var i=n(6540);const o={},a=i.createContext(o);function r(t){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),i.createElement(a.Provider,{value:e},t.children)}}}]);